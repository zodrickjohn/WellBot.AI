{"ast":null,"code":"const lottie = /* @__PURE__ */(() => {\n  if (typeof navigator === \"undefined\" || typeof document === \"undefined\" || typeof CanvasRenderingContext2D === \"undefined\") return {};\n  const svgNS = \"http://www.w3.org/2000/svg\";\n  let locationHref = \"\";\n  let _useWebWorker = false;\n  const initialDefaultFrame = -999999;\n  const setWebWorker = flag => {\n    _useWebWorker = !!flag;\n  };\n  const getWebWorker = () => _useWebWorker;\n  const setLocationHref = value => {\n    locationHref = value;\n  };\n  const getLocationHref = () => locationHref;\n  function createTag(type) {\n    return document.createElement(type);\n  }\n  function extendPrototype(sources, destination) {\n    var i;\n    var len = sources.length;\n    var sourcePrototype;\n    for (i = 0; i < len; i += 1) {\n      sourcePrototype = sources[i].prototype;\n      for (var attr in sourcePrototype) {\n        if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr)) destination.prototype[attr] = sourcePrototype[attr];\n      }\n    }\n  }\n  function getDescriptor(object, prop) {\n    return Object.getOwnPropertyDescriptor(object, prop);\n  }\n  function createProxyFunction(prototype) {\n    function ProxyFunction() {}\n    ProxyFunction.prototype = prototype;\n    return ProxyFunction;\n  }\n  const audioControllerFactory = function () {\n    function AudioController(audioFactory) {\n      this.audios = [];\n      this.audioFactory = audioFactory;\n      this._volume = 1;\n      this._isMuted = false;\n    }\n    AudioController.prototype = {\n      addAudio: function (audio) {\n        this.audios.push(audio);\n      },\n      pause: function () {\n        var i;\n        var len = this.audios.length;\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].pause();\n        }\n      },\n      resume: function () {\n        var i;\n        var len = this.audios.length;\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].resume();\n        }\n      },\n      setRate: function (rateValue) {\n        var i;\n        var len = this.audios.length;\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].setRate(rateValue);\n        }\n      },\n      createAudio: function (assetPath) {\n        if (this.audioFactory) {\n          return this.audioFactory(assetPath);\n        }\n        if (window.Howl) {\n          return new window.Howl({\n            src: [assetPath]\n          });\n        }\n        return {\n          isPlaying: false,\n          play: function () {\n            this.isPlaying = true;\n          },\n          seek: function () {\n            this.isPlaying = false;\n          },\n          playing: function () {},\n          rate: function () {},\n          setVolume: function () {}\n        };\n      },\n      setAudioFactory: function (audioFactory) {\n        this.audioFactory = audioFactory;\n      },\n      setVolume: function (value) {\n        this._volume = value;\n        this._updateVolume();\n      },\n      mute: function () {\n        this._isMuted = true;\n        this._updateVolume();\n      },\n      unmute: function () {\n        this._isMuted = false;\n        this._updateVolume();\n      },\n      getVolume: function () {\n        return this._volume;\n      },\n      _updateVolume: function () {\n        var i;\n        var len = this.audios.length;\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1));\n        }\n      }\n    };\n    return function () {\n      return new AudioController();\n    };\n  }();\n  const createTypedArray = function () {\n    function createRegularArray(type, len) {\n      var i = 0;\n      var arr = [];\n      var value;\n      switch (type) {\n        case \"int16\":\n        case \"uint8c\":\n          value = 1;\n          break;\n        default:\n          value = 1.1;\n          break;\n      }\n      for (i = 0; i < len; i += 1) {\n        arr.push(value);\n      }\n      return arr;\n    }\n    function createTypedArrayFactory(type, len) {\n      if (type === \"float32\") {\n        return new Float32Array(len);\n      }\n      if (type === \"int16\") {\n        return new Int16Array(len);\n      }\n      if (type === \"uint8c\") {\n        return new Uint8ClampedArray(len);\n      }\n      return createRegularArray(type, len);\n    }\n    if (typeof Uint8ClampedArray === \"function\" && typeof Float32Array === \"function\") {\n      return createTypedArrayFactory;\n    }\n    return createRegularArray;\n  }();\n  function createSizedArray(len) {\n    return Array.apply(null, {\n      length: len\n    });\n  }\n  let subframeEnabled = true;\n  let expressionsPlugin = null;\n  let idPrefix$1 = \"\";\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  const bmPow = Math.pow;\n  const bmSqrt = Math.sqrt;\n  const bmFloor = Math.floor;\n  const bmMin = Math.min;\n  const BMMath = {};\n  (function () {\n    var propertyNames = [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atanh\", \"atan2\", \"ceil\", \"cbrt\", \"expm1\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"floor\", \"fround\", \"hypot\", \"imul\", \"log\", \"log1p\", \"log2\", \"log10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"E\", \"LN10\", \"LN2\", \"LOG10E\", \"LOG2E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\n    var i;\n    var len = propertyNames.length;\n    for (i = 0; i < len; i += 1) {\n      BMMath[propertyNames[i]] = Math[propertyNames[i]];\n    }\n  })();\n  BMMath.random = Math.random;\n  BMMath.abs = function (val) {\n    var tOfVal = typeof val;\n    if (tOfVal === \"object\" && val.length) {\n      var absArr = createSizedArray(val.length);\n      var i;\n      var len = val.length;\n      for (i = 0; i < len; i += 1) {\n        absArr[i] = Math.abs(val[i]);\n      }\n      return absArr;\n    }\n    return Math.abs(val);\n  };\n  let defaultCurveSegments = 150;\n  const degToRads = Math.PI / 180;\n  const roundCorner = 0.5519;\n  function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {\n    this.type = type;\n    this.currentTime = currentTime;\n    this.totalTime = totalTime;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n  function BMCompleteEvent(type, frameMultiplier) {\n    this.type = type;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n  function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {\n    this.type = type;\n    this.currentLoop = currentLoop;\n    this.totalLoops = totalLoops;\n    this.direction = frameMultiplier < 0 ? -1 : 1;\n  }\n  function BMSegmentStartEvent(type, firstFrame, totalFrames) {\n    this.type = type;\n    this.firstFrame = firstFrame;\n    this.totalFrames = totalFrames;\n  }\n  function BMDestroyEvent(type, target) {\n    this.type = type;\n    this.target = target;\n  }\n  function BMRenderFrameErrorEvent(nativeError, currentTime) {\n    this.type = \"renderFrameError\";\n    this.nativeError = nativeError;\n    this.currentTime = currentTime;\n  }\n  function BMConfigErrorEvent(nativeError) {\n    this.type = \"configError\";\n    this.nativeError = nativeError;\n  }\n  const createElementID = function () {\n    var _count = 0;\n    return function createID() {\n      _count += 1;\n      return idPrefix$1 + \"__lottie_element_\" + _count;\n    };\n  }();\n  function HSVtoRGB(h, s, v) {\n    var r;\n    var g;\n    var b;\n    var i;\n    var f;\n    var p;\n    var q;\n    var t;\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n    return [r, g, b];\n  }\n  function RGBtoHSV(r, g, b) {\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var d = max - min;\n    var h;\n    var s = max === 0 ? 0 : d / max;\n    var v = max / 255;\n    switch (max) {\n      case min:\n        h = 0;\n        break;\n      case r:\n        h = g - b + d * (g < b ? 6 : 0);\n        h /= 6 * d;\n        break;\n      case g:\n        h = b - r + d * 2;\n        h /= 6 * d;\n        break;\n      case b:\n        h = r - g + d * 4;\n        h /= 6 * d;\n        break;\n    }\n    return [h, s, v];\n  }\n  function addSaturationToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[1] += offset;\n    if (hsv[1] > 1) {\n      hsv[1] = 1;\n    } else if (hsv[1] <= 0) {\n      hsv[1] = 0;\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n  function addBrightnessToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[2] += offset;\n    if (hsv[2] > 1) {\n      hsv[2] = 1;\n    } else if (hsv[2] < 0) {\n      hsv[2] = 0;\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n  function addHueToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\n    hsv[0] += offset / 360;\n    if (hsv[0] > 1) {\n      hsv[0] -= 1;\n    } else if (hsv[0] < 0) {\n      hsv[0] += 1;\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\n  }\n  (function () {\n    var colorMap = [];\n    var i;\n    var hex;\n    for (i = 0; i < 256; i += 1) {\n      hex = i.toString(16);\n      colorMap[i] = hex.length === 1 ? \"0\" + hex : hex;\n    }\n    return function (r, g, b) {\n      if (r < 0) {\n        r = 0;\n      }\n      if (g < 0) {\n        g = 0;\n      }\n      if (b < 0) {\n        b = 0;\n      }\n      return \"#\" + colorMap[r] + colorMap[g] + colorMap[b];\n    };\n  })();\n  const setSubframeEnabled = flag => {\n    subframeEnabled = !!flag;\n  };\n  const getSubframeEnabled = () => subframeEnabled;\n  const setExpressionsPlugin = value => {\n    expressionsPlugin = value;\n  };\n  const getExpressionsPlugin = () => expressionsPlugin;\n  const setDefaultCurveSegments = value => {\n    defaultCurveSegments = value;\n  };\n  const getDefaultCurveSegments = () => defaultCurveSegments;\n  const setIdPrefix = value => {\n    idPrefix$1 = value;\n  };\n  function createNS(type) {\n    return document.createElementNS(svgNS, type);\n  }\n  const dataManager = function () {\n    var _counterId = 1;\n    var processes = [];\n    var workerFn;\n    var workerInstance;\n    var workerProxy = {\n      onmessage: function () {},\n      postMessage: function (path) {\n        workerFn({\n          data: path\n        });\n      }\n    };\n    var _workerSelf = {\n      postMessage: function (data) {\n        workerProxy.onmessage({\n          data\n        });\n      }\n    };\n    function createWorker(fn) {\n      if (window.Worker && window.Blob && getWebWorker()) {\n        var blob = new Blob([\"var _workerSelf = self; self.onmessage = \", fn.toString()], {\n          type: \"text/javascript\"\n        });\n        var url = URL.createObjectURL(blob);\n        return new Worker(url);\n      }\n      workerFn = fn;\n      return workerProxy;\n    }\n    function setupWorker() {\n      if (!workerInstance) {\n        workerInstance = createWorker(function workerStart(e) {\n          function dataFunctionManager() {\n            function completeLayers(layers, comps) {\n              var layerData;\n              var i;\n              var len = layers.length;\n              var j;\n              var jLen;\n              var k;\n              var kLen;\n              for (i = 0; i < len; i += 1) {\n                layerData = layers[i];\n                if (\"ks\" in layerData && !layerData.completed) {\n                  layerData.completed = true;\n                  if (layerData.tt) {\n                    layers[i - 1].td = layerData.tt;\n                  }\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties;\n                    jLen = maskProps.length;\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\n                      } else {\n                        kLen = maskProps[j].pt.k.length;\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\n                          }\n                          if (maskProps[j].pt.k[k].e) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\n                          }\n                        }\n                      }\n                    }\n                  }\n                  if (layerData.ty === 0) {\n                    layerData.layers = findCompLayers(layerData.refId, comps);\n                    completeLayers(layerData.layers, comps);\n                  } else if (layerData.ty === 4) {\n                    completeShapes(layerData.shapes);\n                  } else if (layerData.ty === 5) {\n                    completeText(layerData);\n                  }\n                }\n              }\n            }\n            function completeChars(chars, assets) {\n              if (chars) {\n                var i = 0;\n                var len = chars.length;\n                for (i = 0; i < len; i += 1) {\n                  if (chars[i].t === 1) {\n                    chars[i].data.layers = findCompLayers(chars[i].data.refId, assets);\n                    completeLayers(chars[i].data.layers, assets);\n                  }\n                }\n              }\n            }\n            function findComp(id, comps) {\n              var i = 0;\n              var len = comps.length;\n              while (i < len) {\n                if (comps[i].id === id) {\n                  return comps[i];\n                }\n                i += 1;\n              }\n              return null;\n            }\n            function findCompLayers(id, comps) {\n              var comp = findComp(id, comps);\n              if (comp) {\n                if (!comp.layers.__used) {\n                  comp.layers.__used = true;\n                  return comp.layers;\n                }\n                return JSON.parse(JSON.stringify(comp.layers));\n              }\n              return null;\n            }\n            function completeShapes(arr) {\n              var i;\n              var len = arr.length;\n              var j;\n              var jLen;\n              for (i = len - 1; i >= 0; i -= 1) {\n                if (arr[i].ty === \"sh\") {\n                  if (arr[i].ks.k.i) {\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\n                  } else {\n                    jLen = arr[i].ks.k.length;\n                    for (j = 0; j < jLen; j += 1) {\n                      if (arr[i].ks.k[j].s) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\n                      }\n                      if (arr[i].ks.k[j].e) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\n                      }\n                    }\n                  }\n                } else if (arr[i].ty === \"gr\") {\n                  completeShapes(arr[i].it);\n                }\n              }\n            }\n            function convertPathsToAbsoluteValues(path) {\n              var i;\n              var len = path.i.length;\n              for (i = 0; i < len; i += 1) {\n                path.i[i][0] += path.v[i][0];\n                path.i[i][1] += path.v[i][1];\n                path.o[i][0] += path.v[i][0];\n                path.o[i][1] += path.v[i][1];\n              }\n            }\n            function checkVersion(minimum, animVersionString) {\n              var animVersion = animVersionString ? animVersionString.split(\".\") : [100, 100, 100];\n              if (minimum[0] > animVersion[0]) {\n                return true;\n              }\n              if (animVersion[0] > minimum[0]) {\n                return false;\n              }\n              if (minimum[1] > animVersion[1]) {\n                return true;\n              }\n              if (animVersion[1] > minimum[1]) {\n                return false;\n              }\n              if (minimum[2] > animVersion[2]) {\n                return true;\n              }\n              if (animVersion[2] > minimum[2]) {\n                return false;\n              }\n              return null;\n            }\n            var checkText = function () {\n              var minimumVersion = [4, 4, 14];\n              function updateTextLayer(textLayer) {\n                var documentData = textLayer.t.d;\n                textLayer.t.d = {\n                  k: [{\n                    s: documentData,\n                    t: 0\n                  }]\n                };\n              }\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i]);\n                  }\n                }\n              }\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            var checkChars = function () {\n              var minimumVersion = [4, 7, 99];\n              return function (animationData) {\n                if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\n                  var i;\n                  var len = animationData.chars.length;\n                  for (i = 0; i < len; i += 1) {\n                    var charData = animationData.chars[i];\n                    if (charData.data && charData.data.shapes) {\n                      completeShapes(charData.data.shapes);\n                      charData.data.ip = 0;\n                      charData.data.op = 99999;\n                      charData.data.st = 0;\n                      charData.data.sr = 1;\n                      charData.data.ks = {\n                        p: {\n                          k: [0, 0],\n                          a: 0\n                        },\n                        s: {\n                          k: [100, 100],\n                          a: 0\n                        },\n                        a: {\n                          k: [0, 0],\n                          a: 0\n                        },\n                        r: {\n                          k: 0,\n                          a: 0\n                        },\n                        o: {\n                          k: 100,\n                          a: 0\n                        }\n                      };\n                      if (!animationData.chars[i].t) {\n                        charData.data.shapes.push({\n                          ty: \"no\"\n                        });\n                        charData.data.shapes[0].it.push({\n                          p: {\n                            k: [0, 0],\n                            a: 0\n                          },\n                          s: {\n                            k: [100, 100],\n                            a: 0\n                          },\n                          a: {\n                            k: [0, 0],\n                            a: 0\n                          },\n                          r: {\n                            k: 0,\n                            a: 0\n                          },\n                          o: {\n                            k: 100,\n                            a: 0\n                          },\n                          sk: {\n                            k: 0,\n                            a: 0\n                          },\n                          sa: {\n                            k: 0,\n                            a: 0\n                          },\n                          ty: \"tr\"\n                        });\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            var checkPathProperties = function () {\n              var minimumVersion = [5, 7, 15];\n              function updateTextLayer(textLayer) {\n                var pathData = textLayer.t.p;\n                if (typeof pathData.a === \"number\") {\n                  pathData.a = {\n                    a: 0,\n                    k: pathData.a\n                  };\n                }\n                if (typeof pathData.p === \"number\") {\n                  pathData.p = {\n                    a: 0,\n                    k: pathData.p\n                  };\n                }\n                if (typeof pathData.r === \"number\") {\n                  pathData.r = {\n                    a: 0,\n                    k: pathData.r\n                  };\n                }\n              }\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i]);\n                  }\n                }\n              }\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            var checkColors = function () {\n              var minimumVersion = [4, 1, 9];\n              function iterateShapes(shapes) {\n                var i;\n                var len = shapes.length;\n                var j;\n                var jLen;\n                for (i = 0; i < len; i += 1) {\n                  if (shapes[i].ty === \"gr\") {\n                    iterateShapes(shapes[i].it);\n                  } else if (shapes[i].ty === \"fl\" || shapes[i].ty === \"st\") {\n                    if (shapes[i].c.k && shapes[i].c.k[0].i) {\n                      jLen = shapes[i].c.k.length;\n                      for (j = 0; j < jLen; j += 1) {\n                        if (shapes[i].c.k[j].s) {\n                          shapes[i].c.k[j].s[0] /= 255;\n                          shapes[i].c.k[j].s[1] /= 255;\n                          shapes[i].c.k[j].s[2] /= 255;\n                          shapes[i].c.k[j].s[3] /= 255;\n                        }\n                        if (shapes[i].c.k[j].e) {\n                          shapes[i].c.k[j].e[0] /= 255;\n                          shapes[i].c.k[j].e[1] /= 255;\n                          shapes[i].c.k[j].e[2] /= 255;\n                          shapes[i].c.k[j].e[3] /= 255;\n                        }\n                      }\n                    } else {\n                      shapes[i].c.k[0] /= 255;\n                      shapes[i].c.k[1] /= 255;\n                      shapes[i].c.k[2] /= 255;\n                      shapes[i].c.k[3] /= 255;\n                    }\n                  }\n                }\n              }\n              function iterateLayers(layers) {\n                var i;\n                var len = layers.length;\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 4) {\n                    iterateShapes(layers[i].shapes);\n                  }\n                }\n              }\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            var checkShapes = function () {\n              var minimumVersion = [4, 4, 18];\n              function completeClosingShapes(arr) {\n                var i;\n                var len = arr.length;\n                var j;\n                var jLen;\n                for (i = len - 1; i >= 0; i -= 1) {\n                  if (arr[i].ty === \"sh\") {\n                    if (arr[i].ks.k.i) {\n                      arr[i].ks.k.c = arr[i].closed;\n                    } else {\n                      jLen = arr[i].ks.k.length;\n                      for (j = 0; j < jLen; j += 1) {\n                        if (arr[i].ks.k[j].s) {\n                          arr[i].ks.k[j].s[0].c = arr[i].closed;\n                        }\n                        if (arr[i].ks.k[j].e) {\n                          arr[i].ks.k[j].e[0].c = arr[i].closed;\n                        }\n                      }\n                    }\n                  } else if (arr[i].ty === \"gr\") {\n                    completeClosingShapes(arr[i].it);\n                  }\n                }\n              }\n              function iterateLayers(layers) {\n                var layerData;\n                var i;\n                var len = layers.length;\n                var j;\n                var jLen;\n                var k;\n                var kLen;\n                for (i = 0; i < len; i += 1) {\n                  layerData = layers[i];\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties;\n                    jLen = maskProps.length;\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        maskProps[j].pt.k.c = maskProps[j].cl;\n                      } else {\n                        kLen = maskProps[j].pt.k.length;\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\n                          }\n                          if (maskProps[j].pt.k[k].e) {\n                            maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\n                          }\n                        }\n                      }\n                    }\n                  }\n                  if (layerData.ty === 4) {\n                    completeClosingShapes(layerData.shapes);\n                  }\n                }\n              }\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers);\n                  if (animationData.assets) {\n                    var i;\n                    var len = animationData.assets.length;\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers);\n                      }\n                    }\n                  }\n                }\n              };\n            }();\n            function completeData(animationData) {\n              if (animationData.__complete) {\n                return;\n              }\n              checkColors(animationData);\n              checkText(animationData);\n              checkChars(animationData);\n              checkPathProperties(animationData);\n              checkShapes(animationData);\n              completeLayers(animationData.layers, animationData.assets);\n              completeChars(animationData.chars, animationData.assets);\n              animationData.__complete = true;\n            }\n            function completeText(data) {\n              if (data.t.a.length === 0 && !(\"m\" in data.t.p)) ;\n            }\n            var moduleOb = {};\n            moduleOb.completeData = completeData;\n            moduleOb.checkColors = checkColors;\n            moduleOb.checkChars = checkChars;\n            moduleOb.checkPathProperties = checkPathProperties;\n            moduleOb.checkShapes = checkShapes;\n            moduleOb.completeLayers = completeLayers;\n            return moduleOb;\n          }\n          if (!_workerSelf.dataManager) {\n            _workerSelf.dataManager = dataFunctionManager();\n          }\n          if (!_workerSelf.assetLoader) {\n            _workerSelf.assetLoader = function () {\n              function formatResponse(xhr) {\n                var contentTypeHeader = xhr.getResponseHeader(\"content-type\");\n                if (contentTypeHeader && xhr.responseType === \"json\" && contentTypeHeader.indexOf(\"json\") !== -1) {\n                  return xhr.response;\n                }\n                if (xhr.response && typeof xhr.response === \"object\") {\n                  return xhr.response;\n                }\n                if (xhr.response && typeof xhr.response === \"string\") {\n                  return JSON.parse(xhr.response);\n                }\n                if (xhr.responseText) {\n                  return JSON.parse(xhr.responseText);\n                }\n                return null;\n              }\n              function loadAsset(path, fullPath, callback, errorCallback) {\n                var response;\n                var xhr = new XMLHttpRequest();\n                try {\n                  xhr.responseType = \"json\";\n                } catch (err) {}\n                xhr.onreadystatechange = function () {\n                  if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                      response = formatResponse(xhr);\n                      callback(response);\n                    } else {\n                      try {\n                        response = formatResponse(xhr);\n                        callback(response);\n                      } catch (err) {\n                        if (errorCallback) {\n                          errorCallback(err);\n                        }\n                      }\n                    }\n                  }\n                };\n                try {\n                  xhr.open(\"GET\", path, true);\n                } catch (error) {\n                  xhr.open(\"GET\", fullPath + \"/\" + path, true);\n                }\n                xhr.send();\n              }\n              return {\n                load: loadAsset\n              };\n            }();\n          }\n          if (e.data.type === \"loadAnimation\") {\n            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data) {\n              _workerSelf.dataManager.completeData(data);\n              _workerSelf.postMessage({\n                id: e.data.id,\n                payload: data,\n                status: \"success\"\n              });\n            }, function () {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                status: \"error\"\n              });\n            });\n          } else if (e.data.type === \"complete\") {\n            var animation = e.data.animation;\n            _workerSelf.dataManager.completeData(animation);\n            _workerSelf.postMessage({\n              id: e.data.id,\n              payload: animation,\n              status: \"success\"\n            });\n          } else if (e.data.type === \"loadData\") {\n            _workerSelf.assetLoader.load(e.data.path, e.data.fullPath, function (data) {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                payload: data,\n                status: \"success\"\n              });\n            }, function () {\n              _workerSelf.postMessage({\n                id: e.data.id,\n                status: \"error\"\n              });\n            });\n          }\n        });\n        workerInstance.onmessage = function (event) {\n          var data = event.data;\n          var id = data.id;\n          var process = processes[id];\n          processes[id] = null;\n          if (data.status === \"success\") {\n            process.onComplete(data.payload);\n          } else if (process.onError) {\n            process.onError();\n          }\n        };\n      }\n    }\n    function createProcess(onComplete, onError) {\n      _counterId += 1;\n      var id = \"processId_\" + _counterId;\n      processes[id] = {\n        onComplete,\n        onError\n      };\n      return id;\n    }\n    function loadAnimation2(path, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: \"loadAnimation\",\n        path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId\n      });\n    }\n    function loadData(path, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: \"loadData\",\n        path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId\n      });\n    }\n    function completeAnimation(anim, onComplete, onError) {\n      setupWorker();\n      var processId = createProcess(onComplete, onError);\n      workerInstance.postMessage({\n        type: \"complete\",\n        animation: anim,\n        id: processId\n      });\n    }\n    return {\n      loadAnimation: loadAnimation2,\n      loadData,\n      completeAnimation\n    };\n  }();\n  const ImagePreloader = function () {\n    var proxyImage = function () {\n      var canvas = createTag(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.fillStyle = \"rgba(0,0,0,0)\";\n      ctx.fillRect(0, 0, 1, 1);\n      return canvas;\n    }();\n    function imageLoaded() {\n      this.loadedAssets += 1;\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n    function footageLoaded() {\n      this.loadedFootagesCount += 1;\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null);\n        }\n      }\n    }\n    function getAssetsPath(assetData, assetsPath, originalPath) {\n      var path = \"\";\n      if (assetData.e) {\n        path = assetData.p;\n      } else if (assetsPath) {\n        var imagePath = assetData.p;\n        if (imagePath.indexOf(\"images/\") !== -1) {\n          imagePath = imagePath.split(\"/\")[1];\n        }\n        path = assetsPath + imagePath;\n      } else {\n        path = originalPath;\n        path += assetData.u ? assetData.u : \"\";\n        path += assetData.p;\n      }\n      return path;\n    }\n    function testImageLoaded(img) {\n      var _count = 0;\n      var intervalId = setInterval(function () {\n        var box = img.getBBox();\n        if (box.width || _count > 500) {\n          this._imageLoaded();\n          clearInterval(intervalId);\n        }\n        _count += 1;\n      }.bind(this), 50);\n    }\n    function createImageData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createNS(\"image\");\n      if (isSafari) {\n        this.testImageLoaded(img);\n      } else {\n        img.addEventListener(\"load\", this._imageLoaded, false);\n      }\n      img.addEventListener(\"error\", function () {\n        ob.img = proxyImage;\n        this._imageLoaded();\n      }.bind(this), false);\n      img.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", path);\n      if (this._elementHelper.append) {\n        this._elementHelper.append(img);\n      } else {\n        this._elementHelper.appendChild(img);\n      }\n      var ob = {\n        img,\n        assetData\n      };\n      return ob;\n    }\n    function createImgData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path);\n      var img = createTag(\"img\");\n      img.crossOrigin = \"anonymous\";\n      img.addEventListener(\"load\", this._imageLoaded, false);\n      img.addEventListener(\"error\", function () {\n        ob.img = proxyImage;\n        this._imageLoaded();\n      }.bind(this), false);\n      img.src = path;\n      var ob = {\n        img,\n        assetData\n      };\n      return ob;\n    }\n    function createFootageData(data) {\n      var ob = {\n        assetData: data\n      };\n      var path = getAssetsPath(data, this.assetsPath, this.path);\n      dataManager.loadData(path, function (footageData) {\n        ob.img = footageData;\n        this._footageLoaded();\n      }.bind(this), function () {\n        ob.img = {};\n        this._footageLoaded();\n      }.bind(this));\n      return ob;\n    }\n    function loadAssets(assets, cb) {\n      this.imagesLoadedCb = cb;\n      var i;\n      var len = assets.length;\n      for (i = 0; i < len; i += 1) {\n        if (!assets[i].layers) {\n          if (!assets[i].t || assets[i].t === \"seq\") {\n            this.totalImages += 1;\n            this.images.push(this._createImageData(assets[i]));\n          } else if (assets[i].t === 3) {\n            this.totalFootages += 1;\n            this.images.push(this.createFootageData(assets[i]));\n          }\n        }\n      }\n    }\n    function setPath(path) {\n      this.path = path || \"\";\n    }\n    function setAssetsPath(path) {\n      this.assetsPath = path || \"\";\n    }\n    function getAsset(assetData) {\n      var i = 0;\n      var len = this.images.length;\n      while (i < len) {\n        if (this.images[i].assetData === assetData) {\n          return this.images[i].img;\n        }\n        i += 1;\n      }\n      return null;\n    }\n    function destroy() {\n      this.imagesLoadedCb = null;\n      this.images.length = 0;\n    }\n    function loadedImages() {\n      return this.totalImages === this.loadedAssets;\n    }\n    function loadedFootages() {\n      return this.totalFootages === this.loadedFootagesCount;\n    }\n    function setCacheType(type, elementHelper) {\n      if (type === \"svg\") {\n        this._elementHelper = elementHelper;\n        this._createImageData = this.createImageData.bind(this);\n      } else {\n        this._createImageData = this.createImgData.bind(this);\n      }\n    }\n    function ImagePreloaderFactory() {\n      this._imageLoaded = imageLoaded.bind(this);\n      this._footageLoaded = footageLoaded.bind(this);\n      this.testImageLoaded = testImageLoaded.bind(this);\n      this.createFootageData = createFootageData.bind(this);\n      this.assetsPath = \"\";\n      this.path = \"\";\n      this.totalImages = 0;\n      this.totalFootages = 0;\n      this.loadedAssets = 0;\n      this.loadedFootagesCount = 0;\n      this.imagesLoadedCb = null;\n      this.images = [];\n    }\n    ImagePreloaderFactory.prototype = {\n      loadAssets,\n      setAssetsPath,\n      setPath,\n      loadedImages,\n      loadedFootages,\n      destroy,\n      getAsset,\n      createImgData,\n      createImageData,\n      imageLoaded,\n      footageLoaded,\n      setCacheType\n    };\n    return ImagePreloaderFactory;\n  }();\n  function BaseEvent() {}\n  BaseEvent.prototype = {\n    triggerEvent: function (eventName, args) {\n      if (this._cbs[eventName]) {\n        var callbacks = this._cbs[eventName];\n        for (var i = 0; i < callbacks.length; i += 1) {\n          callbacks[i](args);\n        }\n      }\n    },\n    addEventListener: function (eventName, callback) {\n      if (!this._cbs[eventName]) {\n        this._cbs[eventName] = [];\n      }\n      this._cbs[eventName].push(callback);\n      return function () {\n        this.removeEventListener(eventName, callback);\n      }.bind(this);\n    },\n    removeEventListener: function (eventName, callback) {\n      if (!callback) {\n        this._cbs[eventName] = null;\n      } else if (this._cbs[eventName]) {\n        var i = 0;\n        var len = this._cbs[eventName].length;\n        while (i < len) {\n          if (this._cbs[eventName][i] === callback) {\n            this._cbs[eventName].splice(i, 1);\n            i -= 1;\n            len -= 1;\n          }\n          i += 1;\n        }\n        if (!this._cbs[eventName].length) {\n          this._cbs[eventName] = null;\n        }\n      }\n    }\n  };\n  const markerParser = function () {\n    function parsePayloadLines(payload) {\n      var lines = payload.split(\"\\r\\n\");\n      var keys = {};\n      var line;\n      var keysCount = 0;\n      for (var i = 0; i < lines.length; i += 1) {\n        line = lines[i].split(\":\");\n        if (line.length === 2) {\n          keys[line[0]] = line[1].trim();\n          keysCount += 1;\n        }\n      }\n      if (keysCount === 0) {\n        throw new Error();\n      }\n      return keys;\n    }\n    return function (_markers) {\n      var markers = [];\n      for (var i = 0; i < _markers.length; i += 1) {\n        var _marker = _markers[i];\n        var markerData = {\n          time: _marker.tm,\n          duration: _marker.dr\n        };\n        try {\n          markerData.payload = JSON.parse(_markers[i].cm);\n        } catch (_) {\n          try {\n            markerData.payload = parsePayloadLines(_markers[i].cm);\n          } catch (__) {\n            markerData.payload = {\n              name: _markers[i].cm\n            };\n          }\n        }\n        markers.push(markerData);\n      }\n      return markers;\n    };\n  }();\n  const ProjectInterface = function () {\n    function registerComposition(comp) {\n      this.compositions.push(comp);\n    }\n    return function () {\n      function _thisProjectFunction(name) {\n        var i = 0;\n        var len = this.compositions.length;\n        while (i < len) {\n          if (this.compositions[i].data && this.compositions[i].data.nm === name) {\n            if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\n              this.compositions[i].prepareFrame(this.currentFrame);\n            }\n            return this.compositions[i].compInterface;\n          }\n          i += 1;\n        }\n        return null;\n      }\n      _thisProjectFunction.compositions = [];\n      _thisProjectFunction.currentFrame = 0;\n      _thisProjectFunction.registerComposition = registerComposition;\n      return _thisProjectFunction;\n    };\n  }();\n  const renderers = {};\n  const registerRenderer = (key, value) => {\n    renderers[key] = value;\n  };\n  function getRenderer(key) {\n    return renderers[key];\n  }\n  const AnimationItem = function () {\n    this._cbs = [];\n    this.name = \"\";\n    this.path = \"\";\n    this.isLoaded = false;\n    this.currentFrame = 0;\n    this.currentRawFrame = 0;\n    this.firstFrame = 0;\n    this.totalFrames = 0;\n    this.frameRate = 0;\n    this.frameMult = 0;\n    this.playSpeed = 1;\n    this.playDirection = 1;\n    this.playCount = 0;\n    this.animationData = {};\n    this.assets = [];\n    this.isPaused = true;\n    this.autoplay = false;\n    this.loop = true;\n    this.renderer = null;\n    this.animationID = createElementID();\n    this.assetsPath = \"\";\n    this.timeCompleted = 0;\n    this.segmentPos = 0;\n    this.isSubframeEnabled = getSubframeEnabled();\n    this.segments = [];\n    this._idle = true;\n    this._completedLoop = false;\n    this.projectInterface = ProjectInterface();\n    this.imagePreloader = new ImagePreloader();\n    this.audioController = audioControllerFactory();\n    this.markers = [];\n    this.configAnimation = this.configAnimation.bind(this);\n    this.onSetupError = this.onSetupError.bind(this);\n    this.onSegmentComplete = this.onSegmentComplete.bind(this);\n    this.drawnFrameEvent = new BMEnterFrameEvent(\"drawnFrame\", 0, 0, 0);\n  };\n  extendPrototype([BaseEvent], AnimationItem);\n  AnimationItem.prototype.setParams = function (params) {\n    if (params.wrapper || params.container) {\n      this.wrapper = params.wrapper || params.container;\n    }\n    var animType = \"svg\";\n    if (params.animType) {\n      animType = params.animType;\n    } else if (params.renderer) {\n      animType = params.renderer;\n    }\n    const RendererClass = getRenderer(animType);\n    this.renderer = new RendererClass(this, params.rendererSettings);\n    this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs);\n    this.renderer.setProjectInterface(this.projectInterface);\n    this.animType = animType;\n    if (params.loop === \"\" || params.loop === null || params.loop === void 0 || params.loop === true) {\n      this.loop = true;\n    } else if (params.loop === false) {\n      this.loop = false;\n    } else {\n      this.loop = parseInt(params.loop, 10);\n    }\n    this.autoplay = \"autoplay\" in params ? params.autoplay : true;\n    this.name = params.name ? params.name : \"\";\n    this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, \"autoloadSegments\") ? params.autoloadSegments : true;\n    this.assetsPath = params.assetsPath;\n    this.initialSegment = params.initialSegment;\n    if (params.audioFactory) {\n      this.audioController.setAudioFactory(params.audioFactory);\n    }\n    if (params.animationData) {\n      this.setupAnimation(params.animationData);\n    } else if (params.path) {\n      if (params.path.lastIndexOf(\"\\\\\") !== -1) {\n        this.path = params.path.substr(0, params.path.lastIndexOf(\"\\\\\") + 1);\n      } else {\n        this.path = params.path.substr(0, params.path.lastIndexOf(\"/\") + 1);\n      }\n      this.fileName = params.path.substr(params.path.lastIndexOf(\"/\") + 1);\n      this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(\".json\"));\n      dataManager.loadAnimation(params.path, this.configAnimation, this.onSetupError);\n    }\n  };\n  AnimationItem.prototype.onSetupError = function () {\n    this.trigger(\"data_failed\");\n  };\n  AnimationItem.prototype.setupAnimation = function (data) {\n    dataManager.completeAnimation(data, this.configAnimation);\n  };\n  AnimationItem.prototype.setData = function (wrapper, animationData) {\n    if (animationData) {\n      if (typeof animationData !== \"object\") {\n        animationData = JSON.parse(animationData);\n      }\n    }\n    var params = {\n      wrapper,\n      animationData\n    };\n    var wrapperAttributes = wrapper.attributes;\n    params.path = wrapperAttributes.getNamedItem(\"data-animation-path\") ? wrapperAttributes.getNamedItem(\"data-animation-path\").value : wrapperAttributes.getNamedItem(\"data-bm-path\") ? wrapperAttributes.getNamedItem(\"data-bm-path\").value : wrapperAttributes.getNamedItem(\"bm-path\") ? wrapperAttributes.getNamedItem(\"bm-path\").value : \"\";\n    params.animType = wrapperAttributes.getNamedItem(\"data-anim-type\") ? wrapperAttributes.getNamedItem(\"data-anim-type\").value : wrapperAttributes.getNamedItem(\"data-bm-type\") ? wrapperAttributes.getNamedItem(\"data-bm-type\").value : wrapperAttributes.getNamedItem(\"bm-type\") ? wrapperAttributes.getNamedItem(\"bm-type\").value : wrapperAttributes.getNamedItem(\"data-bm-renderer\") ? wrapperAttributes.getNamedItem(\"data-bm-renderer\").value : wrapperAttributes.getNamedItem(\"bm-renderer\") ? wrapperAttributes.getNamedItem(\"bm-renderer\").value : \"canvas\";\n    var loop = wrapperAttributes.getNamedItem(\"data-anim-loop\") ? wrapperAttributes.getNamedItem(\"data-anim-loop\").value : wrapperAttributes.getNamedItem(\"data-bm-loop\") ? wrapperAttributes.getNamedItem(\"data-bm-loop\").value : wrapperAttributes.getNamedItem(\"bm-loop\") ? wrapperAttributes.getNamedItem(\"bm-loop\").value : \"\";\n    if (loop === \"false\") {\n      params.loop = false;\n    } else if (loop === \"true\") {\n      params.loop = true;\n    } else if (loop !== \"\") {\n      params.loop = parseInt(loop, 10);\n    }\n    var autoplay = wrapperAttributes.getNamedItem(\"data-anim-autoplay\") ? wrapperAttributes.getNamedItem(\"data-anim-autoplay\").value : wrapperAttributes.getNamedItem(\"data-bm-autoplay\") ? wrapperAttributes.getNamedItem(\"data-bm-autoplay\").value : wrapperAttributes.getNamedItem(\"bm-autoplay\") ? wrapperAttributes.getNamedItem(\"bm-autoplay\").value : true;\n    params.autoplay = autoplay !== \"false\";\n    params.name = wrapperAttributes.getNamedItem(\"data-name\") ? wrapperAttributes.getNamedItem(\"data-name\").value : wrapperAttributes.getNamedItem(\"data-bm-name\") ? wrapperAttributes.getNamedItem(\"data-bm-name\").value : wrapperAttributes.getNamedItem(\"bm-name\") ? wrapperAttributes.getNamedItem(\"bm-name\").value : \"\";\n    var prerender = wrapperAttributes.getNamedItem(\"data-anim-prerender\") ? wrapperAttributes.getNamedItem(\"data-anim-prerender\").value : wrapperAttributes.getNamedItem(\"data-bm-prerender\") ? wrapperAttributes.getNamedItem(\"data-bm-prerender\").value : wrapperAttributes.getNamedItem(\"bm-prerender\") ? wrapperAttributes.getNamedItem(\"bm-prerender\").value : \"\";\n    if (prerender === \"false\") {\n      params.prerender = false;\n    }\n    this.setParams(params);\n  };\n  AnimationItem.prototype.includeLayers = function (data) {\n    if (data.op > this.animationData.op) {\n      this.animationData.op = data.op;\n      this.totalFrames = Math.floor(data.op - this.animationData.ip);\n    }\n    var layers = this.animationData.layers;\n    var i;\n    var len = layers.length;\n    var newLayers = data.layers;\n    var j;\n    var jLen = newLayers.length;\n    for (j = 0; j < jLen; j += 1) {\n      i = 0;\n      while (i < len) {\n        if (layers[i].id === newLayers[j].id) {\n          layers[i] = newLayers[j];\n          break;\n        }\n        i += 1;\n      }\n    }\n    if (data.chars || data.fonts) {\n      this.renderer.globalData.fontManager.addChars(data.chars);\n      this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\n    }\n    if (data.assets) {\n      len = data.assets.length;\n      for (i = 0; i < len; i += 1) {\n        this.animationData.assets.push(data.assets[i]);\n      }\n    }\n    this.animationData.__complete = false;\n    dataManager.completeAnimation(this.animationData, this.onSegmentComplete);\n  };\n  AnimationItem.prototype.onSegmentComplete = function (data) {\n    this.animationData = data;\n    var expressionsPlugin2 = getExpressionsPlugin();\n    if (expressionsPlugin2) {\n      expressionsPlugin2.initExpressions(this);\n    }\n    this.loadNextSegment();\n  };\n  AnimationItem.prototype.loadNextSegment = function () {\n    var segments = this.animationData.segments;\n    if (!segments || segments.length === 0 || !this.autoloadSegments) {\n      this.trigger(\"data_ready\");\n      this.timeCompleted = this.totalFrames;\n      return;\n    }\n    var segment = segments.shift();\n    this.timeCompleted = segment.time * this.frameRate;\n    var segmentPath = this.path + this.fileName + \"_\" + this.segmentPos + \".json\";\n    this.segmentPos += 1;\n    dataManager.loadData(segmentPath, this.includeLayers.bind(this), function () {\n      this.trigger(\"data_failed\");\n    }.bind(this));\n  };\n  AnimationItem.prototype.loadSegments = function () {\n    var segments = this.animationData.segments;\n    if (!segments) {\n      this.timeCompleted = this.totalFrames;\n    }\n    this.loadNextSegment();\n  };\n  AnimationItem.prototype.imagesLoaded = function () {\n    this.trigger(\"loaded_images\");\n    this.checkLoaded();\n  };\n  AnimationItem.prototype.preloadImages = function () {\n    this.imagePreloader.setAssetsPath(this.assetsPath);\n    this.imagePreloader.setPath(this.path);\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\n  };\n  AnimationItem.prototype.configAnimation = function (animData) {\n    if (!this.renderer) {\n      return;\n    }\n    try {\n      this.animationData = animData;\n      if (this.initialSegment) {\n        this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);\n        this.firstFrame = Math.round(this.initialSegment[0]);\n      } else {\n        this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\n        this.firstFrame = Math.round(this.animationData.ip);\n      }\n      this.renderer.configAnimation(animData);\n      if (!animData.assets) {\n        animData.assets = [];\n      }\n      this.assets = this.animationData.assets;\n      this.frameRate = this.animationData.fr;\n      this.frameMult = this.animationData.fr / 1e3;\n      this.renderer.searchExtraCompositions(animData.assets);\n      this.markers = markerParser(animData.markers || []);\n      this.trigger(\"config_ready\");\n      this.preloadImages();\n      this.loadSegments();\n      this.updaFrameModifier();\n      this.waitForFontsLoaded();\n      if (this.isPaused) {\n        this.audioController.pause();\n      }\n    } catch (error) {\n      this.triggerConfigError(error);\n    }\n  };\n  AnimationItem.prototype.waitForFontsLoaded = function () {\n    if (!this.renderer) {\n      return;\n    }\n    if (this.renderer.globalData.fontManager.isLoaded) {\n      this.checkLoaded();\n    } else {\n      setTimeout(this.waitForFontsLoaded.bind(this), 20);\n    }\n  };\n  AnimationItem.prototype.checkLoaded = function () {\n    if (!this.isLoaded && this.renderer.globalData.fontManager.isLoaded && (this.imagePreloader.loadedImages() || this.renderer.rendererType !== \"canvas\") && this.imagePreloader.loadedFootages()) {\n      this.isLoaded = true;\n      var expressionsPlugin2 = getExpressionsPlugin();\n      if (expressionsPlugin2) {\n        expressionsPlugin2.initExpressions(this);\n      }\n      this.renderer.initItems();\n      setTimeout(function () {\n        this.trigger(\"DOMLoaded\");\n      }.bind(this), 0);\n      this.gotoFrame();\n      if (this.autoplay) {\n        this.play();\n      }\n    }\n  };\n  AnimationItem.prototype.resize = function () {\n    this.renderer.updateContainerSize();\n  };\n  AnimationItem.prototype.setSubframe = function (flag) {\n    this.isSubframeEnabled = !!flag;\n  };\n  AnimationItem.prototype.gotoFrame = function () {\n    this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\n    if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\n      this.currentFrame = this.timeCompleted;\n    }\n    this.trigger(\"enterFrame\");\n    this.renderFrame();\n    this.trigger(\"drawnFrame\");\n  };\n  AnimationItem.prototype.renderFrame = function () {\n    if (this.isLoaded === false || !this.renderer) {\n      return;\n    }\n    try {\n      this.renderer.renderFrame(this.currentFrame + this.firstFrame);\n    } catch (error) {\n      this.triggerRenderFrameError(error);\n    }\n  };\n  AnimationItem.prototype.play = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n    if (this.isPaused === true) {\n      this.isPaused = false;\n      this.trigger(\"_pause\");\n      this.audioController.resume();\n      if (this._idle) {\n        this._idle = false;\n        this.trigger(\"_active\");\n      }\n    }\n  };\n  AnimationItem.prototype.pause = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n    if (this.isPaused === false) {\n      this.isPaused = true;\n      this.trigger(\"_play\");\n      this._idle = true;\n      this.trigger(\"_idle\");\n      this.audioController.pause();\n    }\n  };\n  AnimationItem.prototype.togglePause = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n    if (this.isPaused === true) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n  AnimationItem.prototype.stop = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n    this.pause();\n    this.playCount = 0;\n    this._completedLoop = false;\n    this.setCurrentRawFrameValue(0);\n  };\n  AnimationItem.prototype.getMarkerData = function (markerName) {\n    var marker;\n    for (var i = 0; i < this.markers.length; i += 1) {\n      marker = this.markers[i];\n      if (marker.payload && marker.payload.name === markerName) {\n        return marker;\n      }\n    }\n    return null;\n  };\n  AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n    var numValue = Number(value);\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value);\n      if (marker) {\n        this.goToAndStop(marker.time, true);\n      }\n    } else if (isFrame) {\n      this.setCurrentRawFrameValue(value);\n    } else {\n      this.setCurrentRawFrameValue(value * this.frameModifier);\n    }\n    this.pause();\n  };\n  AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n    var numValue = Number(value);\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value);\n      if (marker) {\n        if (!marker.duration) {\n          this.goToAndStop(marker.time, true);\n        } else {\n          this.playSegments([marker.time, marker.time + marker.duration], true);\n        }\n      }\n    } else {\n      this.goToAndStop(numValue, isFrame, name);\n    }\n    this.play();\n  };\n  AnimationItem.prototype.advanceTime = function (value) {\n    if (this.isPaused === true || this.isLoaded === false) {\n      return;\n    }\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\n    var _isComplete = false;\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\n      if (!this.loop || this.playCount === this.loop) {\n        if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {\n          _isComplete = true;\n          nextValue = this.totalFrames - 1;\n        }\n      } else if (nextValue >= this.totalFrames) {\n        this.playCount += 1;\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\n          this.setCurrentRawFrameValue(nextValue % this.totalFrames);\n          this._completedLoop = true;\n          this.trigger(\"loopComplete\");\n        }\n      } else {\n        this.setCurrentRawFrameValue(nextValue);\n      }\n    } else if (nextValue < 0) {\n      if (!this.checkSegments(nextValue % this.totalFrames)) {\n        if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\n          this.setCurrentRawFrameValue(this.totalFrames + nextValue % this.totalFrames);\n          if (!this._completedLoop) {\n            this._completedLoop = true;\n          } else {\n            this.trigger(\"loopComplete\");\n          }\n        } else {\n          _isComplete = true;\n          nextValue = 0;\n        }\n      }\n    } else {\n      this.setCurrentRawFrameValue(nextValue);\n    }\n    if (_isComplete) {\n      this.setCurrentRawFrameValue(nextValue);\n      this.pause();\n      this.trigger(\"complete\");\n    }\n  };\n  AnimationItem.prototype.adjustSegment = function (arr, offset) {\n    this.playCount = 0;\n    if (arr[1] < arr[0]) {\n      if (this.frameModifier > 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(-1);\n        }\n      }\n      this.totalFrames = arr[0] - arr[1];\n      this.timeCompleted = this.totalFrames;\n      this.firstFrame = arr[1];\n      this.setCurrentRawFrameValue(this.totalFrames - 1e-3 - offset);\n    } else if (arr[1] > arr[0]) {\n      if (this.frameModifier < 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed);\n        } else {\n          this.setDirection(1);\n        }\n      }\n      this.totalFrames = arr[1] - arr[0];\n      this.timeCompleted = this.totalFrames;\n      this.firstFrame = arr[0];\n      this.setCurrentRawFrameValue(1e-3 + offset);\n    }\n    this.trigger(\"segmentStart\");\n  };\n  AnimationItem.prototype.setSegment = function (init, end) {\n    var pendingFrame = -1;\n    if (this.isPaused) {\n      if (this.currentRawFrame + this.firstFrame < init) {\n        pendingFrame = init;\n      } else if (this.currentRawFrame + this.firstFrame > end) {\n        pendingFrame = end - init;\n      }\n    }\n    this.firstFrame = init;\n    this.totalFrames = end - init;\n    this.timeCompleted = this.totalFrames;\n    if (pendingFrame !== -1) {\n      this.goToAndStop(pendingFrame, true);\n    }\n  };\n  AnimationItem.prototype.playSegments = function (arr, forceFlag) {\n    if (forceFlag) {\n      this.segments.length = 0;\n    }\n    if (typeof arr[0] === \"object\") {\n      var i;\n      var len = arr.length;\n      for (i = 0; i < len; i += 1) {\n        this.segments.push(arr[i]);\n      }\n    } else {\n      this.segments.push(arr);\n    }\n    if (this.segments.length && forceFlag) {\n      this.adjustSegment(this.segments.shift(), 0);\n    }\n    if (this.isPaused) {\n      this.play();\n    }\n  };\n  AnimationItem.prototype.resetSegments = function (forceFlag) {\n    this.segments.length = 0;\n    this.segments.push([this.animationData.ip, this.animationData.op]);\n    if (forceFlag) {\n      this.checkSegments(0);\n    }\n  };\n  AnimationItem.prototype.checkSegments = function (offset) {\n    if (this.segments.length) {\n      this.adjustSegment(this.segments.shift(), offset);\n      return true;\n    }\n    return false;\n  };\n  AnimationItem.prototype.destroy = function (name) {\n    if (name && this.name !== name || !this.renderer) {\n      return;\n    }\n    this.renderer.destroy();\n    this.imagePreloader.destroy();\n    this.trigger(\"destroy\");\n    this._cbs = null;\n    this.onEnterFrame = null;\n    this.onLoopComplete = null;\n    this.onComplete = null;\n    this.onSegmentStart = null;\n    this.onDestroy = null;\n    this.renderer = null;\n    this.renderer = null;\n    this.imagePreloader = null;\n    this.projectInterface = null;\n  };\n  AnimationItem.prototype.setCurrentRawFrameValue = function (value) {\n    this.currentRawFrame = value;\n    this.gotoFrame();\n  };\n  AnimationItem.prototype.setSpeed = function (val) {\n    this.playSpeed = val;\n    this.updaFrameModifier();\n  };\n  AnimationItem.prototype.setDirection = function (val) {\n    this.playDirection = val < 0 ? -1 : 1;\n    this.updaFrameModifier();\n  };\n  AnimationItem.prototype.setVolume = function (val, name) {\n    if (name && this.name !== name) {\n      return;\n    }\n    this.audioController.setVolume(val);\n  };\n  AnimationItem.prototype.getVolume = function () {\n    return this.audioController.getVolume();\n  };\n  AnimationItem.prototype.mute = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n    this.audioController.mute();\n  };\n  AnimationItem.prototype.unmute = function (name) {\n    if (name && this.name !== name) {\n      return;\n    }\n    this.audioController.unmute();\n  };\n  AnimationItem.prototype.updaFrameModifier = function () {\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\n    this.audioController.setRate(this.playSpeed * this.playDirection);\n  };\n  AnimationItem.prototype.getPath = function () {\n    return this.path;\n  };\n  AnimationItem.prototype.getAssetsPath = function (assetData) {\n    var path = \"\";\n    if (assetData.e) {\n      path = assetData.p;\n    } else if (this.assetsPath) {\n      var imagePath = assetData.p;\n      if (imagePath.indexOf(\"images/\") !== -1) {\n        imagePath = imagePath.split(\"/\")[1];\n      }\n      path = this.assetsPath + imagePath;\n    } else {\n      path = this.path;\n      path += assetData.u ? assetData.u : \"\";\n      path += assetData.p;\n    }\n    return path;\n  };\n  AnimationItem.prototype.getAssetData = function (id) {\n    var i = 0;\n    var len = this.assets.length;\n    while (i < len) {\n      if (id === this.assets[i].id) {\n        return this.assets[i];\n      }\n      i += 1;\n    }\n    return null;\n  };\n  AnimationItem.prototype.hide = function () {\n    this.renderer.hide();\n  };\n  AnimationItem.prototype.show = function () {\n    this.renderer.show();\n  };\n  AnimationItem.prototype.getDuration = function (isFrame) {\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\n  };\n  AnimationItem.prototype.updateDocumentData = function (path, documentData, index2) {\n    try {\n      var element = this.renderer.getElementByPath(path);\n      element.updateDocumentData(documentData, index2);\n    } catch (error) {}\n  };\n  AnimationItem.prototype.trigger = function (name) {\n    if (this._cbs && this._cbs[name]) {\n      switch (name) {\n        case \"enterFrame\":\n          this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier));\n          break;\n        case \"drawnFrame\":\n          this.drawnFrameEvent.currentTime = this.currentFrame;\n          this.drawnFrameEvent.totalTime = this.totalFrames;\n          this.drawnFrameEvent.direction = this.frameModifier;\n          this.triggerEvent(name, this.drawnFrameEvent);\n          break;\n        case \"loopComplete\":\n          this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n          break;\n        case \"complete\":\n          this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult));\n          break;\n        case \"segmentStart\":\n          this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n          break;\n        case \"destroy\":\n          this.triggerEvent(name, new BMDestroyEvent(name, this));\n          break;\n        default:\n          this.triggerEvent(name);\n      }\n    }\n    if (name === \"enterFrame\" && this.onEnterFrame) {\n      this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));\n    }\n    if (name === \"loopComplete\" && this.onLoopComplete) {\n      this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\n    }\n    if (name === \"complete\" && this.onComplete) {\n      this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult));\n    }\n    if (name === \"segmentStart\" && this.onSegmentStart) {\n      this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\n    }\n    if (name === \"destroy\" && this.onDestroy) {\n      this.onDestroy.call(this, new BMDestroyEvent(name, this));\n    }\n  };\n  AnimationItem.prototype.triggerRenderFrameError = function (nativeError) {\n    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);\n    this.triggerEvent(\"error\", error);\n    if (this.onError) {\n      this.onError.call(this, error);\n    }\n  };\n  AnimationItem.prototype.triggerConfigError = function (nativeError) {\n    var error = new BMConfigErrorEvent(nativeError, this.currentFrame);\n    this.triggerEvent(\"error\", error);\n    if (this.onError) {\n      this.onError.call(this, error);\n    }\n  };\n  const animationManager = function () {\n    var moduleOb = {};\n    var registeredAnimations = [];\n    var initTime = 0;\n    var len = 0;\n    var playingAnimationsNum = 0;\n    var _stopped = true;\n    var _isFrozen = false;\n    function removeElement(ev) {\n      var i = 0;\n      var animItem = ev.target;\n      while (i < len) {\n        if (registeredAnimations[i].animation === animItem) {\n          registeredAnimations.splice(i, 1);\n          i -= 1;\n          len -= 1;\n          if (!animItem.isPaused) {\n            subtractPlayingCount();\n          }\n        }\n        i += 1;\n      }\n    }\n    function registerAnimation(element, animationData) {\n      if (!element) {\n        return null;\n      }\n      var i = 0;\n      while (i < len) {\n        if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {\n          return registeredAnimations[i].animation;\n        }\n        i += 1;\n      }\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, element);\n      animItem.setData(element, animationData);\n      return animItem;\n    }\n    function getRegisteredAnimations() {\n      var i;\n      var lenAnims = registeredAnimations.length;\n      var animations = [];\n      for (i = 0; i < lenAnims; i += 1) {\n        animations.push(registeredAnimations[i].animation);\n      }\n      return animations;\n    }\n    function addPlayingCount() {\n      playingAnimationsNum += 1;\n      activate();\n    }\n    function subtractPlayingCount() {\n      playingAnimationsNum -= 1;\n    }\n    function setupAnimation(animItem, element) {\n      animItem.addEventListener(\"destroy\", removeElement);\n      animItem.addEventListener(\"_active\", addPlayingCount);\n      animItem.addEventListener(\"_idle\", subtractPlayingCount);\n      registeredAnimations.push({\n        elem: element,\n        animation: animItem\n      });\n      len += 1;\n    }\n    function loadAnimation2(params) {\n      var animItem = new AnimationItem();\n      setupAnimation(animItem, null);\n      animItem.setParams(params);\n      return animItem;\n    }\n    function setSpeed(val, animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setSpeed(val, animation);\n      }\n    }\n    function setDirection(val, animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setDirection(val, animation);\n      }\n    }\n    function play(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.play(animation);\n      }\n    }\n    function resume(nowTime) {\n      var elapsedTime = nowTime - initTime;\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.advanceTime(elapsedTime);\n      }\n      initTime = nowTime;\n      if (playingAnimationsNum && !_isFrozen) {\n        window.requestAnimationFrame(resume);\n      } else {\n        _stopped = true;\n      }\n    }\n    function first(nowTime) {\n      initTime = nowTime;\n      window.requestAnimationFrame(resume);\n    }\n    function pause(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.pause(animation);\n      }\n    }\n    function goToAndStop(value, isFrame, animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.goToAndStop(value, isFrame, animation);\n      }\n    }\n    function stop(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.stop(animation);\n      }\n    }\n    function togglePause(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.togglePause(animation);\n      }\n    }\n    function destroy(animation) {\n      var i;\n      for (i = len - 1; i >= 0; i -= 1) {\n        registeredAnimations[i].animation.destroy(animation);\n      }\n    }\n    function searchAnimations2(animationData, standalone, renderer) {\n      var animElements = [].concat([].slice.call(document.getElementsByClassName(\"lottie\")), [].slice.call(document.getElementsByClassName(\"bodymovin\")));\n      var i;\n      var lenAnims = animElements.length;\n      for (i = 0; i < lenAnims; i += 1) {\n        if (renderer) {\n          animElements[i].setAttribute(\"data-bm-type\", renderer);\n        }\n        registerAnimation(animElements[i], animationData);\n      }\n      if (standalone && lenAnims === 0) {\n        if (!renderer) {\n          renderer = \"svg\";\n        }\n        var body = document.getElementsByTagName(\"body\")[0];\n        body.innerText = \"\";\n        var div = createTag(\"div\");\n        div.style.width = \"100%\";\n        div.style.height = \"100%\";\n        div.setAttribute(\"data-bm-type\", renderer);\n        body.appendChild(div);\n        registerAnimation(div, animationData);\n      }\n    }\n    function resize() {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.resize();\n      }\n    }\n    function activate() {\n      if (!_isFrozen && playingAnimationsNum) {\n        if (_stopped) {\n          window.requestAnimationFrame(first);\n          _stopped = false;\n        }\n      }\n    }\n    function freeze() {\n      _isFrozen = true;\n    }\n    function unfreeze() {\n      _isFrozen = false;\n      activate();\n    }\n    function setVolume(val, animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setVolume(val, animation);\n      }\n    }\n    function mute(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.mute(animation);\n      }\n    }\n    function unmute(animation) {\n      var i;\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.unmute(animation);\n      }\n    }\n    moduleOb.registerAnimation = registerAnimation;\n    moduleOb.loadAnimation = loadAnimation2;\n    moduleOb.setSpeed = setSpeed;\n    moduleOb.setDirection = setDirection;\n    moduleOb.play = play;\n    moduleOb.pause = pause;\n    moduleOb.stop = stop;\n    moduleOb.togglePause = togglePause;\n    moduleOb.searchAnimations = searchAnimations2;\n    moduleOb.resize = resize;\n    moduleOb.goToAndStop = goToAndStop;\n    moduleOb.destroy = destroy;\n    moduleOb.freeze = freeze;\n    moduleOb.unfreeze = unfreeze;\n    moduleOb.setVolume = setVolume;\n    moduleOb.mute = mute;\n    moduleOb.unmute = unmute;\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\n    return moduleOb;\n  }();\n  const BezierFactory = function () {\n    var ob = {};\n    ob.getBezierEasing = getBezierEasing;\n    var beziers = {};\n    function getBezierEasing(a, b, c, d, nm) {\n      var str = nm || (\"bez_\" + a + \"_\" + b + \"_\" + c + \"_\" + d).replace(/\\./g, \"p\");\n      if (beziers[str]) {\n        return beziers[str];\n      }\n      var bezEasing = new BezierEasing([a, b, c, d]);\n      beziers[str] = bezEasing;\n      return bezEasing;\n    }\n    var NEWTON_ITERATIONS = 4;\n    var NEWTON_MIN_SLOPE = 1e-3;\n    var SUBDIVISION_PRECISION = 1e-7;\n    var SUBDIVISION_MAX_ITERATIONS = 10;\n    var kSplineTableSize = 11;\n    var kSampleStepSize = 1 / (kSplineTableSize - 1);\n    var float32ArraySupported = typeof Float32Array === \"function\";\n    function A(aA1, aA2) {\n      return 1 - 3 * aA2 + 3 * aA1;\n    }\n    function B(aA1, aA2) {\n      return 3 * aA2 - 6 * aA1;\n    }\n    function C(aA1) {\n      return 3 * aA1;\n    }\n    function calcBezier(aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n    }\n    function getSlope(aT, aA1, aA2) {\n      return 3 * A(aA1, aA2) * aT * aT + 2 * B(aA1, aA2) * aT + C(aA1);\n    }\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n      var currentX,\n        currentT,\n        i = 0;\n      do {\n        currentT = aA + (aB - aA) / 2;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0) {\n          aB = currentT;\n        } else {\n          aA = currentT;\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n      return currentT;\n    }\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0) return aGuessT;\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n      }\n      return aGuessT;\n    }\n    function BezierEasing(points) {\n      this._p = points;\n      this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n      this._precomputed = false;\n      this.get = this.get.bind(this);\n    }\n    BezierEasing.prototype = {\n      get: function (x) {\n        var mX1 = this._p[0],\n          mY1 = this._p[1],\n          mX2 = this._p[2],\n          mY2 = this._p[3];\n        if (!this._precomputed) this._precompute();\n        if (mX1 === mY1 && mX2 === mY2) return x;\n        if (x === 0) return 0;\n        if (x === 1) return 1;\n        return calcBezier(this._getTForX(x), mY1, mY2);\n      },\n      // Private part\n      _precompute: function () {\n        var mX1 = this._p[0],\n          mY1 = this._p[1],\n          mX2 = this._p[2],\n          mY2 = this._p[3];\n        this._precomputed = true;\n        if (mX1 !== mY1 || mX2 !== mY2) {\n          this._calcSampleValues();\n        }\n      },\n      _calcSampleValues: function () {\n        var mX1 = this._p[0],\n          mX2 = this._p[2];\n        for (var i = 0; i < kSplineTableSize; ++i) {\n          this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n        }\n      },\n      /**\n       * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\n       */\n      _getTForX: function (aX) {\n        var mX1 = this._p[0],\n          mX2 = this._p[2],\n          mSampleValues = this._mSampleValues;\n        var intervalStart = 0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        if (initialSlope === 0) {\n          return guessForT;\n        }\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n    };\n    return ob;\n  }();\n  const pooling = function () {\n    function double(arr) {\n      return arr.concat(createSizedArray(arr.length));\n    }\n    return {\n      double\n    };\n  }();\n  const poolFactory = function () {\n    return function (initialLength, _create, _release) {\n      var _length = 0;\n      var _maxLength = initialLength;\n      var pool = createSizedArray(_maxLength);\n      var ob = {\n        newElement,\n        release\n      };\n      function newElement() {\n        var element;\n        if (_length) {\n          _length -= 1;\n          element = pool[_length];\n        } else {\n          element = _create();\n        }\n        return element;\n      }\n      function release(element) {\n        if (_length === _maxLength) {\n          pool = pooling.double(pool);\n          _maxLength *= 2;\n        }\n        if (_release) {\n          _release(element);\n        }\n        pool[_length] = element;\n        _length += 1;\n      }\n      return ob;\n    };\n  }();\n  const bezierLengthPool = function () {\n    function create() {\n      return {\n        addedLength: 0,\n        percents: createTypedArray(\"float32\", getDefaultCurveSegments()),\n        lengths: createTypedArray(\"float32\", getDefaultCurveSegments())\n      };\n    }\n    return poolFactory(8, create);\n  }();\n  const segmentsLengthPool = function () {\n    function create() {\n      return {\n        lengths: [],\n        totalLength: 0\n      };\n    }\n    function release(element) {\n      var i;\n      var len = element.lengths.length;\n      for (i = 0; i < len; i += 1) {\n        bezierLengthPool.release(element.lengths[i]);\n      }\n      element.lengths.length = 0;\n    }\n    return poolFactory(8, create, release);\n  }();\n  function bezFunction() {\n    var math = Math;\n    function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\n      var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;\n      return det1 > -1e-3 && det1 < 1e-3;\n    }\n    function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\n      if (z1 === 0 && z2 === 0 && z3 === 0) {\n        return pointOnLine2D(x1, y1, x2, y2, x3, y3);\n      }\n      var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2));\n      var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2));\n      var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2));\n      var diffDist;\n      if (dist1 > dist2) {\n        if (dist1 > dist3) {\n          diffDist = dist1 - dist2 - dist3;\n        } else {\n          diffDist = dist3 - dist2 - dist1;\n        }\n      } else if (dist3 > dist2) {\n        diffDist = dist3 - dist2 - dist1;\n      } else {\n        diffDist = dist2 - dist1 - dist3;\n      }\n      return diffDist > -1e-4 && diffDist < 1e-4;\n    }\n    var getBezierLength = function () {\n      return function (pt1, pt2, pt3, pt4) {\n        var curveSegments = getDefaultCurveSegments();\n        var k;\n        var i;\n        var len;\n        var ptCoord;\n        var perc;\n        var addedLength = 0;\n        var ptDistance;\n        var point = [];\n        var lastPoint = [];\n        var lengthData = bezierLengthPool.newElement();\n        len = pt3.length;\n        for (k = 0; k < curveSegments; k += 1) {\n          perc = k / (curveSegments - 1);\n          ptDistance = 0;\n          for (i = 0; i < len; i += 1) {\n            ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bmPow(perc, 2) * pt4[i] + bmPow(perc, 3) * pt2[i];\n            point[i] = ptCoord;\n            if (lastPoint[i] !== null) {\n              ptDistance += bmPow(point[i] - lastPoint[i], 2);\n            }\n            lastPoint[i] = point[i];\n          }\n          if (ptDistance) {\n            ptDistance = bmSqrt(ptDistance);\n            addedLength += ptDistance;\n          }\n          lengthData.percents[k] = perc;\n          lengthData.lengths[k] = addedLength;\n        }\n        lengthData.addedLength = addedLength;\n        return lengthData;\n      };\n    }();\n    function getSegmentsLength(shapeData) {\n      var segmentsLength = segmentsLengthPool.newElement();\n      var closed = shapeData.c;\n      var pathV = shapeData.v;\n      var pathO = shapeData.o;\n      var pathI = shapeData.i;\n      var i;\n      var len = shapeData._length;\n      var lengths = segmentsLength.lengths;\n      var totalLength = 0;\n      for (i = 0; i < len - 1; i += 1) {\n        lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);\n        totalLength += lengths[i].addedLength;\n      }\n      if (closed && len) {\n        lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);\n        totalLength += lengths[i].addedLength;\n      }\n      segmentsLength.totalLength = totalLength;\n      return segmentsLength;\n    }\n    function BezierData(length) {\n      this.segmentLength = 0;\n      this.points = new Array(length);\n    }\n    function PointData(partial, point) {\n      this.partialLength = partial;\n      this.point = point;\n    }\n    var buildBezierData = function () {\n      var storedData = {};\n      return function (pt1, pt2, pt3, pt4) {\n        var bezierName = (pt1[0] + \"_\" + pt1[1] + \"_\" + pt2[0] + \"_\" + pt2[1] + \"_\" + pt3[0] + \"_\" + pt3[1] + \"_\" + pt4[0] + \"_\" + pt4[1]).replace(/\\./g, \"p\");\n        if (!storedData[bezierName]) {\n          var curveSegments = getDefaultCurveSegments();\n          var k;\n          var i;\n          var len;\n          var ptCoord;\n          var perc;\n          var addedLength = 0;\n          var ptDistance;\n          var point;\n          var lastPoint = null;\n          if (pt1.length === 2 && (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {\n            curveSegments = 2;\n          }\n          var bezierData = new BezierData(curveSegments);\n          len = pt3.length;\n          for (k = 0; k < curveSegments; k += 1) {\n            point = createSizedArray(len);\n            perc = k / (curveSegments - 1);\n            ptDistance = 0;\n            for (i = 0; i < len; i += 1) {\n              ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) + bmPow(perc, 3) * pt2[i];\n              point[i] = ptCoord;\n              if (lastPoint !== null) {\n                ptDistance += bmPow(point[i] - lastPoint[i], 2);\n              }\n            }\n            ptDistance = bmSqrt(ptDistance);\n            addedLength += ptDistance;\n            bezierData.points[k] = new PointData(ptDistance, point);\n            lastPoint = point;\n          }\n          bezierData.segmentLength = addedLength;\n          storedData[bezierName] = bezierData;\n        }\n        return storedData[bezierName];\n      };\n    }();\n    function getDistancePerc(perc, bezierData) {\n      var percents = bezierData.percents;\n      var lengths = bezierData.lengths;\n      var len = percents.length;\n      var initPos = bmFloor((len - 1) * perc);\n      var lengthPos = perc * bezierData.addedLength;\n      var lPerc = 0;\n      if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {\n        return percents[initPos];\n      }\n      var dir = lengths[initPos] > lengthPos ? -1 : 1;\n      var flag = true;\n      while (flag) {\n        if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {\n          lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);\n          flag = false;\n        } else {\n          initPos += dir;\n        }\n        if (initPos < 0 || initPos >= len - 1) {\n          if (initPos === len - 1) {\n            return percents[initPos];\n          }\n          flag = false;\n        }\n      }\n      return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;\n    }\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\n      var t1 = getDistancePerc(percent, bezierData);\n      var u1 = 1 - t1;\n      var ptX = math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1e3) / 1e3;\n      var ptY = math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1e3) / 1e3;\n      return [ptX, ptY];\n    }\n    var bezierSegmentPoints = createTypedArray(\"float32\", 8);\n    function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\n      if (startPerc < 0) {\n        startPerc = 0;\n      } else if (startPerc > 1) {\n        startPerc = 1;\n      }\n      var t0 = getDistancePerc(startPerc, bezierData);\n      endPerc = endPerc > 1 ? 1 : endPerc;\n      var t1 = getDistancePerc(endPerc, bezierData);\n      var i;\n      var len = pt1.length;\n      var u0 = 1 - t0;\n      var u1 = 1 - t1;\n      var u0u0u0 = u0 * u0 * u0;\n      var t0u0u0_3 = t0 * u0 * u0 * 3;\n      var t0t0u0_3 = t0 * t0 * u0 * 3;\n      var t0t0t0 = t0 * t0 * t0;\n      var u0u0u1 = u0 * u0 * u1;\n      var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1;\n      var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1;\n      var t0t0t1 = t0 * t0 * t1;\n      var u0u1u1 = u0 * u1 * u1;\n      var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1;\n      var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1;\n      var t0t1t1 = t0 * t1 * t1;\n      var u1u1u1 = u1 * u1 * u1;\n      var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1;\n      var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1;\n      var t1t1t1 = t1 * t1 * t1;\n      for (i = 0; i < len; i += 1) {\n        bezierSegmentPoints[i * 4] = math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1e3) / 1e3;\n        bezierSegmentPoints[i * 4 + 1] = math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1e3) / 1e3;\n        bezierSegmentPoints[i * 4 + 2] = math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1e3) / 1e3;\n        bezierSegmentPoints[i * 4 + 3] = math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1e3) / 1e3;\n      }\n      return bezierSegmentPoints;\n    }\n    return {\n      getSegmentsLength,\n      getNewSegment,\n      getPointInSegment,\n      buildBezierData,\n      pointOnLine2D,\n      pointOnLine3D\n    };\n  }\n  const bez = bezFunction();\n  const PropertyFactory = function () {\n    var initFrame = initialDefaultFrame;\n    var mathAbs = Math.abs;\n    function interpolateValue(frameNum, caching) {\n      var offsetTime = this.offsetTime;\n      var newValue;\n      if (this.propType === \"multidimensional\") {\n        newValue = createTypedArray(\"float32\", this.pv.length);\n      }\n      var iterationIndex = caching.lastIndex;\n      var i = iterationIndex;\n      var len = this.keyframes.length - 1;\n      var flag = true;\n      var keyData;\n      var nextKeyData;\n      var keyframeMetadata;\n      while (flag) {\n        keyData = this.keyframes[i];\n        nextKeyData = this.keyframes[i + 1];\n        if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {\n          if (keyData.h) {\n            keyData = nextKeyData;\n          }\n          iterationIndex = 0;\n          break;\n        }\n        if (nextKeyData.t - offsetTime > frameNum) {\n          iterationIndex = i;\n          break;\n        }\n        if (i < len - 1) {\n          i += 1;\n        } else {\n          iterationIndex = 0;\n          flag = false;\n        }\n      }\n      keyframeMetadata = this.keyframesMetadata[i] || {};\n      var k;\n      var kLen;\n      var perc;\n      var jLen;\n      var j;\n      var fnc;\n      var nextKeyTime = nextKeyData.t - offsetTime;\n      var keyTime = keyData.t - offsetTime;\n      var endValue;\n      if (keyData.to) {\n        if (!keyframeMetadata.bezierData) {\n          keyframeMetadata.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\n        }\n        var bezierData = keyframeMetadata.bezierData;\n        if (frameNum >= nextKeyTime || frameNum < keyTime) {\n          var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\n          kLen = bezierData.points[ind].point.length;\n          for (k = 0; k < kLen; k += 1) {\n            newValue[k] = bezierData.points[ind].point[k];\n          }\n        } else {\n          if (keyframeMetadata.__fnct) {\n            fnc = keyframeMetadata.__fnct;\n          } else {\n            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\n            keyframeMetadata.__fnct = fnc;\n          }\n          perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n          var distanceInLine = bezierData.segmentLength * perc;\n          var segmentPerc;\n          var addedLength = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0;\n          j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0;\n          flag = true;\n          jLen = bezierData.points.length;\n          while (flag) {\n            addedLength += bezierData.points[j].partialLength;\n            if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\n              kLen = bezierData.points[j].point.length;\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k];\n              }\n              break;\n            } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\n              segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\n              kLen = bezierData.points[j].point.length;\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\n              }\n              break;\n            }\n            if (j < jLen - 1) {\n              j += 1;\n            } else {\n              flag = false;\n            }\n          }\n          caching._lastPoint = j;\n          caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\n          caching._lastKeyframeIndex = i;\n        }\n      } else {\n        var outX;\n        var outY;\n        var inX;\n        var inY;\n        var keyValue;\n        len = keyData.s.length;\n        endValue = nextKeyData.s || keyData.e;\n        if (this.sh && keyData.h !== 1) {\n          if (frameNum >= nextKeyTime) {\n            newValue[0] = endValue[0];\n            newValue[1] = endValue[1];\n            newValue[2] = endValue[2];\n          } else if (frameNum <= keyTime) {\n            newValue[0] = keyData.s[0];\n            newValue[1] = keyData.s[1];\n            newValue[2] = keyData.s[2];\n          } else {\n            var quatStart = createQuaternion(keyData.s);\n            var quatEnd = createQuaternion(endValue);\n            var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\n            quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\n          }\n        } else {\n          for (i = 0; i < len; i += 1) {\n            if (keyData.h !== 1) {\n              if (frameNum >= nextKeyTime) {\n                perc = 1;\n              } else if (frameNum < keyTime) {\n                perc = 0;\n              } else {\n                if (keyData.o.x.constructor === Array) {\n                  if (!keyframeMetadata.__fnct) {\n                    keyframeMetadata.__fnct = [];\n                  }\n                  if (!keyframeMetadata.__fnct[i]) {\n                    outX = keyData.o.x[i] === void 0 ? keyData.o.x[0] : keyData.o.x[i];\n                    outY = keyData.o.y[i] === void 0 ? keyData.o.y[0] : keyData.o.y[i];\n                    inX = keyData.i.x[i] === void 0 ? keyData.i.x[0] : keyData.i.x[i];\n                    inY = keyData.i.y[i] === void 0 ? keyData.i.y[0] : keyData.i.y[i];\n                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                    keyframeMetadata.__fnct[i] = fnc;\n                  } else {\n                    fnc = keyframeMetadata.__fnct[i];\n                  }\n                } else if (!keyframeMetadata.__fnct) {\n                  outX = keyData.o.x;\n                  outY = keyData.o.y;\n                  inX = keyData.i.x;\n                  inY = keyData.i.y;\n                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\n                  keyData.keyframeMetadata = fnc;\n                } else {\n                  fnc = keyframeMetadata.__fnct;\n                }\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\n              }\n            }\n            endValue = nextKeyData.s || keyData.e;\n            keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\n            if (this.propType === \"multidimensional\") {\n              newValue[i] = keyValue;\n            } else {\n              newValue = keyValue;\n            }\n          }\n        }\n      }\n      caching.lastIndex = iterationIndex;\n      return newValue;\n    }\n    function slerp(a, b, t) {\n      var out = [];\n      var ax = a[0];\n      var ay = a[1];\n      var az = a[2];\n      var aw = a[3];\n      var bx = b[0];\n      var by = b[1];\n      var bz = b[2];\n      var bw = b[3];\n      var omega;\n      var cosom;\n      var sinom;\n      var scale0;\n      var scale1;\n      cosom = ax * bx + ay * by + az * bz + aw * bw;\n      if (cosom < 0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n      }\n      if (1 - cosom > 1e-6) {\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n      } else {\n        scale0 = 1 - t;\n        scale1 = t;\n      }\n      out[0] = scale0 * ax + scale1 * bx;\n      out[1] = scale0 * ay + scale1 * by;\n      out[2] = scale0 * az + scale1 * bz;\n      out[3] = scale0 * aw + scale1 * bw;\n      return out;\n    }\n    function quaternionToEuler(out, quat) {\n      var qx = quat[0];\n      var qy = quat[1];\n      var qz = quat[2];\n      var qw = quat[3];\n      var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);\n      var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);\n      var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);\n      out[0] = heading / degToRads;\n      out[1] = attitude / degToRads;\n      out[2] = bank / degToRads;\n    }\n    function createQuaternion(values) {\n      var heading = values[0] * degToRads;\n      var attitude = values[1] * degToRads;\n      var bank = values[2] * degToRads;\n      var c1 = Math.cos(heading / 2);\n      var c2 = Math.cos(attitude / 2);\n      var c3 = Math.cos(bank / 2);\n      var s1 = Math.sin(heading / 2);\n      var s2 = Math.sin(attitude / 2);\n      var s3 = Math.sin(bank / 2);\n      var w = c1 * c2 * c3 - s1 * s2 * s3;\n      var x = s1 * s2 * c3 + c1 * c2 * s3;\n      var y = s1 * c2 * c3 + c1 * s2 * s3;\n      var z = c1 * s2 * c3 - s1 * c2 * s3;\n      return [x, y, z, w];\n    }\n    function getValueAtCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n      if (!(frameNum === this._caching.lastFrame || this._caching.lastFrame !== initFrame && (this._caching.lastFrame >= endTime && frameNum >= endTime || this._caching.lastFrame < initTime && frameNum < initTime))) {\n        if (this._caching.lastFrame >= frameNum) {\n          this._caching._lastKeyframeIndex = -1;\n          this._caching.lastIndex = 0;\n        }\n        var renderResult = this.interpolateValue(frameNum, this._caching);\n        this.pv = renderResult;\n      }\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n    function setVValue(val) {\n      var multipliedValue;\n      if (this.propType === \"unidimensional\") {\n        multipliedValue = val * this.mult;\n        if (mathAbs(this.v - multipliedValue) > 1e-5) {\n          this.v = multipliedValue;\n          this._mdf = true;\n        }\n      } else {\n        var i = 0;\n        var len = this.v.length;\n        while (i < len) {\n          multipliedValue = val[i] * this.mult;\n          if (mathAbs(this.v[i] - multipliedValue) > 1e-5) {\n            this.v[i] = multipliedValue;\n            this._mdf = true;\n          }\n          i += 1;\n        }\n      }\n    }\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\n        return;\n      }\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n      this.lock = true;\n      this._mdf = this._isFirstFrame;\n      var i;\n      var len = this.effectsSequence.length;\n      var finalValue = this.kf ? this.pv : this.data.k;\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n      this.setVValue(finalValue);\n      this._isFirstFrame = false;\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n    function ValueProperty(elem, data, mult, container) {\n      this.propType = \"unidimensional\";\n      this.mult = mult || 1;\n      this.data = data;\n      this.v = mult ? data.k * mult : data.k;\n      this.pv = data.k;\n      this._mdf = false;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.k = false;\n      this.kf = false;\n      this.vel = 0;\n      this.effectsSequence = [];\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n    function MultiDimensionalProperty(elem, data, mult, container) {\n      this.propType = \"multidimensional\";\n      this.mult = mult || 1;\n      this.data = data;\n      this._mdf = false;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.k = false;\n      this.kf = false;\n      this.frameId = -1;\n      var i;\n      var len = data.k.length;\n      this.v = createTypedArray(\"float32\", len);\n      this.pv = createTypedArray(\"float32\", len);\n      this.vel = createTypedArray(\"float32\", len);\n      for (i = 0; i < len; i += 1) {\n        this.v[i] = data.k[i] * this.mult;\n        this.pv[i] = data.k[i];\n      }\n      this._isFirstFrame = true;\n      this.effectsSequence = [];\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.addEffect = addEffect;\n    }\n    function KeyframedValueProperty(elem, data, mult, container) {\n      this.propType = \"unidimensional\";\n      this.keyframes = data.k;\n      this.keyframesMetadata = [];\n      this.offsetTime = elem.data.st;\n      this.frameId = -1;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: 0,\n        _lastKeyframeIndex: -1\n      };\n      this.k = true;\n      this.kf = true;\n      this.data = data;\n      this.mult = mult || 1;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.v = initFrame;\n      this.pv = initFrame;\n      this._isFirstFrame = true;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.addEffect = addEffect;\n    }\n    function KeyframedMultidimensionalProperty(elem, data, mult, container) {\n      this.propType = \"multidimensional\";\n      var i;\n      var len = data.k.length;\n      var s;\n      var e;\n      var to;\n      var ti;\n      for (i = 0; i < len - 1; i += 1) {\n        if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {\n          s = data.k[i].s;\n          e = data.k[i + 1].s;\n          to = data.k[i].to;\n          ti = data.k[i].ti;\n          if (s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1]) || s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2])) {\n            data.k[i].to = null;\n            data.k[i].ti = null;\n          }\n          if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\n            if (s.length === 2 || s[2] === e[2] && to[2] === 0 && ti[2] === 0) {\n              data.k[i].to = null;\n              data.k[i].ti = null;\n            }\n          }\n        }\n      }\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)];\n      this.data = data;\n      this.keyframes = data.k;\n      this.keyframesMetadata = [];\n      this.offsetTime = elem.data.st;\n      this.k = true;\n      this.kf = true;\n      this._isFirstFrame = true;\n      this.mult = mult || 1;\n      this.elem = elem;\n      this.container = container;\n      this.comp = elem.comp;\n      this.getValue = processEffectsSequence;\n      this.setVValue = setVValue;\n      this.interpolateValue = interpolateValue;\n      this.frameId = -1;\n      var arrLen = data.k[0].s.length;\n      this.v = createTypedArray(\"float32\", arrLen);\n      this.pv = createTypedArray(\"float32\", arrLen);\n      for (i = 0; i < arrLen; i += 1) {\n        this.v[i] = initFrame;\n        this.pv[i] = initFrame;\n      }\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: createTypedArray(\"float32\", arrLen)\n      };\n      this.addEffect = addEffect;\n    }\n    function getProp(elem, data, type, mult, container) {\n      var p;\n      if (!data.k.length) {\n        p = new ValueProperty(elem, data, mult, container);\n      } else if (typeof data.k[0] === \"number\") {\n        p = new MultiDimensionalProperty(elem, data, mult, container);\n      } else {\n        switch (type) {\n          case 0:\n            p = new KeyframedValueProperty(elem, data, mult, container);\n            break;\n          case 1:\n            p = new KeyframedMultidimensionalProperty(elem, data, mult, container);\n            break;\n        }\n      }\n      if (p.effectsSequence.length) {\n        container.addDynamicProperty(p);\n      }\n      return p;\n    }\n    var ob = {\n      getProp\n    };\n    return ob;\n  }();\n  function DynamicPropertyContainer() {}\n  DynamicPropertyContainer.prototype = {\n    addDynamicProperty: function (prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n        this.container.addDynamicProperty(this);\n        this._isAnimated = true;\n      }\n    },\n    iterateDynamicProperties: function () {\n      this._mdf = false;\n      var i;\n      var len = this.dynamicProperties.length;\n      for (i = 0; i < len; i += 1) {\n        this.dynamicProperties[i].getValue();\n        if (this.dynamicProperties[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    },\n    initDynamicPropertyContainer: function (container) {\n      this.container = container;\n      this.dynamicProperties = [];\n      this._mdf = false;\n      this._isAnimated = false;\n    }\n  };\n  const pointPool = function () {\n    function create() {\n      return createTypedArray(\"float32\", 2);\n    }\n    return poolFactory(8, create);\n  }();\n  function ShapePath() {\n    this.c = false;\n    this._length = 0;\n    this._maxLength = 8;\n    this.v = createSizedArray(this._maxLength);\n    this.o = createSizedArray(this._maxLength);\n    this.i = createSizedArray(this._maxLength);\n  }\n  ShapePath.prototype.setPathData = function (closed, len) {\n    this.c = closed;\n    this.setLength(len);\n    var i = 0;\n    while (i < len) {\n      this.v[i] = pointPool.newElement();\n      this.o[i] = pointPool.newElement();\n      this.i[i] = pointPool.newElement();\n      i += 1;\n    }\n  };\n  ShapePath.prototype.setLength = function (len) {\n    while (this._maxLength < len) {\n      this.doubleArrayLength();\n    }\n    this._length = len;\n  };\n  ShapePath.prototype.doubleArrayLength = function () {\n    this.v = this.v.concat(createSizedArray(this._maxLength));\n    this.i = this.i.concat(createSizedArray(this._maxLength));\n    this.o = this.o.concat(createSizedArray(this._maxLength));\n    this._maxLength *= 2;\n  };\n  ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\n    var arr;\n    this._length = Math.max(this._length, pos + 1);\n    if (this._length >= this._maxLength) {\n      this.doubleArrayLength();\n    }\n    switch (type) {\n      case \"v\":\n        arr = this.v;\n        break;\n      case \"i\":\n        arr = this.i;\n        break;\n      case \"o\":\n        arr = this.o;\n        break;\n      default:\n        arr = [];\n        break;\n    }\n    if (!arr[pos] || arr[pos] && !replace) {\n      arr[pos] = pointPool.newElement();\n    }\n    arr[pos][0] = x;\n    arr[pos][1] = y;\n  };\n  ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\n    this.setXYAt(vX, vY, \"v\", pos, replace);\n    this.setXYAt(oX, oY, \"o\", pos, replace);\n    this.setXYAt(iX, iY, \"i\", pos, replace);\n  };\n  ShapePath.prototype.reverse = function () {\n    var newPath = new ShapePath();\n    newPath.setPathData(this.c, this._length);\n    var vertices = this.v;\n    var outPoints = this.o;\n    var inPoints = this.i;\n    var init = 0;\n    if (this.c) {\n      newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\n      init = 1;\n    }\n    var cnt = this._length - 1;\n    var len = this._length;\n    var i;\n    for (i = init; i < len; i += 1) {\n      newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\n      cnt -= 1;\n    }\n    return newPath;\n  };\n  const shapePool = function () {\n    function create() {\n      return new ShapePath();\n    }\n    function release(shapePath) {\n      var len = shapePath._length;\n      var i;\n      for (i = 0; i < len; i += 1) {\n        pointPool.release(shapePath.v[i]);\n        pointPool.release(shapePath.i[i]);\n        pointPool.release(shapePath.o[i]);\n        shapePath.v[i] = null;\n        shapePath.i[i] = null;\n        shapePath.o[i] = null;\n      }\n      shapePath._length = 0;\n      shapePath.c = false;\n    }\n    function clone(shape) {\n      var cloned = factory.newElement();\n      var i;\n      var len = shape._length === void 0 ? shape.v.length : shape._length;\n      cloned.setLength(len);\n      cloned.c = shape.c;\n      for (i = 0; i < len; i += 1) {\n        cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);\n      }\n      return cloned;\n    }\n    var factory = poolFactory(4, create, release);\n    factory.clone = clone;\n    return factory;\n  }();\n  function ShapeCollection() {\n    this._length = 0;\n    this._maxLength = 4;\n    this.shapes = createSizedArray(this._maxLength);\n  }\n  ShapeCollection.prototype.addShape = function (shapeData) {\n    if (this._length === this._maxLength) {\n      this.shapes = this.shapes.concat(createSizedArray(this._maxLength));\n      this._maxLength *= 2;\n    }\n    this.shapes[this._length] = shapeData;\n    this._length += 1;\n  };\n  ShapeCollection.prototype.releaseShapes = function () {\n    var i;\n    for (i = 0; i < this._length; i += 1) {\n      shapePool.release(this.shapes[i]);\n    }\n    this._length = 0;\n  };\n  const shapeCollectionPool = function () {\n    var ob = {\n      newShapeCollection,\n      release\n    };\n    var _length = 0;\n    var _maxLength = 4;\n    var pool = createSizedArray(_maxLength);\n    function newShapeCollection() {\n      var shapeCollection;\n      if (_length) {\n        _length -= 1;\n        shapeCollection = pool[_length];\n      } else {\n        shapeCollection = new ShapeCollection();\n      }\n      return shapeCollection;\n    }\n    function release(shapeCollection) {\n      var i;\n      var len = shapeCollection._length;\n      for (i = 0; i < len; i += 1) {\n        shapePool.release(shapeCollection.shapes[i]);\n      }\n      shapeCollection._length = 0;\n      if (_length === _maxLength) {\n        pool = pooling.double(pool);\n        _maxLength *= 2;\n      }\n      pool[_length] = shapeCollection;\n      _length += 1;\n    }\n    return ob;\n  }();\n  const ShapePropertyFactory = function () {\n    var initFrame = -999999;\n    function interpolateShape(frameNum, previousValue, caching) {\n      var iterationIndex = caching.lastIndex;\n      var keyPropS;\n      var keyPropE;\n      var isHold;\n      var j;\n      var k;\n      var jLen;\n      var kLen;\n      var perc;\n      var vertexValue;\n      var kf = this.keyframes;\n      if (frameNum < kf[0].t - this.offsetTime) {\n        keyPropS = kf[0].s[0];\n        isHold = true;\n        iterationIndex = 0;\n      } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {\n        keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\n        isHold = true;\n      } else {\n        var i = iterationIndex;\n        var len = kf.length - 1;\n        var flag = true;\n        var keyData;\n        var nextKeyData;\n        var keyframeMetadata;\n        while (flag) {\n          keyData = kf[i];\n          nextKeyData = kf[i + 1];\n          if (nextKeyData.t - this.offsetTime > frameNum) {\n            break;\n          }\n          if (i < len - 1) {\n            i += 1;\n          } else {\n            flag = false;\n          }\n        }\n        keyframeMetadata = this.keyframesMetadata[i] || {};\n        isHold = keyData.h === 1;\n        iterationIndex = i;\n        if (!isHold) {\n          if (frameNum >= nextKeyData.t - this.offsetTime) {\n            perc = 1;\n          } else if (frameNum < keyData.t - this.offsetTime) {\n            perc = 0;\n          } else {\n            var fnc;\n            if (keyframeMetadata.__fnct) {\n              fnc = keyframeMetadata.__fnct;\n            } else {\n              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;\n              keyframeMetadata.__fnct = fnc;\n            }\n            perc = fnc((frameNum - (keyData.t - this.offsetTime)) / (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)));\n          }\n          keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\n        }\n        keyPropS = keyData.s[0];\n      }\n      jLen = previousValue._length;\n      kLen = keyPropS.i[0].length;\n      caching.lastIndex = iterationIndex;\n      for (j = 0; j < jLen; j += 1) {\n        for (k = 0; k < kLen; k += 1) {\n          vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;\n          previousValue.i[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;\n          previousValue.o[j][k] = vertexValue;\n          vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;\n          previousValue.v[j][k] = vertexValue;\n        }\n      }\n    }\n    function interpolateShapeCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime;\n      var initTime = this.keyframes[0].t - this.offsetTime;\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\n      var lastFrame = this._caching.lastFrame;\n      if (!(lastFrame !== initFrame && (lastFrame < initTime && frameNum < initTime || lastFrame > endTime && frameNum > endTime))) {\n        this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\n        this.interpolateShape(frameNum, this.pv, this._caching);\n      }\n      this._caching.lastFrame = frameNum;\n      return this.pv;\n    }\n    function resetShape() {\n      this.paths = this.localShapeCollection;\n    }\n    function shapesEqual(shape1, shape2) {\n      if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\n        return false;\n      }\n      var i;\n      var len = shape1._length;\n      for (i = 0; i < len; i += 1) {\n        if (shape1.v[i][0] !== shape2.v[i][0] || shape1.v[i][1] !== shape2.v[i][1] || shape1.o[i][0] !== shape2.o[i][0] || shape1.o[i][1] !== shape2.o[i][1] || shape1.i[i][0] !== shape2.i[i][0] || shape1.i[i][1] !== shape2.i[i][1]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    function setVValue(newPath) {\n      if (!shapesEqual(this.v, newPath)) {\n        this.v = shapePool.clone(newPath);\n        this.localShapeCollection.releaseShapes();\n        this.localShapeCollection.addShape(this.v);\n        this._mdf = true;\n        this.paths = this.localShapeCollection;\n      }\n    }\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n      if (!this.effectsSequence.length) {\n        this._mdf = false;\n        return;\n      }\n      if (this.lock) {\n        this.setVValue(this.pv);\n        return;\n      }\n      this.lock = true;\n      this._mdf = false;\n      var finalValue;\n      if (this.kf) {\n        finalValue = this.pv;\n      } else if (this.data.ks) {\n        finalValue = this.data.ks.k;\n      } else {\n        finalValue = this.data.pt.k;\n      }\n      var i;\n      var len = this.effectsSequence.length;\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue);\n      }\n      this.setVValue(finalValue);\n      this.lock = false;\n      this.frameId = this.elem.globalData.frameId;\n    }\n    function ShapeProperty(elem, data, type) {\n      this.propType = \"shape\";\n      this.comp = elem.comp;\n      this.container = elem;\n      this.elem = elem;\n      this.data = data;\n      this.k = false;\n      this.kf = false;\n      this._mdf = false;\n      var pathData = type === 3 ? data.pt.k : data.ks.k;\n      this.v = shapePool.clone(pathData);\n      this.pv = shapePool.clone(this.v);\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.reset = resetShape;\n      this.effectsSequence = [];\n    }\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction);\n      this.container.addDynamicProperty(this);\n    }\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\n    ShapeProperty.prototype.getValue = processEffectsSequence;\n    ShapeProperty.prototype.setVValue = setVValue;\n    ShapeProperty.prototype.addEffect = addEffect;\n    function KeyframedShapeProperty(elem, data, type) {\n      this.propType = \"shape\";\n      this.comp = elem.comp;\n      this.elem = elem;\n      this.container = elem;\n      this.offsetTime = elem.data.st;\n      this.keyframes = type === 3 ? data.pt.k : data.ks.k;\n      this.keyframesMetadata = [];\n      this.k = true;\n      this.kf = true;\n      var len = this.keyframes[0].s[0].i.length;\n      this.v = shapePool.newElement();\n      this.v.setPathData(this.keyframes[0].s[0].c, len);\n      this.pv = shapePool.clone(this.v);\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n      this.paths = this.localShapeCollection;\n      this.paths.addShape(this.v);\n      this.lastFrame = initFrame;\n      this.reset = resetShape;\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0\n      };\n      this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\n    }\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\n    var EllShapeProperty = function () {\n      var cPoint = roundCorner;\n      function EllShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.setPathData(true, 4);\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.paths = this.localShapeCollection;\n        this.localShapeCollection.addShape(this.v);\n        this.d = data.d;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.initDynamicPropertyContainer(elem);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertEllToPath();\n        }\n      }\n      EllShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n          if (this._mdf) {\n            this.convertEllToPath();\n          }\n        },\n        convertEllToPath: function () {\n          var p0 = this.p.v[0];\n          var p1 = this.p.v[1];\n          var s0 = this.s.v[0] / 2;\n          var s1 = this.s.v[1] / 2;\n          var _cw = this.d !== 3;\n          var _v = this.v;\n          _v.v[0][0] = p0;\n          _v.v[0][1] = p1 - s1;\n          _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.v[1][1] = p1;\n          _v.v[2][0] = p0;\n          _v.v[2][1] = p1 + s1;\n          _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.v[3][1] = p1;\n          _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.i[0][1] = p1 - s1;\n          _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.i[1][1] = p1 - s1 * cPoint;\n          _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.i[2][1] = p1 + s1;\n          _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.i[3][1] = p1 + s1 * cPoint;\n          _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\n          _v.o[0][1] = p1 - s1;\n          _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\n          _v.o[1][1] = p1 + s1 * cPoint;\n          _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\n          _v.o[2][1] = p1 + s1;\n          _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\n          _v.o[3][1] = p1 - s1 * cPoint;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory);\n      return EllShapePropertyFactory;\n    }();\n    var StarShapeProperty = function () {\n      function StarShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.setPathData(true, 0);\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.data = data;\n        this.frameId = -1;\n        this.d = data.d;\n        this.initDynamicPropertyContainer(elem);\n        if (data.sy === 1) {\n          this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this);\n          this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this);\n          this.convertToPath = this.convertStarToPath;\n        } else {\n          this.convertToPath = this.convertPolygonToPath;\n        }\n        this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\n        this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this);\n        this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this);\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertToPath();\n        }\n      }\n      StarShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n          if (this._mdf) {\n            this.convertToPath();\n          }\n        },\n        convertStarToPath: function () {\n          var numPts = Math.floor(this.pt.v) * 2;\n          var angle = Math.PI * 2 / numPts;\n          var longFlag = true;\n          var longRad = this.or.v;\n          var shortRad = this.ir.v;\n          var longRound = this.os.v;\n          var shortRound = this.is.v;\n          var longPerimSegment = 2 * Math.PI * longRad / (numPts * 2);\n          var shortPerimSegment = 2 * Math.PI * shortRad / (numPts * 2);\n          var i;\n          var rad;\n          var roundness;\n          var perimSegment;\n          var currentAng = -Math.PI / 2;\n          currentAng += this.r.v;\n          var dir = this.data.d === 3 ? -1 : 1;\n          this.v._length = 0;\n          for (i = 0; i < numPts; i += 1) {\n            rad = longFlag ? longRad : shortRad;\n            roundness = longFlag ? longRound : shortRound;\n            perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            longFlag = !longFlag;\n            currentAng += angle * dir;\n          }\n        },\n        convertPolygonToPath: function () {\n          var numPts = Math.floor(this.pt.v);\n          var angle = Math.PI * 2 / numPts;\n          var rad = this.or.v;\n          var roundness = this.os.v;\n          var perimSegment = 2 * Math.PI * rad / (numPts * 4);\n          var i;\n          var currentAng = -Math.PI * 0.5;\n          var dir = this.data.d === 3 ? -1 : 1;\n          currentAng += this.r.v;\n          this.v._length = 0;\n          for (i = 0; i < numPts; i += 1) {\n            var x = rad * Math.cos(currentAng);\n            var y = rad * Math.sin(currentAng);\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\n            x += +this.p.v[0];\n            y += +this.p.v[1];\n            this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\n            currentAng += angle * dir;\n          }\n          this.paths.length = 0;\n          this.paths[0] = this.v;\n        }\n      };\n      extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory);\n      return StarShapePropertyFactory;\n    }();\n    var RectShapeProperty = function () {\n      function RectShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement();\n        this.v.c = true;\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection();\n        this.localShapeCollection.addShape(this.v);\n        this.paths = this.localShapeCollection;\n        this.elem = elem;\n        this.comp = elem.comp;\n        this.frameId = -1;\n        this.d = data.d;\n        this.initDynamicPropertyContainer(elem);\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\n        this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this);\n        if (this.dynamicProperties.length) {\n          this.k = true;\n        } else {\n          this.k = false;\n          this.convertRectToPath();\n        }\n      }\n      RectShapePropertyFactory.prototype = {\n        convertRectToPath: function () {\n          var p0 = this.p.v[0];\n          var p1 = this.p.v[1];\n          var v0 = this.s.v[0] / 2;\n          var v1 = this.s.v[1] / 2;\n          var round = bmMin(v0, v1, this.r.v);\n          var cPoint = round * (1 - roundCorner);\n          this.v._length = 0;\n          if (this.d === 2 || this.d === 1) {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);\n            }\n          } else {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);\n              this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);\n            }\n          }\n        },\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return;\n          }\n          this.frameId = this.elem.globalData.frameId;\n          this.iterateDynamicProperties();\n          if (this._mdf) {\n            this.convertRectToPath();\n          }\n        },\n        reset: resetShape\n      };\n      extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory);\n      return RectShapePropertyFactory;\n    }();\n    function getShapeProp(elem, data, type) {\n      var prop;\n      if (type === 3 || type === 4) {\n        var dataProp = type === 3 ? data.pt : data.ks;\n        var keys = dataProp.k;\n        if (keys.length) {\n          prop = new KeyframedShapeProperty(elem, data, type);\n        } else {\n          prop = new ShapeProperty(elem, data, type);\n        }\n      } else if (type === 5) {\n        prop = new RectShapeProperty(elem, data);\n      } else if (type === 6) {\n        prop = new EllShapeProperty(elem, data);\n      } else if (type === 7) {\n        prop = new StarShapeProperty(elem, data);\n      }\n      if (prop.k) {\n        elem.addDynamicProperty(prop);\n      }\n      return prop;\n    }\n    function getConstructorFunction() {\n      return ShapeProperty;\n    }\n    function getKeyframedConstructorFunction() {\n      return KeyframedShapeProperty;\n    }\n    var ob = {};\n    ob.getShapeProp = getShapeProp;\n    ob.getConstructorFunction = getConstructorFunction;\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\n    return ob;\n  }();\n  /*!\n  Transformation Matrix v2.0\n  (c) Epistemex 2014-2015\n  www.epistemex.com\n  By Ken Fyrstenberg\n  Contributions by leeoniya.\n  License: MIT, header required.\n  */\n  const Matrix = function () {\n    var _cos = Math.cos;\n    var _sin = Math.sin;\n    var _tan = Math.tan;\n    var _rnd = Math.round;\n    function reset() {\n      this.props[0] = 1;\n      this.props[1] = 0;\n      this.props[2] = 0;\n      this.props[3] = 0;\n      this.props[4] = 0;\n      this.props[5] = 1;\n      this.props[6] = 0;\n      this.props[7] = 0;\n      this.props[8] = 0;\n      this.props[9] = 0;\n      this.props[10] = 1;\n      this.props[11] = 0;\n      this.props[12] = 0;\n      this.props[13] = 0;\n      this.props[14] = 0;\n      this.props[15] = 1;\n      return this;\n    }\n    function rotate(angle) {\n      if (angle === 0) {\n        return this;\n      }\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    function rotateX(angle) {\n      if (angle === 0) {\n        return this;\n      }\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);\n    }\n    function rotateY(angle) {\n      if (angle === 0) {\n        return this;\n      }\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);\n    }\n    function rotateZ(angle) {\n      if (angle === 0) {\n        return this;\n      }\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    function shear(sx, sy) {\n      return this._t(1, sy, sx, 1, 0, 0);\n    }\n    function skew(ax, ay) {\n      return this.shear(_tan(ax), _tan(ay));\n    }\n    function skewFromAxis(ax, angle) {\n      var mCos = _cos(angle);\n      var mSin = _sin(angle);\n      return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    }\n    function scale(sx, sy, sz) {\n      if (!sz && sz !== 0) {\n        sz = 1;\n      }\n      if (sx === 1 && sy === 1 && sz === 1) {\n        return this;\n      }\n      return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\n    }\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\n      this.props[0] = a;\n      this.props[1] = b;\n      this.props[2] = c;\n      this.props[3] = d;\n      this.props[4] = e;\n      this.props[5] = f;\n      this.props[6] = g;\n      this.props[7] = h;\n      this.props[8] = i;\n      this.props[9] = j;\n      this.props[10] = k;\n      this.props[11] = l;\n      this.props[12] = m;\n      this.props[13] = n;\n      this.props[14] = o;\n      this.props[15] = p;\n      return this;\n    }\n    function translate(tx, ty, tz) {\n      tz = tz || 0;\n      if (tx !== 0 || ty !== 0 || tz !== 0) {\n        return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);\n      }\n      return this;\n    }\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\n      var _p = this.props;\n      if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {\n        _p[12] = _p[12] * a2 + _p[15] * m2;\n        _p[13] = _p[13] * f2 + _p[15] * n2;\n        _p[14] = _p[14] * k2 + _p[15] * o2;\n        _p[15] *= p2;\n        this._identityCalculated = false;\n        return this;\n      }\n      var a1 = _p[0];\n      var b1 = _p[1];\n      var c1 = _p[2];\n      var d1 = _p[3];\n      var e1 = _p[4];\n      var f1 = _p[5];\n      var g1 = _p[6];\n      var h1 = _p[7];\n      var i1 = _p[8];\n      var j1 = _p[9];\n      var k1 = _p[10];\n      var l1 = _p[11];\n      var m1 = _p[12];\n      var n1 = _p[13];\n      var o1 = _p[14];\n      var p1 = _p[15];\n      _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\n      _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;\n      _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;\n      _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;\n      _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;\n      _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;\n      _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;\n      _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;\n      _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;\n      _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;\n      _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;\n      _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;\n      _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;\n      _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;\n      _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;\n      _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;\n      this._identityCalculated = false;\n      return this;\n    }\n    function isIdentity() {\n      if (!this._identityCalculated) {\n        this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\n        this._identityCalculated = true;\n      }\n      return this._identity;\n    }\n    function equals(matr) {\n      var i = 0;\n      while (i < 16) {\n        if (matr.props[i] !== this.props[i]) {\n          return false;\n        }\n        i += 1;\n      }\n      return true;\n    }\n    function clone(matr) {\n      var i;\n      for (i = 0; i < 16; i += 1) {\n        matr.props[i] = this.props[i];\n      }\n      return matr;\n    }\n    function cloneFromProps(props) {\n      var i;\n      for (i = 0; i < 16; i += 1) {\n        this.props[i] = props[i];\n      }\n    }\n    function applyToPoint(x, y, z) {\n      return {\n        x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n        y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n        z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\n      };\n    }\n    function applyToX(x, y, z) {\n      return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\n    }\n    function applyToY(x, y, z) {\n      return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\n    }\n    function applyToZ(x, y, z) {\n      return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\n    }\n    function getInverseMatrix() {\n      var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\n      var a = this.props[5] / determinant;\n      var b = -this.props[1] / determinant;\n      var c = -this.props[4] / determinant;\n      var d = this.props[0] / determinant;\n      var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;\n      var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;\n      var inverseMatrix = new Matrix();\n      inverseMatrix.props[0] = a;\n      inverseMatrix.props[1] = b;\n      inverseMatrix.props[4] = c;\n      inverseMatrix.props[5] = d;\n      inverseMatrix.props[12] = e;\n      inverseMatrix.props[13] = f;\n      return inverseMatrix;\n    }\n    function inversePoint(pt) {\n      var inverseMatrix = this.getInverseMatrix();\n      return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0);\n    }\n    function inversePoints(pts) {\n      var i;\n      var len = pts.length;\n      var retPts = [];\n      for (i = 0; i < len; i += 1) {\n        retPts[i] = inversePoint(pts[i]);\n      }\n      return retPts;\n    }\n    function applyToTriplePoints(pt1, pt2, pt3) {\n      var arr = createTypedArray(\"float32\", 6);\n      if (this.isIdentity()) {\n        arr[0] = pt1[0];\n        arr[1] = pt1[1];\n        arr[2] = pt2[0];\n        arr[3] = pt2[1];\n        arr[4] = pt3[0];\n        arr[5] = pt3[1];\n      } else {\n        var p0 = this.props[0];\n        var p1 = this.props[1];\n        var p4 = this.props[4];\n        var p5 = this.props[5];\n        var p12 = this.props[12];\n        var p13 = this.props[13];\n        arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\n        arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\n        arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\n        arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\n        arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\n        arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\n      }\n      return arr;\n    }\n    function applyToPointArray(x, y, z) {\n      var arr;\n      if (this.isIdentity()) {\n        arr = [x, y, z];\n      } else {\n        arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12], x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13], x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\n      }\n      return arr;\n    }\n    function applyToPointStringified(x, y) {\n      if (this.isIdentity()) {\n        return x + \",\" + y;\n      }\n      var _p = this.props;\n      return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 + \",\" + Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\n    }\n    function toCSS() {\n      var i = 0;\n      var props = this.props;\n      var cssValue = \"matrix3d(\";\n      var v = 1e4;\n      while (i < 16) {\n        cssValue += _rnd(props[i] * v) / v;\n        cssValue += i === 15 ? \")\" : \",\";\n        i += 1;\n      }\n      return cssValue;\n    }\n    function roundMatrixProperty(val) {\n      var v = 1e4;\n      if (val < 1e-6 && val > 0 || val > -1e-6 && val < 0) {\n        return _rnd(val * v) / v;\n      }\n      return val;\n    }\n    function to2dCSS() {\n      var props = this.props;\n      var _a = roundMatrixProperty(props[0]);\n      var _b = roundMatrixProperty(props[1]);\n      var _c = roundMatrixProperty(props[4]);\n      var _d = roundMatrixProperty(props[5]);\n      var _e = roundMatrixProperty(props[12]);\n      var _f = roundMatrixProperty(props[13]);\n      return \"matrix(\" + _a + \",\" + _b + \",\" + _c + \",\" + _d + \",\" + _e + \",\" + _f + \")\";\n    }\n    return function () {\n      this.reset = reset;\n      this.rotate = rotate;\n      this.rotateX = rotateX;\n      this.rotateY = rotateY;\n      this.rotateZ = rotateZ;\n      this.skew = skew;\n      this.skewFromAxis = skewFromAxis;\n      this.shear = shear;\n      this.scale = scale;\n      this.setTransform = setTransform;\n      this.translate = translate;\n      this.transform = transform;\n      this.applyToPoint = applyToPoint;\n      this.applyToX = applyToX;\n      this.applyToY = applyToY;\n      this.applyToZ = applyToZ;\n      this.applyToPointArray = applyToPointArray;\n      this.applyToTriplePoints = applyToTriplePoints;\n      this.applyToPointStringified = applyToPointStringified;\n      this.toCSS = toCSS;\n      this.to2dCSS = to2dCSS;\n      this.clone = clone;\n      this.cloneFromProps = cloneFromProps;\n      this.equals = equals;\n      this.inversePoints = inversePoints;\n      this.inversePoint = inversePoint;\n      this.getInverseMatrix = getInverseMatrix;\n      this._t = this.transform;\n      this.isIdentity = isIdentity;\n      this._identity = true;\n      this._identityCalculated = false;\n      this.props = createTypedArray(\"float32\", 16);\n      this.reset();\n    };\n  }();\n  const lottie2 = {};\n  function setLocation(href) {\n    setLocationHref(href);\n  }\n  function searchAnimations() {\n    {\n      animationManager.searchAnimations();\n    }\n  }\n  function setSubframeRendering(flag) {\n    setSubframeEnabled(flag);\n  }\n  function setPrefix(prefix) {\n    setIdPrefix(prefix);\n  }\n  function loadAnimation(params) {\n    return animationManager.loadAnimation(params);\n  }\n  function setQuality(value) {\n    if (typeof value === \"string\") {\n      switch (value) {\n        case \"high\":\n          setDefaultCurveSegments(200);\n          break;\n        default:\n        case \"medium\":\n          setDefaultCurveSegments(50);\n          break;\n        case \"low\":\n          setDefaultCurveSegments(10);\n          break;\n      }\n    } else if (!isNaN(value) && value > 1) {\n      setDefaultCurveSegments(value);\n    }\n  }\n  function inBrowser() {\n    return typeof navigator !== \"undefined\";\n  }\n  function installPlugin(type, plugin) {\n    if (type === \"expressions\") {\n      setExpressionsPlugin(plugin);\n    }\n  }\n  function getFactory(name) {\n    switch (name) {\n      case \"propertyFactory\":\n        return PropertyFactory;\n      case \"shapePropertyFactory\":\n        return ShapePropertyFactory;\n      case \"matrix\":\n        return Matrix;\n      default:\n        return null;\n    }\n  }\n  lottie2.play = animationManager.play;\n  lottie2.pause = animationManager.pause;\n  lottie2.setLocationHref = setLocation;\n  lottie2.togglePause = animationManager.togglePause;\n  lottie2.setSpeed = animationManager.setSpeed;\n  lottie2.setDirection = animationManager.setDirection;\n  lottie2.stop = animationManager.stop;\n  lottie2.searchAnimations = searchAnimations;\n  lottie2.registerAnimation = animationManager.registerAnimation;\n  lottie2.loadAnimation = loadAnimation;\n  lottie2.setSubframeRendering = setSubframeRendering;\n  lottie2.resize = animationManager.resize;\n  lottie2.goToAndStop = animationManager.goToAndStop;\n  lottie2.destroy = animationManager.destroy;\n  lottie2.setQuality = setQuality;\n  lottie2.inBrowser = inBrowser;\n  lottie2.installPlugin = installPlugin;\n  lottie2.freeze = animationManager.freeze;\n  lottie2.unfreeze = animationManager.unfreeze;\n  lottie2.setVolume = animationManager.setVolume;\n  lottie2.mute = animationManager.mute;\n  lottie2.unmute = animationManager.unmute;\n  lottie2.getRegisteredAnimations = animationManager.getRegisteredAnimations;\n  lottie2.useWebWorker = setWebWorker;\n  lottie2.setIDPrefix = setPrefix;\n  lottie2.__getFactory = getFactory;\n  lottie2.version = \"[[BM_VERSION]]\";\n  function checkReady() {\n    if (document.readyState === \"complete\") {\n      clearInterval(readyStateCheckInterval);\n      searchAnimations();\n    }\n  }\n  function getQueryVariable(variable) {\n    var vars = queryString.split(\"&\");\n    for (var i = 0; i < vars.length; i += 1) {\n      var pair = vars[i].split(\"=\");\n      if (decodeURIComponent(pair[0]) == variable) {\n        return decodeURIComponent(pair[1]);\n      }\n    }\n    return null;\n  }\n  var queryString = \"\";\n  {\n    var scripts = document.getElementsByTagName(\"script\");\n    var index = scripts.length - 1;\n    var myScript = scripts[index] || {\n      src: \"\"\n    };\n    queryString = myScript.src ? myScript.src.replace(/^[^\\?]+\\??/, \"\") : \"\";\n    getQueryVariable(\"renderer\");\n  }\n  var readyStateCheckInterval = setInterval(checkReady, 100);\n  try {\n    if (!(typeof exports === \"object\" && typeof module !== \"undefined\") && !(typeof define === \"function\" && define.amd)) {\n      window.bodymovin = lottie2;\n    }\n  } catch (err) {}\n  const ShapeModifiers = function () {\n    var ob = {};\n    var modifiers = {};\n    ob.registerModifier = registerModifier;\n    ob.getModifier = getModifier;\n    function registerModifier(nm, factory) {\n      if (!modifiers[nm]) {\n        modifiers[nm] = factory;\n      }\n    }\n    function getModifier(nm, elem, data) {\n      return new modifiers[nm](elem, data);\n    }\n    return ob;\n  }();\n  function ShapeModifier() {}\n  ShapeModifier.prototype.initModifierProperties = function () {};\n  ShapeModifier.prototype.addShapeToModifier = function () {};\n  ShapeModifier.prototype.addShape = function (data) {\n    if (!this.closed) {\n      data.sh.container.addDynamicProperty(data.sh);\n      var shapeData = {\n        shape: data.sh,\n        data,\n        localShapeCollection: shapeCollectionPool.newShapeCollection()\n      };\n      this.shapes.push(shapeData);\n      this.addShapeToModifier(shapeData);\n      if (this._isAnimated) {\n        data.setAsAnimated();\n      }\n    }\n  };\n  ShapeModifier.prototype.init = function (elem, data) {\n    this.shapes = [];\n    this.elem = elem;\n    this.initDynamicPropertyContainer(elem);\n    this.initModifierProperties(elem, data);\n    this.frameId = initialDefaultFrame;\n    this.closed = false;\n    this.k = false;\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n  ShapeModifier.prototype.processKeys = function () {\n    if (this.elem.globalData.frameId === this.frameId) {\n      return;\n    }\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n  extendPrototype([DynamicPropertyContainer], ShapeModifier);\n  function TrimModifier() {}\n  extendPrototype([ShapeModifier], TrimModifier);\n  TrimModifier.prototype.initModifierProperties = function (elem, data) {\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\n    this.sValue = 0;\n    this.eValue = 0;\n    this.getValue = this.processKeys;\n    this.m = data.m;\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\n  };\n  TrimModifier.prototype.addShapeToModifier = function (shapeData) {\n    shapeData.pathsData = [];\n  };\n  TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\n    var segments = [];\n    if (e <= 1) {\n      segments.push({\n        s,\n        e\n      });\n    } else if (s >= 1) {\n      segments.push({\n        s: s - 1,\n        e: e - 1\n      });\n    } else {\n      segments.push({\n        s,\n        e: 1\n      });\n      segments.push({\n        s: 0,\n        e: e - 1\n      });\n    }\n    var shapeSegments = [];\n    var i;\n    var len = segments.length;\n    var segmentOb;\n    for (i = 0; i < len; i += 1) {\n      segmentOb = segments[i];\n      if (!(segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength)) {\n        var shapeS;\n        var shapeE;\n        if (segmentOb.s * totalModifierLength <= addedLength) {\n          shapeS = 0;\n        } else {\n          shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\n        }\n        if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\n          shapeE = 1;\n        } else {\n          shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength;\n        }\n        shapeSegments.push([shapeS, shapeE]);\n      }\n    }\n    if (!shapeSegments.length) {\n      shapeSegments.push([0, 0]);\n    }\n    return shapeSegments;\n  };\n  TrimModifier.prototype.releasePathsData = function (pathsData) {\n    var i;\n    var len = pathsData.length;\n    for (i = 0; i < len; i += 1) {\n      segmentsLengthPool.release(pathsData[i]);\n    }\n    pathsData.length = 0;\n    return pathsData;\n  };\n  TrimModifier.prototype.processShapes = function (_isFirstFrame) {\n    var s;\n    var e;\n    if (this._mdf || _isFirstFrame) {\n      var o = this.o.v % 360 / 360;\n      if (o < 0) {\n        o += 1;\n      }\n      if (this.s.v > 1) {\n        s = 1 + o;\n      } else if (this.s.v < 0) {\n        s = 0 + o;\n      } else {\n        s = this.s.v + o;\n      }\n      if (this.e.v > 1) {\n        e = 1 + o;\n      } else if (this.e.v < 0) {\n        e = 0 + o;\n      } else {\n        e = this.e.v + o;\n      }\n      if (s > e) {\n        var _s = s;\n        s = e;\n        e = _s;\n      }\n      s = Math.round(s * 1e4) * 1e-4;\n      e = Math.round(e * 1e4) * 1e-4;\n      this.sValue = s;\n      this.eValue = e;\n    } else {\n      s = this.sValue;\n      e = this.eValue;\n    }\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var pathsData;\n    var pathData;\n    var totalShapeLength;\n    var totalModifierLength = 0;\n    if (e === s) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].localShapeCollection.releaseShapes();\n        this.shapes[i].shape._mdf = true;\n        this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\n        if (this._mdf) {\n          this.shapes[i].pathsData.length = 0;\n        }\n      }\n    } else if (!(e === 1 && s === 0 || e === 0 && s === 1)) {\n      var segments = [];\n      var shapeData;\n      var localShapeCollection;\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\n          shapeData.shape.paths = shapeData.localShapeCollection;\n        } else {\n          shapePaths = shapeData.shape.paths;\n          jLen = shapePaths._length;\n          totalShapeLength = 0;\n          if (!shapeData.shape._mdf && shapeData.pathsData.length) {\n            totalShapeLength = shapeData.totalShapeLength;\n          } else {\n            pathsData = this.releasePathsData(shapeData.pathsData);\n            for (j = 0; j < jLen; j += 1) {\n              pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\n              pathsData.push(pathData);\n              totalShapeLength += pathData.totalLength;\n            }\n            shapeData.totalShapeLength = totalShapeLength;\n            shapeData.pathsData = pathsData;\n          }\n          totalModifierLength += totalShapeLength;\n          shapeData.shape._mdf = true;\n        }\n      }\n      var shapeS = s;\n      var shapeE = e;\n      var addedLength = 0;\n      var edges;\n      for (i = len - 1; i >= 0; i -= 1) {\n        shapeData = this.shapes[i];\n        if (shapeData.shape._mdf) {\n          localShapeCollection = shapeData.localShapeCollection;\n          localShapeCollection.releaseShapes();\n          if (this.m === 2 && len > 1) {\n            edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\n            addedLength += shapeData.totalShapeLength;\n          } else {\n            edges = [[shapeS, shapeE]];\n          }\n          jLen = edges.length;\n          for (j = 0; j < jLen; j += 1) {\n            shapeS = edges[j][0];\n            shapeE = edges[j][1];\n            segments.length = 0;\n            if (shapeE <= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength * shapeE\n              });\n            } else if (shapeS >= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * (shapeS - 1),\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            } else {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength\n              });\n              segments.push({\n                s: 0,\n                e: shapeData.totalShapeLength * (shapeE - 1)\n              });\n            }\n            var newShapesData = this.addShapes(shapeData, segments[0]);\n            if (segments[0].s !== segments[0].e) {\n              if (segments.length > 1) {\n                var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\n                if (lastShapeInCollection.c) {\n                  var lastShape = newShapesData.pop();\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1], lastShape);\n                } else {\n                  this.addPaths(newShapesData, localShapeCollection);\n                  newShapesData = this.addShapes(shapeData, segments[1]);\n                }\n              }\n              this.addPaths(newShapesData, localShapeCollection);\n            }\n          }\n          shapeData.shape.paths = localShapeCollection;\n        }\n      }\n    } else if (this._mdf) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].pathsData.length = 0;\n        this.shapes[i].shape._mdf = true;\n      }\n    }\n  };\n  TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\n    var i;\n    var len = newPaths.length;\n    for (i = 0; i < len; i += 1) {\n      localShapeCollection.addShape(newPaths[i]);\n    }\n  };\n  TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\n    shapePath.setXYAt(pt2[0], pt2[1], \"o\", pos);\n    shapePath.setXYAt(pt3[0], pt3[1], \"i\", pos + 1);\n    if (newShape) {\n      shapePath.setXYAt(pt1[0], pt1[1], \"v\", pos);\n    }\n    shapePath.setXYAt(pt4[0], pt4[1], \"v\", pos + 1);\n  };\n  TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {\n    shapePath.setXYAt(points[1], points[5], \"o\", pos);\n    shapePath.setXYAt(points[2], points[6], \"i\", pos + 1);\n    if (newShape) {\n      shapePath.setXYAt(points[0], points[4], \"v\", pos);\n    }\n    shapePath.setXYAt(points[3], points[7], \"v\", pos + 1);\n  };\n  TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\n    var pathsData = shapeData.pathsData;\n    var shapePaths = shapeData.shape.paths.shapes;\n    var i;\n    var len = shapeData.shape.paths._length;\n    var j;\n    var jLen;\n    var addedLength = 0;\n    var currentLengthData;\n    var segmentCount;\n    var lengths;\n    var segment;\n    var shapes = [];\n    var initPos;\n    var newShape = true;\n    if (!shapePath) {\n      shapePath = shapePool.newElement();\n      segmentCount = 0;\n      initPos = 0;\n    } else {\n      segmentCount = shapePath._length;\n      initPos = shapePath._length;\n    }\n    shapes.push(shapePath);\n    for (i = 0; i < len; i += 1) {\n      lengths = pathsData[i].lengths;\n      shapePath.c = shapePaths[i].c;\n      jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\n      for (j = 1; j < jLen; j += 1) {\n        currentLengthData = lengths[j - 1];\n        if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\n          addedLength += currentLengthData.addedLength;\n          shapePath.c = false;\n        } else if (addedLength > shapeSegment.e) {\n          shapePath.c = false;\n          break;\n        } else {\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\n            newShape = false;\n            shapePath.c = false;\n          }\n          addedLength += currentLengthData.addedLength;\n          segmentCount += 1;\n        }\n      }\n      if (shapePaths[i].c && lengths.length) {\n        currentLengthData = lengths[j - 1];\n        if (addedLength <= shapeSegment.e) {\n          var segmentLength = lengths[j - 1].addedLength;\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\n            this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\n            newShape = false;\n          } else {\n            segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\n            newShape = false;\n            shapePath.c = false;\n          }\n        } else {\n          shapePath.c = false;\n        }\n        addedLength += currentLengthData.addedLength;\n        segmentCount += 1;\n      }\n      if (shapePath._length) {\n        shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], \"i\", initPos);\n        shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], \"o\", shapePath._length - 1);\n      }\n      if (addedLength > shapeSegment.e) {\n        break;\n      }\n      if (i < len - 1) {\n        shapePath = shapePool.newElement();\n        newShape = true;\n        shapes.push(shapePath);\n        segmentCount = 0;\n      }\n    }\n    return shapes;\n  };\n  function PuckerAndBloatModifier() {}\n  extendPrototype([ShapeModifier], PuckerAndBloatModifier);\n  PuckerAndBloatModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.amount = PropertyFactory.getProp(elem, data.a, 0, null, this);\n    this._isAnimated = !!this.amount.effectsSequence.length;\n  };\n  PuckerAndBloatModifier.prototype.processPath = function (path, amount) {\n    var percent = amount / 100;\n    var centerPoint = [0, 0];\n    var pathLength = path._length;\n    var i = 0;\n    for (i = 0; i < pathLength; i += 1) {\n      centerPoint[0] += path.v[i][0];\n      centerPoint[1] += path.v[i][1];\n    }\n    centerPoint[0] /= pathLength;\n    centerPoint[1] /= pathLength;\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n    var vX;\n    var vY;\n    var oX;\n    var oY;\n    var iX;\n    var iY;\n    for (i = 0; i < pathLength; i += 1) {\n      vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent;\n      vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent;\n      oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent;\n      oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent;\n      iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent;\n      iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent;\n      clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i);\n    }\n    return clonedPath;\n  };\n  PuckerAndBloatModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var amount = this.amount.v;\n    if (amount !== 0) {\n      var shapeData;\n      var localShapeCollection;\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], amount));\n          }\n        }\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n  const TransformPropertyFactory = function () {\n    var defaultVector = [0, 0];\n    function applyToMatrix(mat) {\n      var _mdf = this._mdf;\n      this.iterateDynamicProperties();\n      this._mdf = this._mdf || _mdf;\n      if (this.a) {\n        mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n      }\n      if (this.s) {\n        mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n      }\n      if (this.sk) {\n        mat.skewFromAxis(-this.sk.v, this.sa.v);\n      }\n      if (this.r) {\n        mat.rotate(-this.r.v);\n      } else {\n        mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n      }\n      if (this.data.p.s) {\n        if (this.data.p.z) {\n          mat.translate(this.px.v, this.py.v, -this.pz.v);\n        } else {\n          mat.translate(this.px.v, this.py.v, 0);\n        }\n      } else {\n        mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n      }\n    }\n    function processKeys(forceRender) {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return;\n      }\n      if (this._isDirty) {\n        this.precalculateMatrix();\n        this._isDirty = false;\n      }\n      this.iterateDynamicProperties();\n      if (this._mdf || forceRender) {\n        var frameRate;\n        this.v.cloneFromProps(this.pre.props);\n        if (this.appliedTransformations < 1) {\n          this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        }\n        if (this.appliedTransformations < 2) {\n          this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        }\n        if (this.sk && this.appliedTransformations < 3) {\n          this.v.skewFromAxis(-this.sk.v, this.sa.v);\n        }\n        if (this.r && this.appliedTransformations < 4) {\n          this.v.rotate(-this.r.v);\n        } else if (!this.r && this.appliedTransformations < 4) {\n          this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        }\n        if (this.autoOriented) {\n          var v1;\n          var v2;\n          frameRate = this.elem.globalData.frameRate;\n          if (this.p && this.p.keyframes && this.p.getValueAtTime) {\n            if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\n              v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);\n              v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\n            } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\n              v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0);\n              v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);\n            } else {\n              v1 = this.p.pv;\n              v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\n            }\n          } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\n            v1 = [];\n            v2 = [];\n            var px = this.px;\n            var py = this.py;\n            if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {\n              v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);\n              v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);\n              v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0);\n              v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0);\n            } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\n              v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0);\n              v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0);\n              v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);\n              v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);\n            } else {\n              v1 = [px.pv, py.pv];\n              v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);\n              v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);\n            }\n          } else {\n            v2 = defaultVector;\n            v1 = v2;\n          }\n          this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\n        }\n        if (this.data.p && this.data.p.s) {\n          if (this.data.p.z) {\n            this.v.translate(this.px.v, this.py.v, -this.pz.v);\n          } else {\n            this.v.translate(this.px.v, this.py.v, 0);\n          }\n        } else {\n          this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\n        }\n      }\n      this.frameId = this.elem.globalData.frameId;\n    }\n    function precalculateMatrix() {\n      if (!this.a.k) {\n        this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\n        this.appliedTransformations = 1;\n      } else {\n        return;\n      }\n      if (!this.s.effectsSequence.length) {\n        this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\n        this.appliedTransformations = 2;\n      } else {\n        return;\n      }\n      if (this.sk) {\n        if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\n          this.pre.skewFromAxis(-this.sk.v, this.sa.v);\n          this.appliedTransformations = 3;\n        } else {\n          return;\n        }\n      }\n      if (this.r) {\n        if (!this.r.effectsSequence.length) {\n          this.pre.rotate(-this.r.v);\n          this.appliedTransformations = 4;\n        }\n      } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\n        this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\n        this.appliedTransformations = 4;\n      }\n    }\n    function autoOrient() {}\n    function addDynamicProperty(prop) {\n      this._addDynamicProperty(prop);\n      this.elem.addDynamicProperty(prop);\n      this._isDirty = true;\n    }\n    function TransformProperty(elem, data, container) {\n      this.elem = elem;\n      this.frameId = -1;\n      this.propType = \"transform\";\n      this.data = data;\n      this.v = new Matrix();\n      this.pre = new Matrix();\n      this.appliedTransformations = 0;\n      this.initDynamicPropertyContainer(container || elem);\n      if (data.p && data.p.s) {\n        this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this);\n        this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this);\n        if (data.p.z) {\n          this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this);\n        }\n      } else {\n        this.p = PropertyFactory.getProp(elem, data.p || {\n          k: [0, 0, 0]\n        }, 1, 0, this);\n      }\n      if (data.rx) {\n        this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\n        this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\n        this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\n        if (data.or.k[0].ti) {\n          var i;\n          var len = data.or.k.length;\n          for (i = 0; i < len; i += 1) {\n            data.or.k[i].to = null;\n            data.or.k[i].ti = null;\n          }\n        }\n        this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\n        this.or.sh = true;\n      } else {\n        this.r = PropertyFactory.getProp(elem, data.r || {\n          k: 0\n        }, 0, degToRads, this);\n      }\n      if (data.sk) {\n        this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\n        this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\n      }\n      this.a = PropertyFactory.getProp(elem, data.a || {\n        k: [0, 0, 0]\n      }, 1, 0, this);\n      this.s = PropertyFactory.getProp(elem, data.s || {\n        k: [100, 100, 100]\n      }, 1, 0.01, this);\n      if (data.o) {\n        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem);\n      } else {\n        this.o = {\n          _mdf: false,\n          v: 1\n        };\n      }\n      this._isDirty = true;\n      if (!this.dynamicProperties.length) {\n        this.getValue(true);\n      }\n    }\n    TransformProperty.prototype = {\n      applyToMatrix,\n      getValue: processKeys,\n      precalculateMatrix,\n      autoOrient\n    };\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\n    function getTransformProperty(elem, data, container) {\n      return new TransformProperty(elem, data, container);\n    }\n    return {\n      getTransformProperty\n    };\n  }();\n  function RepeaterModifier() {}\n  extendPrototype([ShapeModifier], RepeaterModifier);\n  RepeaterModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.c = PropertyFactory.getProp(elem, data.c, 0, null, this);\n    this.o = PropertyFactory.getProp(elem, data.o, 0, null, this);\n    this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this);\n    this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this);\n    this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this);\n    this.data = data;\n    if (!this.dynamicProperties.length) {\n      this.getValue(true);\n    }\n    this._isAnimated = !!this.dynamicProperties.length;\n    this.pMatrix = new Matrix();\n    this.rMatrix = new Matrix();\n    this.sMatrix = new Matrix();\n    this.tMatrix = new Matrix();\n    this.matrix = new Matrix();\n  };\n  RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {\n    var dir = inv ? -1 : 1;\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    rMatrix.rotate(-transform.r.v * dir * perc);\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\n    sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\n  };\n  RepeaterModifier.prototype.init = function (elem, arr, pos, elemsData) {\n    this.elem = elem;\n    this.arr = arr;\n    this.pos = pos;\n    this.elemsData = elemsData;\n    this._currentCopies = 0;\n    this._elements = [];\n    this._groups = [];\n    this.frameId = -1;\n    this.initDynamicPropertyContainer(elem);\n    this.initModifierProperties(elem, arr[pos]);\n    while (pos > 0) {\n      pos -= 1;\n      this._elements.unshift(arr[pos]);\n    }\n    if (this.dynamicProperties.length) {\n      this.k = true;\n    } else {\n      this.getValue(true);\n    }\n  };\n  RepeaterModifier.prototype.resetElements = function (elements) {\n    var i;\n    var len = elements.length;\n    for (i = 0; i < len; i += 1) {\n      elements[i]._processed = false;\n      if (elements[i].ty === \"gr\") {\n        this.resetElements(elements[i].it);\n      }\n    }\n  };\n  RepeaterModifier.prototype.cloneElements = function (elements) {\n    var newElements = JSON.parse(JSON.stringify(elements));\n    this.resetElements(newElements);\n    return newElements;\n  };\n  RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\n    var i;\n    var len = elements.length;\n    for (i = 0; i < len; i += 1) {\n      elements[i]._render = renderFlag;\n      if (elements[i].ty === \"gr\") {\n        this.changeGroupRender(elements[i].it, renderFlag);\n      }\n    }\n  };\n  RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {\n    var items;\n    var itemsTransform;\n    var i;\n    var dir;\n    var cont;\n    var hasReloaded = false;\n    if (this._mdf || _isFirstFrame) {\n      var copies = Math.ceil(this.c.v);\n      if (this._groups.length < copies) {\n        while (this._groups.length < copies) {\n          var group = {\n            it: this.cloneElements(this._elements),\n            ty: \"gr\"\n          };\n          group.it.push({\n            a: {\n              a: 0,\n              ix: 1,\n              k: [0, 0]\n            },\n            nm: \"Transform\",\n            o: {\n              a: 0,\n              ix: 7,\n              k: 100\n            },\n            p: {\n              a: 0,\n              ix: 2,\n              k: [0, 0]\n            },\n            r: {\n              a: 1,\n              ix: 6,\n              k: [{\n                s: 0,\n                e: 0,\n                t: 0\n              }, {\n                s: 0,\n                e: 0,\n                t: 1\n              }]\n            },\n            s: {\n              a: 0,\n              ix: 3,\n              k: [100, 100]\n            },\n            sa: {\n              a: 0,\n              ix: 5,\n              k: 0\n            },\n            sk: {\n              a: 0,\n              ix: 4,\n              k: 0\n            },\n            ty: \"tr\"\n          });\n          this.arr.splice(0, 0, group);\n          this._groups.splice(0, 0, group);\n          this._currentCopies += 1;\n        }\n        this.elem.reloadShapes();\n        hasReloaded = true;\n      }\n      cont = 0;\n      var renderFlag;\n      for (i = 0; i <= this._groups.length - 1; i += 1) {\n        renderFlag = cont < copies;\n        this._groups[i]._render = renderFlag;\n        this.changeGroupRender(this._groups[i].it, renderFlag);\n        if (!renderFlag) {\n          var elems = this.elemsData[i].it;\n          var transformData = elems[elems.length - 1];\n          if (transformData.transform.op.v !== 0) {\n            transformData.transform.op._mdf = true;\n            transformData.transform.op.v = 0;\n          } else {\n            transformData.transform.op._mdf = false;\n          }\n        }\n        cont += 1;\n      }\n      this._currentCopies = copies;\n      var offset = this.o.v;\n      var offsetModulo = offset % 1;\n      var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n      var pProps = this.pMatrix.props;\n      var rProps = this.rMatrix.props;\n      var sProps = this.sMatrix.props;\n      this.pMatrix.reset();\n      this.rMatrix.reset();\n      this.sMatrix.reset();\n      this.tMatrix.reset();\n      this.matrix.reset();\n      var iteration = 0;\n      if (offset > 0) {\n        while (iteration < roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          iteration += 1;\n        }\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\n          iteration += offsetModulo;\n        }\n      } else if (offset < 0) {\n        while (iteration > roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\n          iteration -= 1;\n        }\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);\n          iteration -= offsetModulo;\n        }\n      }\n      i = this.data.m === 1 ? 0 : this._currentCopies - 1;\n      dir = this.data.m === 1 ? 1 : -1;\n      cont = this._currentCopies;\n      var j;\n      var jLen;\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        jLen = itemsTransform.length;\n        items[items.length - 1].transform.mProps._mdf = true;\n        items[items.length - 1].transform.op._mdf = true;\n        items[items.length - 1].transform.op.v = this._currentCopies === 1 ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\n        if (iteration !== 0) {\n          if (i !== 0 && dir === 1 || i !== this._currentCopies - 1 && dir === -1) {\n            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\n          }\n          this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);\n          this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);\n          this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n          this.matrix.reset();\n        } else {\n          this.matrix.reset();\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j];\n          }\n        }\n        iteration += 1;\n        cont -= 1;\n        i += dir;\n      }\n    } else {\n      cont = this._currentCopies;\n      i = 0;\n      dir = 1;\n      while (cont) {\n        items = this.elemsData[i].it;\n        itemsTransform = items[items.length - 1].transform.mProps.v.props;\n        items[items.length - 1].transform.mProps._mdf = false;\n        items[items.length - 1].transform.op._mdf = false;\n        cont -= 1;\n        i += dir;\n      }\n    }\n    return hasReloaded;\n  };\n  RepeaterModifier.prototype.addShape = function () {};\n  function RoundCornersModifier() {}\n  extendPrototype([ShapeModifier], RoundCornersModifier);\n  RoundCornersModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys;\n    this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this);\n    this._isAnimated = !!this.rd.effectsSequence.length;\n  };\n  RoundCornersModifier.prototype.processPath = function (path, round) {\n    var clonedPath = shapePool.newElement();\n    clonedPath.c = path.c;\n    var i;\n    var len = path._length;\n    var currentV;\n    var currentI;\n    var currentO;\n    var closerV;\n    var distance;\n    var newPosPerc;\n    var index2 = 0;\n    var vX;\n    var vY;\n    var oX;\n    var oY;\n    var iX;\n    var iY;\n    for (i = 0; i < len; i += 1) {\n      currentV = path.v[i];\n      currentO = path.o[i];\n      currentI = path.i[i];\n      if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {\n        if ((i === 0 || i === len - 1) && !path.c) {\n          clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index2);\n          index2 += 1;\n        } else {\n          if (i === 0) {\n            closerV = path.v[len - 1];\n          } else {\n            closerV = path.v[i - 1];\n          }\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vX = iX;\n          iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;\n          vY = iY;\n          oX = vX - (vX - currentV[0]) * roundCorner;\n          oY = vY - (vY - currentV[1]) * roundCorner;\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index2);\n          index2 += 1;\n          if (i === len - 1) {\n            closerV = path.v[0];\n          } else {\n            closerV = path.v[i + 1];\n          }\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\n          oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\n          vX = oX;\n          oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;\n          vY = oY;\n          iX = vX - (vX - currentV[0]) * roundCorner;\n          iY = vY - (vY - currentV[1]) * roundCorner;\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index2);\n          index2 += 1;\n        }\n      } else {\n        clonedPath.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index2);\n        index2 += 1;\n      }\n    }\n    return clonedPath;\n  };\n  RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths;\n    var i;\n    var len = this.shapes.length;\n    var j;\n    var jLen;\n    var rd = this.rd.v;\n    if (rd !== 0) {\n      var shapeData;\n      var localShapeCollection;\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i];\n        localShapeCollection = shapeData.localShapeCollection;\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes();\n          shapeData.shape._mdf = true;\n          shapePaths = shapeData.shape.paths.shapes;\n          jLen = shapeData.shape.paths._length;\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], rd));\n          }\n        }\n        shapeData.shape.paths = shapeData.localShapeCollection;\n      }\n    }\n    if (!this.dynamicProperties.length) {\n      this._mdf = false;\n    }\n  };\n  function getFontProperties(fontData) {\n    var styles = fontData.fStyle ? fontData.fStyle.split(\" \") : [];\n    var fWeight = \"normal\";\n    var fStyle = \"normal\";\n    var len = styles.length;\n    var styleName;\n    for (var i = 0; i < len; i += 1) {\n      styleName = styles[i].toLowerCase();\n      switch (styleName) {\n        case \"italic\":\n          fStyle = \"italic\";\n          break;\n        case \"bold\":\n          fWeight = \"700\";\n          break;\n        case \"black\":\n          fWeight = \"900\";\n          break;\n        case \"medium\":\n          fWeight = \"500\";\n          break;\n        case \"regular\":\n        case \"normal\":\n          fWeight = \"400\";\n          break;\n        case \"light\":\n        case \"thin\":\n          fWeight = \"200\";\n          break;\n      }\n    }\n    return {\n      style: fStyle,\n      weight: fontData.fWeight || fWeight\n    };\n  }\n  const FontManager = function () {\n    var maxWaitingTime = 5e3;\n    var emptyChar = {\n      w: 0,\n      size: 0,\n      shapes: [],\n      data: {\n        shapes: []\n      }\n    };\n    var combinedCharacters = [];\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\n    var surrogateModifiers = [\"d83cdffb\", \"d83cdffc\", \"d83cdffd\", \"d83cdffe\", \"d83cdfff\"];\n    var zeroWidthJoiner = [65039, 8205];\n    function trimFontOptions(font) {\n      var familyArray = font.split(\",\");\n      var i;\n      var len = familyArray.length;\n      var enabledFamilies = [];\n      for (i = 0; i < len; i += 1) {\n        if (familyArray[i] !== \"sans-serif\" && familyArray[i] !== \"monospace\") {\n          enabledFamilies.push(familyArray[i]);\n        }\n      }\n      return enabledFamilies.join(\",\");\n    }\n    function setUpNode(font, family) {\n      var parentNode = createTag(\"span\");\n      parentNode.setAttribute(\"aria-hidden\", true);\n      parentNode.style.fontFamily = family;\n      var node = createTag(\"span\");\n      node.innerText = \"giItT1WQy@!-/#\";\n      parentNode.style.position = \"absolute\";\n      parentNode.style.left = \"-10000px\";\n      parentNode.style.top = \"-10000px\";\n      parentNode.style.fontSize = \"300px\";\n      parentNode.style.fontVariant = \"normal\";\n      parentNode.style.fontStyle = \"normal\";\n      parentNode.style.fontWeight = \"normal\";\n      parentNode.style.letterSpacing = \"0\";\n      parentNode.appendChild(node);\n      document.body.appendChild(parentNode);\n      var width = node.offsetWidth;\n      node.style.fontFamily = trimFontOptions(font) + \", \" + family;\n      return {\n        node,\n        w: width,\n        parent: parentNode\n      };\n    }\n    function checkLoadedFonts() {\n      var i;\n      var len = this.fonts.length;\n      var node;\n      var w;\n      var loadedCount = len;\n      for (i = 0; i < len; i += 1) {\n        if (this.fonts[i].loaded) {\n          loadedCount -= 1;\n        } else if (this.fonts[i].fOrigin === \"n\" || this.fonts[i].origin === 0) {\n          this.fonts[i].loaded = true;\n        } else {\n          node = this.fonts[i].monoCase.node;\n          w = this.fonts[i].monoCase.w;\n          if (node.offsetWidth !== w) {\n            loadedCount -= 1;\n            this.fonts[i].loaded = true;\n          } else {\n            node = this.fonts[i].sansCase.node;\n            w = this.fonts[i].sansCase.w;\n            if (node.offsetWidth !== w) {\n              loadedCount -= 1;\n              this.fonts[i].loaded = true;\n            }\n          }\n          if (this.fonts[i].loaded) {\n            this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\n            this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\n          }\n        }\n      }\n      if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\n        setTimeout(this.checkLoadedFontsBinded, 20);\n      } else {\n        setTimeout(this.setIsLoadedBinded, 10);\n      }\n    }\n    function createHelper(fontData, def) {\n      var engine = document.body && def ? \"svg\" : \"canvas\";\n      var helper;\n      var fontProps = getFontProperties(fontData);\n      if (engine === \"svg\") {\n        var tHelper = createNS(\"text\");\n        tHelper.style.fontSize = \"100px\";\n        tHelper.setAttribute(\"font-family\", fontData.fFamily);\n        tHelper.setAttribute(\"font-style\", fontProps.style);\n        tHelper.setAttribute(\"font-weight\", fontProps.weight);\n        tHelper.textContent = \"1\";\n        if (fontData.fClass) {\n          tHelper.style.fontFamily = \"inherit\";\n          tHelper.setAttribute(\"class\", fontData.fClass);\n        } else {\n          tHelper.style.fontFamily = fontData.fFamily;\n        }\n        def.appendChild(tHelper);\n        helper = tHelper;\n      } else {\n        var tCanvasHelper = new OffscreenCanvas(500, 500).getContext(\"2d\");\n        tCanvasHelper.font = fontProps.style + \" \" + fontProps.weight + \" 100px \" + fontData.fFamily;\n        helper = tCanvasHelper;\n      }\n      function measure(text) {\n        if (engine === \"svg\") {\n          helper.textContent = text;\n          return helper.getComputedTextLength();\n        }\n        return helper.measureText(text).width;\n      }\n      return {\n        measureText: measure\n      };\n    }\n    function addFonts(fontData, defs) {\n      if (!fontData) {\n        this.isLoaded = true;\n        return;\n      }\n      if (this.chars) {\n        this.isLoaded = true;\n        this.fonts = fontData.list;\n        return;\n      }\n      if (!document.body) {\n        this.isLoaded = true;\n        fontData.list.forEach(data => {\n          data.helper = createHelper(data);\n          data.cache = {};\n        });\n        this.fonts = fontData.list;\n        return;\n      }\n      var fontArr = fontData.list;\n      var i;\n      var len = fontArr.length;\n      var _pendingFonts = len;\n      for (i = 0; i < len; i += 1) {\n        var shouldLoadFont = true;\n        var loadedSelector;\n        var j;\n        fontArr[i].loaded = false;\n        fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, \"monospace\");\n        fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, \"sans-serif\");\n        if (!fontArr[i].fPath) {\n          fontArr[i].loaded = true;\n          _pendingFonts -= 1;\n        } else if (fontArr[i].fOrigin === \"p\" || fontArr[i].origin === 3) {\n          loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"' + fontArr[i].fFamily + '\"], style[f-origin=\"3\"][f-family=\"' + fontArr[i].fFamily + '\"]');\n          if (loadedSelector.length > 0) {\n            shouldLoadFont = false;\n          }\n          if (shouldLoadFont) {\n            var s = createTag(\"style\");\n            s.setAttribute(\"f-forigin\", fontArr[i].fOrigin);\n            s.setAttribute(\"f-origin\", fontArr[i].origin);\n            s.setAttribute(\"f-family\", fontArr[i].fFamily);\n            s.type = \"text/css\";\n            s.innerText = \"@font-face {font-family: \" + fontArr[i].fFamily + \"; font-style: normal; src: url('\" + fontArr[i].fPath + \"');}\";\n            defs.appendChild(s);\n          }\n        } else if (fontArr[i].fOrigin === \"g\" || fontArr[i].origin === 1) {\n          loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\n              shouldLoadFont = false;\n            }\n          }\n          if (shouldLoadFont) {\n            var l = createTag(\"link\");\n            l.setAttribute(\"f-forigin\", fontArr[i].fOrigin);\n            l.setAttribute(\"f-origin\", fontArr[i].origin);\n            l.type = \"text/css\";\n            l.rel = \"stylesheet\";\n            l.href = fontArr[i].fPath;\n            document.body.appendChild(l);\n          }\n        } else if (fontArr[i].fOrigin === \"t\" || fontArr[i].origin === 2) {\n          loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (fontArr[i].fPath === loadedSelector[j].src) {\n              shouldLoadFont = false;\n            }\n          }\n          if (shouldLoadFont) {\n            var sc = createTag(\"link\");\n            sc.setAttribute(\"f-forigin\", fontArr[i].fOrigin);\n            sc.setAttribute(\"f-origin\", fontArr[i].origin);\n            sc.setAttribute(\"rel\", \"stylesheet\");\n            sc.setAttribute(\"href\", fontArr[i].fPath);\n            defs.appendChild(sc);\n          }\n        }\n        fontArr[i].helper = createHelper(fontArr[i], defs);\n        fontArr[i].cache = {};\n        this.fonts.push(fontArr[i]);\n      }\n      if (_pendingFonts === 0) {\n        this.isLoaded = true;\n      } else {\n        setTimeout(this.checkLoadedFonts.bind(this), 100);\n      }\n    }\n    function addChars(chars) {\n      if (!chars) {\n        return;\n      }\n      if (!this.chars) {\n        this.chars = [];\n      }\n      var i;\n      var len = chars.length;\n      var j;\n      var jLen = this.chars.length;\n      var found;\n      for (i = 0; i < len; i += 1) {\n        j = 0;\n        found = false;\n        while (j < jLen) {\n          if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {\n            found = true;\n          }\n          j += 1;\n        }\n        if (!found) {\n          this.chars.push(chars[i]);\n          jLen += 1;\n        }\n      }\n    }\n    function getCharData(char, style, font) {\n      var i = 0;\n      var len = this.chars.length;\n      while (i < len) {\n        if (this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font) {\n          return this.chars[i];\n        }\n        i += 1;\n      }\n      if ((typeof char === \"string\" && char.charCodeAt(0) !== 13 || !char) && console && console.warn &&\n      // eslint-disable-line no-console\n      !this._warned) {\n        this._warned = true;\n        console.warn(\"Missing character from exported characters list: \", char, style, font);\n      }\n      return emptyChar;\n    }\n    function measureText(char, fontName, size) {\n      var fontData = this.getFontByName(fontName);\n      var index2 = char.charCodeAt(0);\n      if (!fontData.cache[index2 + 1]) {\n        var tHelper = fontData.helper;\n        if (char === \" \") {\n          var doubleSize = tHelper.measureText(\"|\" + char + \"|\");\n          var singleSize = tHelper.measureText(\"||\");\n          fontData.cache[index2 + 1] = (doubleSize - singleSize) / 100;\n        } else {\n          fontData.cache[index2 + 1] = tHelper.measureText(char) / 100;\n        }\n      }\n      return fontData.cache[index2 + 1] * size;\n    }\n    function getFontByName(name) {\n      var i = 0;\n      var len = this.fonts.length;\n      while (i < len) {\n        if (this.fonts[i].fName === name) {\n          return this.fonts[i];\n        }\n        i += 1;\n      }\n      return this.fonts[0];\n    }\n    function isModifier(firstCharCode, secondCharCode) {\n      var sum = firstCharCode.toString(16) + secondCharCode.toString(16);\n      return surrogateModifiers.indexOf(sum) !== -1;\n    }\n    function isZeroWidthJoiner(firstCharCode, secondCharCode) {\n      if (!secondCharCode) {\n        return firstCharCode === zeroWidthJoiner[1];\n      }\n      return firstCharCode === zeroWidthJoiner[0] && secondCharCode === zeroWidthJoiner[1];\n    }\n    function isCombinedCharacter(char) {\n      return combinedCharacters.indexOf(char) !== -1;\n    }\n    function setIsLoaded() {\n      this.isLoaded = true;\n    }\n    var Font = function () {\n      this.fonts = [];\n      this.chars = null;\n      this.typekitLoaded = 0;\n      this.isLoaded = false;\n      this._warned = false;\n      this.initTime = Date.now();\n      this.setIsLoadedBinded = this.setIsLoaded.bind(this);\n      this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);\n    };\n    Font.isModifier = isModifier;\n    Font.isZeroWidthJoiner = isZeroWidthJoiner;\n    Font.isCombinedCharacter = isCombinedCharacter;\n    var fontPrototype = {\n      addChars,\n      addFonts,\n      getCharData,\n      getFontByName,\n      measureText,\n      checkLoadedFonts,\n      setIsLoaded\n    };\n    Font.prototype = fontPrototype;\n    return Font;\n  }();\n  function RenderableElement() {}\n  RenderableElement.prototype = {\n    initRenderable: function () {\n      this.isInRange = false;\n      this.hidden = false;\n      this.isTransparent = false;\n      this.renderableComponents = [];\n    },\n    addRenderableComponent: function (component) {\n      if (this.renderableComponents.indexOf(component) === -1) {\n        this.renderableComponents.push(component);\n      }\n    },\n    removeRenderableComponent: function (component) {\n      if (this.renderableComponents.indexOf(component) !== -1) {\n        this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\n      }\n    },\n    prepareRenderableFrame: function (num) {\n      this.checkLayerLimits(num);\n    },\n    checkTransparency: function () {\n      if (this.finalTransform.mProp.o.v <= 0) {\n        if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\n          this.isTransparent = true;\n          this.hide();\n        }\n      } else if (this.isTransparent) {\n        this.isTransparent = false;\n        this.show();\n      }\n    },\n    /**\n     * @function\n     * Initializes frame related properties.\n     *\n     * @param {number} num\n     * current frame number in Layer's time\n     *\n     */\n    checkLayerLimits: function (num) {\n      if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\n        if (this.isInRange !== true) {\n          this.globalData._mdf = true;\n          this._mdf = true;\n          this.isInRange = true;\n          this.show();\n        }\n      } else if (this.isInRange !== false) {\n        this.globalData._mdf = true;\n        this.isInRange = false;\n        this.hide();\n      }\n    },\n    renderRenderable: function () {\n      var i;\n      var len = this.renderableComponents.length;\n      for (i = 0; i < len; i += 1) {\n        this.renderableComponents[i].renderFrame(this._isFirstFrame);\n      }\n    },\n    sourceRectAtTime: function () {\n      return {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100\n      };\n    },\n    getLayerSize: function () {\n      if (this.data.ty === 5) {\n        return {\n          w: this.data.textData.width,\n          h: this.data.textData.height\n        };\n      }\n      return {\n        w: this.data.width,\n        h: this.data.height\n      };\n    }\n  };\n  const MaskManagerInterface = function () {\n    function MaskInterface(mask, data) {\n      this._mask = mask;\n      this._data = data;\n    }\n    Object.defineProperty(MaskInterface.prototype, \"maskPath\", {\n      get: function () {\n        if (this._mask.prop.k) {\n          this._mask.prop.getValue();\n        }\n        return this._mask.prop;\n      }\n    });\n    Object.defineProperty(MaskInterface.prototype, \"maskOpacity\", {\n      get: function () {\n        if (this._mask.op.k) {\n          this._mask.op.getValue();\n        }\n        return this._mask.op.v * 100;\n      }\n    });\n    var MaskManager = function (maskManager) {\n      var _masksInterfaces = createSizedArray(maskManager.viewData.length);\n      var i;\n      var len = maskManager.viewData.length;\n      for (i = 0; i < len; i += 1) {\n        _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\n      }\n      var maskFunction = function (name) {\n        i = 0;\n        while (i < len) {\n          if (maskManager.masksProperties[i].nm === name) {\n            return _masksInterfaces[i];\n          }\n          i += 1;\n        }\n        return null;\n      };\n      return maskFunction;\n    };\n    return MaskManager;\n  }();\n  const ExpressionPropertyInterface = function () {\n    var defaultUnidimensionalValue = {\n      pv: 0,\n      v: 0,\n      mult: 1\n    };\n    var defaultMultidimensionalValue = {\n      pv: [0, 0, 0],\n      v: [0, 0, 0],\n      mult: 1\n    };\n    function completeProperty(expressionValue, property, type) {\n      Object.defineProperty(expressionValue, \"velocity\", {\n        get: function () {\n          return property.getVelocityAtTime(property.comp.currentFrame);\n        }\n      });\n      expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\n      expressionValue.key = function (pos) {\n        if (!expressionValue.numKeys) {\n          return 0;\n        }\n        var value = \"\";\n        if (\"s\" in property.keyframes[pos - 1]) {\n          value = property.keyframes[pos - 1].s;\n        } else if (\"e\" in property.keyframes[pos - 2]) {\n          value = property.keyframes[pos - 2].e;\n        } else {\n          value = property.keyframes[pos - 2].s;\n        }\n        var valueProp = type === \"unidimensional\" ? new Number(value) : Object.assign({}, value);\n        valueProp.time = property.keyframes[pos - 1].t / property.elem.comp.globalData.frameRate;\n        valueProp.value = type === \"unidimensional\" ? value[0] : value;\n        return valueProp;\n      };\n      expressionValue.valueAtTime = property.getValueAtTime;\n      expressionValue.speedAtTime = property.getSpeedAtTime;\n      expressionValue.velocityAtTime = property.getVelocityAtTime;\n      expressionValue.propertyGroup = property.propertyGroup;\n    }\n    function UnidimensionalPropertyInterface(property) {\n      if (!property || !(\"pv\" in property)) {\n        property = defaultUnidimensionalValue;\n      }\n      var mult = 1 / property.mult;\n      var val = property.pv * mult;\n      var expressionValue = new Number(val);\n      expressionValue.value = val;\n      completeProperty(expressionValue, property, \"unidimensional\");\n      return function () {\n        if (property.k) {\n          property.getValue();\n        }\n        val = property.v * mult;\n        if (expressionValue.value !== val) {\n          expressionValue = new Number(val);\n          expressionValue.value = val;\n          completeProperty(expressionValue, property, \"unidimensional\");\n        }\n        return expressionValue;\n      };\n    }\n    function MultidimensionalPropertyInterface(property) {\n      if (!property || !(\"pv\" in property)) {\n        property = defaultMultidimensionalValue;\n      }\n      var mult = 1 / property.mult;\n      var len = property.data && property.data.l || property.pv.length;\n      var expressionValue = createTypedArray(\"float32\", len);\n      var arrValue = createTypedArray(\"float32\", len);\n      expressionValue.value = arrValue;\n      completeProperty(expressionValue, property, \"multidimensional\");\n      return function () {\n        if (property.k) {\n          property.getValue();\n        }\n        for (var i = 0; i < len; i += 1) {\n          arrValue[i] = property.v[i] * mult;\n          expressionValue[i] = arrValue[i];\n        }\n        return expressionValue;\n      };\n    }\n    function defaultGetter() {\n      return defaultUnidimensionalValue;\n    }\n    return function (property) {\n      if (!property) {\n        return defaultGetter;\n      }\n      if (property.propType === \"unidimensional\") {\n        return UnidimensionalPropertyInterface(property);\n      }\n      return MultidimensionalPropertyInterface(property);\n    };\n  }();\n  const TransformExpressionInterface = function () {\n    return function (transform) {\n      function _thisFunction(name) {\n        switch (name) {\n          case \"scale\":\n          case \"Scale\":\n          case \"ADBE Scale\":\n          case 6:\n            return _thisFunction.scale;\n          case \"rotation\":\n          case \"Rotation\":\n          case \"ADBE Rotation\":\n          case \"ADBE Rotate Z\":\n          case 10:\n            return _thisFunction.rotation;\n          case \"ADBE Rotate X\":\n            return _thisFunction.xRotation;\n          case \"ADBE Rotate Y\":\n            return _thisFunction.yRotation;\n          case \"position\":\n          case \"Position\":\n          case \"ADBE Position\":\n          case 2:\n            return _thisFunction.position;\n          case \"ADBE Position_0\":\n            return _thisFunction.xPosition;\n          case \"ADBE Position_1\":\n            return _thisFunction.yPosition;\n          case \"ADBE Position_2\":\n            return _thisFunction.zPosition;\n          case \"anchorPoint\":\n          case \"AnchorPoint\":\n          case \"Anchor Point\":\n          case \"ADBE AnchorPoint\":\n          case 1:\n            return _thisFunction.anchorPoint;\n          case \"opacity\":\n          case \"Opacity\":\n          case 11:\n            return _thisFunction.opacity;\n          default:\n            return null;\n        }\n      }\n      Object.defineProperty(_thisFunction, \"rotation\", {\n        get: ExpressionPropertyInterface(transform.r || transform.rz)\n      });\n      Object.defineProperty(_thisFunction, \"zRotation\", {\n        get: ExpressionPropertyInterface(transform.rz || transform.r)\n      });\n      Object.defineProperty(_thisFunction, \"xRotation\", {\n        get: ExpressionPropertyInterface(transform.rx)\n      });\n      Object.defineProperty(_thisFunction, \"yRotation\", {\n        get: ExpressionPropertyInterface(transform.ry)\n      });\n      Object.defineProperty(_thisFunction, \"scale\", {\n        get: ExpressionPropertyInterface(transform.s)\n      });\n      var _px;\n      var _py;\n      var _pz;\n      var _transformFactory;\n      if (transform.p) {\n        _transformFactory = ExpressionPropertyInterface(transform.p);\n      } else {\n        _px = ExpressionPropertyInterface(transform.px);\n        _py = ExpressionPropertyInterface(transform.py);\n        if (transform.pz) {\n          _pz = ExpressionPropertyInterface(transform.pz);\n        }\n      }\n      Object.defineProperty(_thisFunction, \"position\", {\n        get: function () {\n          if (transform.p) {\n            return _transformFactory();\n          }\n          return [_px(), _py(), _pz ? _pz() : 0];\n        }\n      });\n      Object.defineProperty(_thisFunction, \"xPosition\", {\n        get: ExpressionPropertyInterface(transform.px)\n      });\n      Object.defineProperty(_thisFunction, \"yPosition\", {\n        get: ExpressionPropertyInterface(transform.py)\n      });\n      Object.defineProperty(_thisFunction, \"zPosition\", {\n        get: ExpressionPropertyInterface(transform.pz)\n      });\n      Object.defineProperty(_thisFunction, \"anchorPoint\", {\n        get: ExpressionPropertyInterface(transform.a)\n      });\n      Object.defineProperty(_thisFunction, \"opacity\", {\n        get: ExpressionPropertyInterface(transform.o)\n      });\n      Object.defineProperty(_thisFunction, \"skew\", {\n        get: ExpressionPropertyInterface(transform.sk)\n      });\n      Object.defineProperty(_thisFunction, \"skewAxis\", {\n        get: ExpressionPropertyInterface(transform.sa)\n      });\n      Object.defineProperty(_thisFunction, \"orientation\", {\n        get: ExpressionPropertyInterface(transform.or)\n      });\n      return _thisFunction;\n    };\n  }();\n  const LayerExpressionInterface = function () {\n    function getMatrix(time) {\n      var toWorldMat = new Matrix();\n      if (time !== void 0) {\n        var propMatrix = this._elem.finalTransform.mProp.getValueAtTime(time);\n        propMatrix.clone(toWorldMat);\n      } else {\n        var transformMat = this._elem.finalTransform.mProp;\n        transformMat.applyToMatrix(toWorldMat);\n      }\n      return toWorldMat;\n    }\n    function toWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      toWorldMat.props[12] = 0;\n      toWorldMat.props[13] = 0;\n      toWorldMat.props[14] = 0;\n      return this.applyPoint(toWorldMat, arr);\n    }\n    function toWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      return this.applyPoint(toWorldMat, arr);\n    }\n    function fromWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      toWorldMat.props[12] = 0;\n      toWorldMat.props[13] = 0;\n      toWorldMat.props[14] = 0;\n      return this.invertPoint(toWorldMat, arr);\n    }\n    function fromWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time);\n      return this.invertPoint(toWorldMat, arr);\n    }\n    function applyPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\n        }\n      }\n      return matrix.applyToPointArray(arr[0], arr[1], arr[2] || 0);\n    }\n    function invertPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\n        }\n      }\n      return matrix.inversePoint(arr);\n    }\n    function fromComp(arr) {\n      var toWorldMat = new Matrix();\n      toWorldMat.reset();\n      this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i;\n        var len = this._elem.hierarchy.length;\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\n        }\n        return toWorldMat.inversePoint(arr);\n      }\n      return toWorldMat.inversePoint(arr);\n    }\n    function sampleImage() {\n      return [1, 1, 1, 1];\n    }\n    return function (elem) {\n      var transformInterface;\n      function _registerMaskInterface(maskManager) {\n        _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\n      }\n      function _registerEffectsInterface(effects) {\n        _thisLayerFunction.effect = effects;\n      }\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case \"ADBE Root Vectors Group\":\n          case \"Contents\":\n          case 2:\n            return _thisLayerFunction.shapeInterface;\n          case 1:\n          case 6:\n          case \"Transform\":\n          case \"transform\":\n          case \"ADBE Transform Group\":\n            return transformInterface;\n          case 4:\n          case \"ADBE Effect Parade\":\n          case \"effects\":\n          case \"Effects\":\n            return _thisLayerFunction.effect;\n          case \"ADBE Text Properties\":\n            return _thisLayerFunction.textInterface;\n          default:\n            return null;\n        }\n      }\n      _thisLayerFunction.getMatrix = getMatrix;\n      _thisLayerFunction.invertPoint = invertPoint;\n      _thisLayerFunction.applyPoint = applyPoint;\n      _thisLayerFunction.toWorld = toWorld;\n      _thisLayerFunction.toWorldVec = toWorldVec;\n      _thisLayerFunction.fromWorld = fromWorld;\n      _thisLayerFunction.fromWorldVec = fromWorldVec;\n      _thisLayerFunction.toComp = toWorld;\n      _thisLayerFunction.fromComp = fromComp;\n      _thisLayerFunction.sampleImage = sampleImage;\n      _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\n      _thisLayerFunction._elem = elem;\n      transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\n      var anchorPointDescriptor = getDescriptor(transformInterface, \"anchorPoint\");\n      Object.defineProperties(_thisLayerFunction, {\n        hasParent: {\n          get: function () {\n            return elem.hierarchy.length;\n          }\n        },\n        parent: {\n          get: function () {\n            return elem.hierarchy[0].layerInterface;\n          }\n        },\n        rotation: getDescriptor(transformInterface, \"rotation\"),\n        scale: getDescriptor(transformInterface, \"scale\"),\n        position: getDescriptor(transformInterface, \"position\"),\n        opacity: getDescriptor(transformInterface, \"opacity\"),\n        anchorPoint: anchorPointDescriptor,\n        anchor_point: anchorPointDescriptor,\n        transform: {\n          get: function () {\n            return transformInterface;\n          }\n        },\n        active: {\n          get: function () {\n            return elem.isInRange;\n          }\n        }\n      });\n      _thisLayerFunction.startTime = elem.data.st;\n      _thisLayerFunction.index = elem.data.ind;\n      _thisLayerFunction.source = elem.data.refId;\n      _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\n      _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\n      _thisLayerFunction.inPoint = elem.data.ip / elem.comp.globalData.frameRate;\n      _thisLayerFunction.outPoint = elem.data.op / elem.comp.globalData.frameRate;\n      _thisLayerFunction._name = elem.data.nm;\n      _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\n      _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\n      return _thisLayerFunction;\n    };\n  }();\n  const propertyGroupFactory = function () {\n    return function (interfaceFunction, parentPropertyGroup) {\n      return function (val) {\n        val = val === void 0 ? 1 : val;\n        if (val <= 0) {\n          return interfaceFunction;\n        }\n        return parentPropertyGroup(val - 1);\n      };\n    };\n  }();\n  const PropertyInterface = function () {\n    return function (propertyName, propertyGroup) {\n      var interfaceFunction = {\n        _name: propertyName\n      };\n      function _propertyGroup(val) {\n        val = val === void 0 ? 1 : val;\n        if (val <= 0) {\n          return interfaceFunction;\n        }\n        return propertyGroup(val - 1);\n      }\n      return _propertyGroup;\n    };\n  }();\n  const EffectsExpressionInterface = function () {\n    var ob = {\n      createEffectsInterface\n    };\n    function createEffectsInterface(elem, propertyGroup) {\n      if (elem.effectsManager) {\n        var effectElements = [];\n        var effectsData = elem.data.ef;\n        var i;\n        var len = elem.effectsManager.effectElements.length;\n        for (i = 0; i < len; i += 1) {\n          effectElements.push(createGroupInterface(effectsData[i], elem.effectsManager.effectElements[i], propertyGroup, elem));\n        }\n        var effects = elem.data.ef || [];\n        var groupInterface = function (name) {\n          i = 0;\n          len = effects.length;\n          while (i < len) {\n            if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n              return effectElements[i];\n            }\n            i += 1;\n          }\n          return null;\n        };\n        Object.defineProperty(groupInterface, \"numProperties\", {\n          get: function () {\n            return effects.length;\n          }\n        });\n        return groupInterface;\n      }\n      return null;\n    }\n    function createGroupInterface(data, elements, propertyGroup, elem) {\n      function groupInterface(name) {\n        var effects = data.ef;\n        var i2 = 0;\n        var len2 = effects.length;\n        while (i2 < len2) {\n          if (name === effects[i2].nm || name === effects[i2].mn || name === effects[i2].ix) {\n            if (effects[i2].ty === 5) {\n              return effectElements[i2];\n            }\n            return effectElements[i2]();\n          }\n          i2 += 1;\n        }\n        throw new Error();\n      }\n      var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup);\n      var effectElements = [];\n      var i;\n      var len = data.ef.length;\n      for (i = 0; i < len; i += 1) {\n        if (data.ef[i].ty === 5) {\n          effectElements.push(createGroupInterface(data.ef[i], elements.effectElements[i], elements.effectElements[i].propertyGroup, elem));\n        } else {\n          effectElements.push(createValueInterface(elements.effectElements[i], data.ef[i].ty, elem, _propertyGroup));\n        }\n      }\n      if (data.mn === \"ADBE Color Control\") {\n        Object.defineProperty(groupInterface, \"color\", {\n          get: function () {\n            return effectElements[0]();\n          }\n        });\n      }\n      Object.defineProperties(groupInterface, {\n        numProperties: {\n          get: function () {\n            return data.np;\n          }\n        },\n        _name: {\n          value: data.nm\n        },\n        propertyGroup: {\n          value: _propertyGroup\n        }\n      });\n      groupInterface.enabled = data.en !== 0;\n      groupInterface.active = groupInterface.enabled;\n      return groupInterface;\n    }\n    function createValueInterface(element, type, elem, propertyGroup) {\n      var expressionProperty = ExpressionPropertyInterface(element.p);\n      function interfaceFunction() {\n        if (type === 10) {\n          return elem.comp.compInterface(element.p.v);\n        }\n        return expressionProperty();\n      }\n      if (element.p.setGroupProperty) {\n        element.p.setGroupProperty(PropertyInterface(\"\", propertyGroup));\n      }\n      return interfaceFunction;\n    }\n    return ob;\n  }();\n  const CompExpressionInterface = function () {\n    return function (comp) {\n      function _thisLayerFunction(name) {\n        var i = 0;\n        var len = comp.layers.length;\n        while (i < len) {\n          if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\n            return comp.elements[i].layerInterface;\n          }\n          i += 1;\n        }\n        return null;\n      }\n      Object.defineProperty(_thisLayerFunction, \"_name\", {\n        value: comp.data.nm\n      });\n      _thisLayerFunction.layer = _thisLayerFunction;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\n      _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\n      _thisLayerFunction.pixelAspect = 1;\n      _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;\n      _thisLayerFunction.displayStartTime = 0;\n      _thisLayerFunction.numLayers = comp.layers.length;\n      return _thisLayerFunction;\n    };\n  }();\n  const ShapePathInterface = function () {\n    return function pathInterfaceFactory(shape, view, propertyGroup) {\n      var prop = view.sh;\n      function interfaceFunction(val) {\n        if (val === \"Shape\" || val === \"shape\" || val === \"Path\" || val === \"path\" || val === \"ADBE Vector Shape\" || val === 2) {\n          return interfaceFunction.path;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      prop.setGroupProperty(PropertyInterface(\"Path\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        path: {\n          get: function () {\n            if (prop.k) {\n              prop.getValue();\n            }\n            return prop;\n          }\n        },\n        shape: {\n          get: function () {\n            if (prop.k) {\n              prop.getValue();\n            }\n            return prop;\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        ix: {\n          value: shape.ix\n        },\n        propertyIndex: {\n          value: shape.ix\n        },\n        mn: {\n          value: shape.mn\n        },\n        propertyGroup: {\n          value: propertyGroup\n        }\n      });\n      return interfaceFunction;\n    };\n  }();\n  const ShapeExpressionInterface = function () {\n    function iterateElements(shapes, view, propertyGroup) {\n      var arr = [];\n      var i;\n      var len = shapes ? shapes.length : 0;\n      for (i = 0; i < len; i += 1) {\n        if (shapes[i].ty === \"gr\") {\n          arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"fl\") {\n          arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"st\") {\n          arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"tm\") {\n          arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"tr\") ;else if (shapes[i].ty === \"el\") {\n          arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"sr\") {\n          arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"sh\") {\n          arr.push(ShapePathInterface(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"rc\") {\n          arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"rd\") {\n          arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"rp\") {\n          arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else if (shapes[i].ty === \"gf\") {\n          arr.push(gradientFillInterfaceFactory(shapes[i], view[i], propertyGroup));\n        } else {\n          arr.push(defaultInterfaceFactory(shapes[i], view[i]));\n        }\n      }\n      return arr;\n    }\n    function contentsInterfaceFactory(shape, view, propertyGroup) {\n      var interfaces;\n      var interfaceFunction = function _interfaceFunction(value) {\n        var i = 0;\n        var len = interfaces.length;\n        while (i < len) {\n          if (interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value) {\n            return interfaces[i];\n          }\n          i += 1;\n        }\n        if (typeof value === \"number\") {\n          return interfaces[value - 1];\n        }\n        return null;\n      };\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\n      interfaceFunction.numProperties = interfaces.length;\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.transform = transformInterface;\n      interfaceFunction.propertyIndex = shape.cix;\n      interfaceFunction._name = shape.nm;\n      return interfaceFunction;\n    }\n    function groupInterfaceFactory(shape, view, propertyGroup) {\n      var interfaceFunction = function _interfaceFunction(value) {\n        switch (value) {\n          case \"ADBE Vectors Group\":\n          case \"Contents\":\n          case 2:\n            return interfaceFunction.content;\n          default:\n            return interfaceFunction.transform;\n        }\n      };\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var content = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup);\n      var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\n      interfaceFunction.content = content;\n      interfaceFunction.transform = transformInterface;\n      Object.defineProperty(interfaceFunction, \"_name\", {\n        get: function () {\n          return shape.nm;\n        }\n      });\n      interfaceFunction.numProperties = shape.np;\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.nm = shape.nm;\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function fillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === \"Color\" || val === \"color\") {\n          return interfaceFunction.color;\n        }\n        if (val === \"Opacity\" || val === \"opacity\") {\n          return interfaceFunction.opacity;\n        }\n        return null;\n      }\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(PropertyInterface(\"Color\", propertyGroup));\n      view.o.setGroupProperty(PropertyInterface(\"Opacity\", propertyGroup));\n      return interfaceFunction;\n    }\n    function gradientFillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === \"Start Point\" || val === \"start point\") {\n          return interfaceFunction.startPoint;\n        }\n        if (val === \"End Point\" || val === \"end point\") {\n          return interfaceFunction.endPoint;\n        }\n        if (val === \"Opacity\" || val === \"opacity\") {\n          return interfaceFunction.opacity;\n        }\n        return null;\n      }\n      Object.defineProperties(interfaceFunction, {\n        startPoint: {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        endPoint: {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        type: {\n          get: function () {\n            return \"a\";\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.s.setGroupProperty(PropertyInterface(\"Start Point\", propertyGroup));\n      view.e.setGroupProperty(PropertyInterface(\"End Point\", propertyGroup));\n      view.o.setGroupProperty(PropertyInterface(\"Opacity\", propertyGroup));\n      return interfaceFunction;\n    }\n    function defaultInterfaceFactory() {\n      function interfaceFunction() {\n        return null;\n      }\n      return interfaceFunction;\n    }\n    function strokeInterfaceFactory(shape, view, propertyGroup) {\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup);\n      function addPropertyToDashOb(i2) {\n        Object.defineProperty(dashOb, shape.d[i2].nm, {\n          get: ExpressionPropertyInterface(view.d.dataProps[i2].p)\n        });\n      }\n      var i;\n      var len = shape.d ? shape.d.length : 0;\n      var dashOb = {};\n      for (i = 0; i < len; i += 1) {\n        addPropertyToDashOb(i);\n        view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\n      }\n      function interfaceFunction(val) {\n        if (val === \"Color\" || val === \"color\") {\n          return interfaceFunction.color;\n        }\n        if (val === \"Opacity\" || val === \"opacity\") {\n          return interfaceFunction.opacity;\n        }\n        if (val === \"Stroke Width\" || val === \"stroke width\") {\n          return interfaceFunction.strokeWidth;\n        }\n        return null;\n      }\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c)\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        strokeWidth: {\n          get: ExpressionPropertyInterface(view.w)\n        },\n        dash: {\n          get: function () {\n            return dashOb;\n          }\n        },\n        _name: {\n          value: shape.nm\n        },\n        mn: {\n          value: shape.mn\n        }\n      });\n      view.c.setGroupProperty(PropertyInterface(\"Color\", _propertyGroup));\n      view.o.setGroupProperty(PropertyInterface(\"Opacity\", _propertyGroup));\n      view.w.setGroupProperty(PropertyInterface(\"Stroke Width\", _propertyGroup));\n      return interfaceFunction;\n    }\n    function trimInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === shape.e.ix || val === \"End\" || val === \"end\") {\n          return interfaceFunction.end;\n        }\n        if (val === shape.s.ix) {\n          return interfaceFunction.start;\n        }\n        if (val === shape.o.ix) {\n          return interfaceFunction.offset;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      interfaceFunction.propertyIndex = shape.ix;\n      view.s.setGroupProperty(PropertyInterface(\"Start\", _propertyGroup));\n      view.e.setGroupProperty(PropertyInterface(\"End\", _propertyGroup));\n      view.o.setGroupProperty(PropertyInterface(\"Offset\", _propertyGroup));\n      interfaceFunction.propertyIndex = shape.ix;\n      interfaceFunction.propertyGroup = propertyGroup;\n      Object.defineProperties(interfaceFunction, {\n        start: {\n          get: ExpressionPropertyInterface(view.s)\n        },\n        end: {\n          get: ExpressionPropertyInterface(view.e)\n        },\n        offset: {\n          get: ExpressionPropertyInterface(view.o)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function transformInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.a.ix === value || value === \"Anchor Point\") {\n          return interfaceFunction.anchorPoint;\n        }\n        if (shape.o.ix === value || value === \"Opacity\") {\n          return interfaceFunction.opacity;\n        }\n        if (shape.p.ix === value || value === \"Position\") {\n          return interfaceFunction.position;\n        }\n        if (shape.r.ix === value || value === \"Rotation\" || value === \"ADBE Vector Rotation\") {\n          return interfaceFunction.rotation;\n        }\n        if (shape.s.ix === value || value === \"Scale\") {\n          return interfaceFunction.scale;\n        }\n        if (shape.sk && shape.sk.ix === value || value === \"Skew\") {\n          return interfaceFunction.skew;\n        }\n        if (shape.sa && shape.sa.ix === value || value === \"Skew Axis\") {\n          return interfaceFunction.skewAxis;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      view.transform.mProps.o.setGroupProperty(PropertyInterface(\"Opacity\", _propertyGroup));\n      view.transform.mProps.p.setGroupProperty(PropertyInterface(\"Position\", _propertyGroup));\n      view.transform.mProps.a.setGroupProperty(PropertyInterface(\"Anchor Point\", _propertyGroup));\n      view.transform.mProps.s.setGroupProperty(PropertyInterface(\"Scale\", _propertyGroup));\n      view.transform.mProps.r.setGroupProperty(PropertyInterface(\"Rotation\", _propertyGroup));\n      if (view.transform.mProps.sk) {\n        view.transform.mProps.sk.setGroupProperty(PropertyInterface(\"Skew\", _propertyGroup));\n        view.transform.mProps.sa.setGroupProperty(PropertyInterface(\"Skew Angle\", _propertyGroup));\n      }\n      view.transform.op.setGroupProperty(PropertyInterface(\"Opacity\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        opacity: {\n          get: ExpressionPropertyInterface(view.transform.mProps.o)\n        },\n        position: {\n          get: ExpressionPropertyInterface(view.transform.mProps.p)\n        },\n        anchorPoint: {\n          get: ExpressionPropertyInterface(view.transform.mProps.a)\n        },\n        scale: {\n          get: ExpressionPropertyInterface(view.transform.mProps.s)\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(view.transform.mProps.r)\n        },\n        skew: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sk)\n        },\n        skewAxis: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sa)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.ty = \"tr\";\n      interfaceFunction.mn = shape.mn;\n      interfaceFunction.propertyGroup = propertyGroup;\n      return interfaceFunction;\n    }\n    function ellipseInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n        if (shape.s.ix === value) {\n          return interfaceFunction.size;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      interfaceFunction.propertyIndex = shape.ix;\n      var prop = view.sh.ty === \"tm\" ? view.sh.prop : view.sh;\n      prop.s.setGroupProperty(PropertyInterface(\"Size\", _propertyGroup));\n      prop.p.setGroupProperty(PropertyInterface(\"Position\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        size: {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function starInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n        if (shape.r.ix === value) {\n          return interfaceFunction.rotation;\n        }\n        if (shape.pt.ix === value) {\n          return interfaceFunction.points;\n        }\n        if (shape.or.ix === value || value === \"ADBE Vector Star Outer Radius\") {\n          return interfaceFunction.outerRadius;\n        }\n        if (shape.os.ix === value) {\n          return interfaceFunction.outerRoundness;\n        }\n        if (shape.ir && (shape.ir.ix === value || value === \"ADBE Vector Star Inner Radius\")) {\n          return interfaceFunction.innerRadius;\n        }\n        if (shape.is && shape.is.ix === value) {\n          return interfaceFunction.innerRoundness;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var prop = view.sh.ty === \"tm\" ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.or.setGroupProperty(PropertyInterface(\"Outer Radius\", _propertyGroup));\n      prop.os.setGroupProperty(PropertyInterface(\"Outer Roundness\", _propertyGroup));\n      prop.pt.setGroupProperty(PropertyInterface(\"Points\", _propertyGroup));\n      prop.p.setGroupProperty(PropertyInterface(\"Position\", _propertyGroup));\n      prop.r.setGroupProperty(PropertyInterface(\"Rotation\", _propertyGroup));\n      if (shape.ir) {\n        prop.ir.setGroupProperty(PropertyInterface(\"Inner Radius\", _propertyGroup));\n        prop.is.setGroupProperty(PropertyInterface(\"Inner Roundness\", _propertyGroup));\n      }\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        points: {\n          get: ExpressionPropertyInterface(prop.pt)\n        },\n        outerRadius: {\n          get: ExpressionPropertyInterface(prop.or)\n        },\n        outerRoundness: {\n          get: ExpressionPropertyInterface(prop.os)\n        },\n        innerRadius: {\n          get: ExpressionPropertyInterface(prop.ir)\n        },\n        innerRoundness: {\n          get: ExpressionPropertyInterface(prop.is)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function rectInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position;\n        }\n        if (shape.r.ix === value) {\n          return interfaceFunction.roundness;\n        }\n        if (shape.s.ix === value || value === \"Size\" || value === \"ADBE Vector Rect Size\") {\n          return interfaceFunction.size;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var prop = view.sh.ty === \"tm\" ? view.sh.prop : view.sh;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.p.setGroupProperty(PropertyInterface(\"Position\", _propertyGroup));\n      prop.s.setGroupProperty(PropertyInterface(\"Size\", _propertyGroup));\n      prop.r.setGroupProperty(PropertyInterface(\"Rotation\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p)\n        },\n        roundness: {\n          get: ExpressionPropertyInterface(prop.r)\n        },\n        size: {\n          get: ExpressionPropertyInterface(prop.s)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function roundedInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.r.ix === value || value === \"Round Corners 1\") {\n          return interfaceFunction.radius;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.rd.setGroupProperty(PropertyInterface(\"Radius\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        radius: {\n          get: ExpressionPropertyInterface(prop.rd)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    function repeaterInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.c.ix === value || value === \"Copies\") {\n          return interfaceFunction.copies;\n        }\n        if (shape.o.ix === value || value === \"Offset\") {\n          return interfaceFunction.offset;\n        }\n        return null;\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\n      var prop = view;\n      interfaceFunction.propertyIndex = shape.ix;\n      prop.c.setGroupProperty(PropertyInterface(\"Copies\", _propertyGroup));\n      prop.o.setGroupProperty(PropertyInterface(\"Offset\", _propertyGroup));\n      Object.defineProperties(interfaceFunction, {\n        copies: {\n          get: ExpressionPropertyInterface(prop.c)\n        },\n        offset: {\n          get: ExpressionPropertyInterface(prop.o)\n        },\n        _name: {\n          value: shape.nm\n        }\n      });\n      interfaceFunction.mn = shape.mn;\n      return interfaceFunction;\n    }\n    return function (shapes, view, propertyGroup) {\n      var interfaces;\n      function _interfaceFunction(value) {\n        if (typeof value === \"number\") {\n          value = value === void 0 ? 1 : value;\n          if (value === 0) {\n            return propertyGroup;\n          }\n          return interfaces[value - 1];\n        }\n        var i = 0;\n        var len = interfaces.length;\n        while (i < len) {\n          if (interfaces[i]._name === value) {\n            return interfaces[i];\n          }\n          i += 1;\n        }\n        return null;\n      }\n      function parentGroupWrapper() {\n        return propertyGroup;\n      }\n      _interfaceFunction.propertyGroup = propertyGroupFactory(_interfaceFunction, parentGroupWrapper);\n      interfaces = iterateElements(shapes, view, _interfaceFunction.propertyGroup);\n      _interfaceFunction.numProperties = interfaces.length;\n      _interfaceFunction._name = \"Contents\";\n      return _interfaceFunction;\n    };\n  }();\n  const TextExpressionInterface = function () {\n    return function (elem) {\n      var _prevValue;\n      var _sourceText;\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case \"ADBE Text Document\":\n            return _thisLayerFunction.sourceText;\n          default:\n            return null;\n        }\n      }\n      Object.defineProperty(_thisLayerFunction, \"sourceText\", {\n        get: function () {\n          elem.textProperty.getValue();\n          var stringValue = elem.textProperty.currentData.t;\n          if (stringValue !== _prevValue) {\n            elem.textProperty.currentData.t = _prevValue;\n            _sourceText = new String(stringValue);\n            _sourceText.value = stringValue || new String(stringValue);\n          }\n          return _sourceText;\n        }\n      });\n      return _thisLayerFunction;\n    };\n  }();\n  const getBlendMode = function () {\n    var blendModeEnums = {\n      0: \"source-over\",\n      1: \"multiply\",\n      2: \"screen\",\n      3: \"overlay\",\n      4: \"darken\",\n      5: \"lighten\",\n      6: \"color-dodge\",\n      7: \"color-burn\",\n      8: \"hard-light\",\n      9: \"soft-light\",\n      10: \"difference\",\n      11: \"exclusion\",\n      12: \"hue\",\n      13: \"saturation\",\n      14: \"color\",\n      15: \"luminosity\"\n    };\n    return function (mode) {\n      return blendModeEnums[mode] || \"\";\n    };\n  }();\n  function SliderEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n  function AngleEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n  function ColorEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\n  }\n  function PointEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\n  }\n  function LayerIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n  function MaskIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n  function CheckboxEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\n  }\n  function NoValueEffect() {\n    this.p = {};\n  }\n  function EffectsManager(data, element) {\n    var effects = data.ef || [];\n    this.effectElements = [];\n    var i;\n    var len = effects.length;\n    var effectItem;\n    for (i = 0; i < len; i += 1) {\n      effectItem = new GroupEffect(effects[i], element);\n      this.effectElements.push(effectItem);\n    }\n  }\n  function GroupEffect(data, element) {\n    this.init(data, element);\n  }\n  extendPrototype([DynamicPropertyContainer], GroupEffect);\n  GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\n  GroupEffect.prototype.init = function (data, element) {\n    this.data = data;\n    this.effectElements = [];\n    this.initDynamicPropertyContainer(element);\n    var i;\n    var len = this.data.ef.length;\n    var eff;\n    var effects = this.data.ef;\n    for (i = 0; i < len; i += 1) {\n      eff = null;\n      switch (effects[i].ty) {\n        case 0:\n          eff = new SliderEffect(effects[i], element, this);\n          break;\n        case 1:\n          eff = new AngleEffect(effects[i], element, this);\n          break;\n        case 2:\n          eff = new ColorEffect(effects[i], element, this);\n          break;\n        case 3:\n          eff = new PointEffect(effects[i], element, this);\n          break;\n        case 4:\n        case 7:\n          eff = new CheckboxEffect(effects[i], element, this);\n          break;\n        case 10:\n          eff = new LayerIndexEffect(effects[i], element, this);\n          break;\n        case 11:\n          eff = new MaskIndexEffect(effects[i], element, this);\n          break;\n        case 5:\n          eff = new EffectsManager(effects[i], element);\n          break;\n        default:\n          eff = new NoValueEffect(effects[i]);\n          break;\n      }\n      if (eff) {\n        this.effectElements.push(eff);\n      }\n    }\n  };\n  function BaseElement() {}\n  BaseElement.prototype = {\n    checkMasks: function () {\n      if (!this.data.hasMask) {\n        return false;\n      }\n      var i = 0;\n      var len = this.data.masksProperties.length;\n      while (i < len) {\n        if (this.data.masksProperties[i].mode !== \"n\" && this.data.masksProperties[i].cl !== false) {\n          return true;\n        }\n        i += 1;\n      }\n      return false;\n    },\n    initExpressions: function () {\n      this.layerInterface = LayerExpressionInterface(this);\n      if (this.data.hasMask && this.maskManager) {\n        this.layerInterface.registerMaskInterface(this.maskManager);\n      }\n      var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);\n      this.layerInterface.registerEffectsInterface(effectsInterface);\n      if (this.data.ty === 0 || this.data.xt) {\n        this.compInterface = CompExpressionInterface(this);\n      } else if (this.data.ty === 4) {\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);\n        this.layerInterface.content = this.layerInterface.shapeInterface;\n      } else if (this.data.ty === 5) {\n        this.layerInterface.textInterface = TextExpressionInterface(this);\n        this.layerInterface.text = this.layerInterface.textInterface;\n      }\n    },\n    setBlendMode: function () {\n      var blendModeValue = getBlendMode(this.data.bm);\n      var elem = this.baseElement || this.layerElement;\n      elem.style[\"mix-blend-mode\"] = blendModeValue;\n    },\n    initBaseData: function (data, globalData, comp) {\n      this.globalData = globalData;\n      this.comp = comp;\n      this.data = data;\n      this.layerId = createElementID();\n      if (!this.data.sr) {\n        this.data.sr = 1;\n      }\n      this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);\n    },\n    getType: function () {\n      return this.type;\n    },\n    sourceRectAtTime: function () {}\n  };\n  function FrameElement() {}\n  FrameElement.prototype = {\n    /**\n     * @function\n     * Initializes frame related properties.\n     *\n     */\n    initFrame: function () {\n      this._isFirstFrame = false;\n      this.dynamicProperties = [];\n      this._mdf = false;\n    },\n    /**\n     * @function\n     * Calculates all dynamic values\n     *\n     * @param {number} num\n     * current frame number in Layer's time\n     * @param {boolean} isVisible\n     * if layers is currently in range\n     *\n     */\n    prepareProperties: function (num, isVisible) {\n      var i;\n      var len = this.dynamicProperties.length;\n      for (i = 0; i < len; i += 1) {\n        if (isVisible || this._isParent && this.dynamicProperties[i].propType === \"transform\") {\n          this.dynamicProperties[i].getValue();\n          if (this.dynamicProperties[i]._mdf) {\n            this.globalData._mdf = true;\n            this._mdf = true;\n          }\n        }\n      }\n    },\n    addDynamicProperty: function (prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop);\n      }\n    }\n  };\n  const FootageInterface = function () {\n    var outlineInterfaceFactory = function (elem) {\n      var currentPropertyName = \"\";\n      var currentProperty = elem.getFootageData();\n      function init() {\n        currentPropertyName = \"\";\n        currentProperty = elem.getFootageData();\n        return searchProperty;\n      }\n      function searchProperty(value) {\n        if (currentProperty[value]) {\n          currentPropertyName = value;\n          currentProperty = currentProperty[value];\n          if (typeof currentProperty === \"object\") {\n            return searchProperty;\n          }\n          return currentProperty;\n        }\n        var propertyNameIndex = value.indexOf(currentPropertyName);\n        if (propertyNameIndex !== -1) {\n          var index2 = parseInt(value.substr(propertyNameIndex + currentPropertyName.length), 10);\n          currentProperty = currentProperty[index2];\n          if (typeof currentProperty === \"object\") {\n            return searchProperty;\n          }\n          return currentProperty;\n        }\n        return \"\";\n      }\n      return init;\n    };\n    var dataInterfaceFactory = function (elem) {\n      function interfaceFunction(value) {\n        if (value === \"Outline\") {\n          return interfaceFunction.outlineInterface();\n        }\n        return null;\n      }\n      interfaceFunction._name = \"Outline\";\n      interfaceFunction.outlineInterface = outlineInterfaceFactory(elem);\n      return interfaceFunction;\n    };\n    return function (elem) {\n      function _interfaceFunction(value) {\n        if (value === \"Data\") {\n          return _interfaceFunction.dataInterface;\n        }\n        return null;\n      }\n      _interfaceFunction._name = \"Data\";\n      _interfaceFunction.dataInterface = dataInterfaceFactory(elem);\n      return _interfaceFunction;\n    };\n  }();\n  function FootageElement(data, globalData, comp) {\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData.getAssetData(data.refId);\n    this.footageData = globalData.imageLoader.getAsset(this.assetData);\n    this.initBaseData(data, globalData, comp);\n  }\n  FootageElement.prototype.prepareFrame = function () {};\n  extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement);\n  FootageElement.prototype.getBaseElement = function () {\n    return null;\n  };\n  FootageElement.prototype.renderFrame = function () {};\n  FootageElement.prototype.destroy = function () {};\n  FootageElement.prototype.initExpressions = function () {\n    this.layerInterface = FootageInterface(this);\n  };\n  FootageElement.prototype.getFootageData = function () {\n    return this.footageData;\n  };\n  function AudioElement(data, globalData, comp) {\n    this.initFrame();\n    this.initRenderable();\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initBaseData(data, globalData, comp);\n    this._isPlaying = false;\n    this._canPlay = false;\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.audio = this.globalData.audioController.createAudio(assetPath);\n    this._currentTime = 0;\n    this.globalData.audioController.addAudio(this);\n    this._volumeMultiplier = 1;\n    this._volume = 1;\n    this._previousVolume = null;\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n    this.lv = PropertyFactory.getProp(this, data.au && data.au.lv ? data.au.lv : {\n      k: [100]\n    }, 1, 0.01, this);\n  }\n  AudioElement.prototype.prepareFrame = function (num) {\n    this.prepareRenderableFrame(num, true);\n    this.prepareProperties(num, true);\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n      this._currentTime = timeRemapped;\n    } else {\n      this._currentTime = num / this.data.sr;\n    }\n    this._volume = this.lv.v[0];\n    var totalVolume = this._volume * this._volumeMultiplier;\n    if (this._previousVolume !== totalVolume) {\n      this._previousVolume = totalVolume;\n      this.audio.volume(totalVolume);\n    }\n  };\n  extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement);\n  AudioElement.prototype.renderFrame = function () {\n    if (this.isInRange && this._canPlay) {\n      if (!this._isPlaying) {\n        this.audio.play();\n        this.audio.seek(this._currentTime / this.globalData.frameRate);\n        this._isPlaying = true;\n      } else if (!this.audio.playing() || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1) {\n        this.audio.seek(this._currentTime / this.globalData.frameRate);\n      }\n    }\n  };\n  AudioElement.prototype.show = function () {};\n  AudioElement.prototype.hide = function () {\n    this.audio.pause();\n    this._isPlaying = false;\n  };\n  AudioElement.prototype.pause = function () {\n    this.audio.pause();\n    this._isPlaying = false;\n    this._canPlay = false;\n  };\n  AudioElement.prototype.resume = function () {\n    this._canPlay = true;\n  };\n  AudioElement.prototype.setRate = function (rateValue) {\n    this.audio.rate(rateValue);\n  };\n  AudioElement.prototype.volume = function (volumeValue) {\n    this._volumeMultiplier = volumeValue;\n    this._previousVolume = volumeValue * this._volume;\n    this.audio.volume(this._previousVolume);\n  };\n  AudioElement.prototype.getBaseElement = function () {\n    return null;\n  };\n  AudioElement.prototype.destroy = function () {};\n  AudioElement.prototype.sourceRectAtTime = function () {};\n  AudioElement.prototype.initExpressions = function () {};\n  function BaseRenderer() {}\n  BaseRenderer.prototype.checkLayers = function (num) {\n    var i;\n    var len = this.layers.length;\n    var data;\n    this.completeLayers = true;\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (!this.elements[i]) {\n        data = this.layers[i];\n        if (data.ip - data.st <= num - this.layers[i].st && data.op - data.st > num - this.layers[i].st) {\n          this.buildItem(i);\n        }\n      }\n      this.completeLayers = this.elements[i] ? this.completeLayers : false;\n    }\n    this.checkPendingElements();\n  };\n  BaseRenderer.prototype.createItem = function (layer) {\n    switch (layer.ty) {\n      case 2:\n        return this.createImage(layer);\n      case 0:\n        return this.createComp(layer);\n      case 1:\n        return this.createSolid(layer);\n      case 3:\n        return this.createNull(layer);\n      case 4:\n        return this.createShape(layer);\n      case 5:\n        return this.createText(layer);\n      case 6:\n        return this.createAudio(layer);\n      case 13:\n        return this.createCamera(layer);\n      case 15:\n        return this.createFootage(layer);\n      default:\n        return this.createNull(layer);\n    }\n  };\n  BaseRenderer.prototype.createCamera = function () {\n    throw new Error(\"You're using a 3d camera. Try the html renderer.\");\n  };\n  BaseRenderer.prototype.createAudio = function (data) {\n    return new AudioElement(data, this.globalData, this);\n  };\n  BaseRenderer.prototype.createFootage = function (data) {\n    return new FootageElement(data, this.globalData, this);\n  };\n  BaseRenderer.prototype.buildAllItems = function () {\n    var i;\n    var len = this.layers.length;\n    for (i = 0; i < len; i += 1) {\n      this.buildItem(i);\n    }\n    this.checkPendingElements();\n  };\n  BaseRenderer.prototype.includeLayers = function (newLayers) {\n    this.completeLayers = false;\n    var i;\n    var len = newLayers.length;\n    var j;\n    var jLen = this.layers.length;\n    for (i = 0; i < len; i += 1) {\n      j = 0;\n      while (j < jLen) {\n        if (this.layers[j].id === newLayers[i].id) {\n          this.layers[j] = newLayers[i];\n          break;\n        }\n        j += 1;\n      }\n    }\n  };\n  BaseRenderer.prototype.setProjectInterface = function (pInterface) {\n    this.globalData.projectInterface = pInterface;\n  };\n  BaseRenderer.prototype.initItems = function () {\n    if (!this.globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n  };\n  BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\n    var elements = this.elements;\n    var layers = this.layers;\n    var i = 0;\n    var len = layers.length;\n    while (i < len) {\n      if (layers[i].ind == parentName) {\n        if (!elements[i] || elements[i] === true) {\n          this.buildItem(i);\n          this.addPendingElement(element);\n        } else {\n          hierarchy.push(elements[i]);\n          elements[i].setAsParent();\n          if (layers[i].parent !== void 0) {\n            this.buildElementParenting(element, layers[i].parent, hierarchy);\n          } else {\n            element.setHierarchy(hierarchy);\n          }\n        }\n      }\n      i += 1;\n    }\n  };\n  BaseRenderer.prototype.addPendingElement = function (element) {\n    this.pendingElements.push(element);\n  };\n  BaseRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i;\n    var len = assets.length;\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i]);\n        comp.initExpressions();\n        this.globalData.projectInterface.registerComposition(comp);\n      }\n    }\n  };\n  BaseRenderer.prototype.getElementByPath = function (path) {\n    var pathValue = path.shift();\n    var element;\n    if (typeof pathValue === \"number\") {\n      element = this.elements[pathValue];\n    } else {\n      var i;\n      var len = this.elements.length;\n      for (i = 0; i < len; i += 1) {\n        if (this.elements[i].data.nm === pathValue) {\n          element = this.elements[i];\n          break;\n        }\n      }\n    }\n    if (path.length === 0) {\n      return element;\n    }\n    return element.getElementByPath(path);\n  };\n  BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {\n    this.globalData.fontManager = new FontManager();\n    this.globalData.fontManager.addChars(animData.chars);\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\n    this.globalData.audioController = this.animationItem.audioController;\n    this.globalData.frameId = 0;\n    this.globalData.frameRate = animData.fr;\n    this.globalData.nm = animData.nm;\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h\n    };\n  };\n  function TransformElement() {}\n  TransformElement.prototype = {\n    initTransform: function () {\n      this.finalTransform = {\n        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {\n          o: 0\n        },\n        _matMdf: false,\n        _opMdf: false,\n        mat: new Matrix()\n      };\n      if (this.data.ao) {\n        this.finalTransform.mProp.autoOriented = true;\n      }\n      if (this.data.ty !== 11) ;\n    },\n    renderTransform: function () {\n      this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\n      this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\n      if (this.hierarchy) {\n        var mat;\n        var finalMat = this.finalTransform.mat;\n        var i = 0;\n        var len = this.hierarchy.length;\n        if (!this.finalTransform._matMdf) {\n          while (i < len) {\n            if (this.hierarchy[i].finalTransform.mProp._mdf) {\n              this.finalTransform._matMdf = true;\n              break;\n            }\n            i += 1;\n          }\n        }\n        if (this.finalTransform._matMdf) {\n          mat = this.finalTransform.mProp.v.props;\n          finalMat.cloneFromProps(mat);\n          for (i = 0; i < len; i += 1) {\n            mat = this.hierarchy[i].finalTransform.mProp.v.props;\n            finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\n          }\n        }\n      }\n    },\n    globalToLocal: function (pt) {\n      var transforms = [];\n      transforms.push(this.finalTransform);\n      var flag = true;\n      var comp = this.comp;\n      while (flag) {\n        if (comp.finalTransform) {\n          if (comp.data.hasMask) {\n            transforms.splice(0, 0, comp.finalTransform);\n          }\n          comp = comp.comp;\n        } else {\n          flag = false;\n        }\n      }\n      var i;\n      var len = transforms.length;\n      var ptNew;\n      for (i = 0; i < len; i += 1) {\n        ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\n        pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\n      }\n      return pt;\n    },\n    mHelper: new Matrix()\n  };\n  function MaskElement(data, element, globalData) {\n    this.data = data;\n    this.element = element;\n    this.globalData = globalData;\n    this.storedData = [];\n    this.masksProperties = this.data.masksProperties || [];\n    this.maskElement = null;\n    var defs = this.globalData.defs;\n    var i;\n    var len = this.masksProperties ? this.masksProperties.length : 0;\n    this.viewData = createSizedArray(len);\n    this.solidPath = \"\";\n    var path;\n    var properties = this.masksProperties;\n    var count = 0;\n    var currentMasks = [];\n    var j;\n    var jLen;\n    var layerId = createElementID();\n    var rect;\n    var expansor;\n    var feMorph;\n    var x;\n    var maskType = \"clipPath\";\n    var maskRef = \"clip-path\";\n    for (i = 0; i < len; i += 1) {\n      if (properties[i].mode !== \"a\" && properties[i].mode !== \"n\" || properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x) {\n        maskType = \"mask\";\n        maskRef = \"mask\";\n      }\n      if ((properties[i].mode === \"s\" || properties[i].mode === \"i\") && count === 0) {\n        rect = createNS(\"rect\");\n        rect.setAttribute(\"fill\", \"#ffffff\");\n        rect.setAttribute(\"width\", this.element.comp.data.w || 0);\n        rect.setAttribute(\"height\", this.element.comp.data.h || 0);\n        currentMasks.push(rect);\n      } else {\n        rect = null;\n      }\n      path = createNS(\"path\");\n      if (properties[i].mode === \"n\") {\n        this.viewData[i] = {\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          elem: path,\n          lastPath: \"\"\n        };\n        defs.appendChild(path);\n      } else {\n        count += 1;\n        path.setAttribute(\"fill\", properties[i].mode === \"s\" ? \"#000000\" : \"#ffffff\");\n        path.setAttribute(\"clip-rule\", \"nonzero\");\n        var filterID;\n        if (properties[i].x.k !== 0) {\n          maskType = \"mask\";\n          maskRef = \"mask\";\n          x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);\n          filterID = createElementID();\n          expansor = createNS(\"filter\");\n          expansor.setAttribute(\"id\", filterID);\n          feMorph = createNS(\"feMorphology\");\n          feMorph.setAttribute(\"operator\", \"erode\");\n          feMorph.setAttribute(\"in\", \"SourceGraphic\");\n          feMorph.setAttribute(\"radius\", \"0\");\n          expansor.appendChild(feMorph);\n          defs.appendChild(expansor);\n          path.setAttribute(\"stroke\", properties[i].mode === \"s\" ? \"#000000\" : \"#ffffff\");\n        } else {\n          feMorph = null;\n          x = null;\n        }\n        this.storedData[i] = {\n          elem: path,\n          x,\n          expan: feMorph,\n          lastPath: \"\",\n          lastOperator: \"\",\n          filterId: filterID,\n          lastRadius: 0\n        };\n        if (properties[i].mode === \"i\") {\n          jLen = currentMasks.length;\n          var g = createNS(\"g\");\n          for (j = 0; j < jLen; j += 1) {\n            g.appendChild(currentMasks[j]);\n          }\n          var mask = createNS(\"mask\");\n          mask.setAttribute(\"mask-type\", \"alpha\");\n          mask.setAttribute(\"id\", layerId + \"_\" + count);\n          mask.appendChild(path);\n          defs.appendChild(mask);\n          g.setAttribute(\"mask\", \"url(\" + getLocationHref() + \"#\" + layerId + \"_\" + count + \")\");\n          currentMasks.length = 0;\n          currentMasks.push(g);\n        } else {\n          currentMasks.push(path);\n        }\n        if (properties[i].inv && !this.solidPath) {\n          this.solidPath = this.createLayerSolidPath();\n        }\n        this.viewData[i] = {\n          elem: path,\n          lastPath: \"\",\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          invRect: rect\n        };\n        if (!this.viewData[i].prop.k) {\n          this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);\n        }\n      }\n    }\n    this.maskElement = createNS(maskType);\n    len = currentMasks.length;\n    for (i = 0; i < len; i += 1) {\n      this.maskElement.appendChild(currentMasks[i]);\n    }\n    if (count > 0) {\n      this.maskElement.setAttribute(\"id\", layerId);\n      this.element.maskedElement.setAttribute(maskRef, \"url(\" + getLocationHref() + \"#\" + layerId + \")\");\n      defs.appendChild(this.maskElement);\n    }\n    if (this.viewData.length) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n  MaskElement.prototype.getMaskProperty = function (pos) {\n    return this.viewData[pos].prop;\n  };\n  MaskElement.prototype.renderFrame = function (isFirstFrame) {\n    var finalMat = this.element.finalTransform.mat;\n    var i;\n    var len = this.masksProperties.length;\n    for (i = 0; i < len; i += 1) {\n      if (this.viewData[i].prop._mdf || isFirstFrame) {\n        this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);\n      }\n      if (this.viewData[i].op._mdf || isFirstFrame) {\n        this.viewData[i].elem.setAttribute(\"fill-opacity\", this.viewData[i].op.v);\n      }\n      if (this.masksProperties[i].mode !== \"n\") {\n        if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {\n          this.viewData[i].invRect.setAttribute(\"transform\", finalMat.getInverseMatrix().to2dCSS());\n        }\n        if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {\n          var feMorph = this.storedData[i].expan;\n          if (this.storedData[i].x.v < 0) {\n            if (this.storedData[i].lastOperator !== \"erode\") {\n              this.storedData[i].lastOperator = \"erode\";\n              this.storedData[i].elem.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + this.storedData[i].filterId + \")\");\n            }\n            feMorph.setAttribute(\"radius\", -this.storedData[i].x.v);\n          } else {\n            if (this.storedData[i].lastOperator !== \"dilate\") {\n              this.storedData[i].lastOperator = \"dilate\";\n              this.storedData[i].elem.setAttribute(\"filter\", null);\n            }\n            this.storedData[i].elem.setAttribute(\"stroke-width\", this.storedData[i].x.v * 2);\n          }\n        }\n      }\n    }\n  };\n  MaskElement.prototype.getMaskelement = function () {\n    return this.maskElement;\n  };\n  MaskElement.prototype.createLayerSolidPath = function () {\n    var path = \"M0,0 \";\n    path += \" h\" + this.globalData.compSize.w;\n    path += \" v\" + this.globalData.compSize.h;\n    path += \" h-\" + this.globalData.compSize.w;\n    path += \" v-\" + this.globalData.compSize.h + \" \";\n    return path;\n  };\n  MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\n    var pathString = \" M\" + pathNodes.v[0][0] + \",\" + pathNodes.v[0][1];\n    var i;\n    var len;\n    len = pathNodes._length;\n    for (i = 1; i < len; i += 1) {\n      pathString += \" C\" + pathNodes.o[i - 1][0] + \",\" + pathNodes.o[i - 1][1] + \" \" + pathNodes.i[i][0] + \",\" + pathNodes.i[i][1] + \" \" + pathNodes.v[i][0] + \",\" + pathNodes.v[i][1];\n    }\n    if (pathNodes.c && len > 1) {\n      pathString += \" C\" + pathNodes.o[i - 1][0] + \",\" + pathNodes.o[i - 1][1] + \" \" + pathNodes.i[0][0] + \",\" + pathNodes.i[0][1] + \" \" + pathNodes.v[0][0] + \",\" + pathNodes.v[0][1];\n    }\n    if (viewData.lastPath !== pathString) {\n      var pathShapeValue = \"\";\n      if (viewData.elem) {\n        if (pathNodes.c) {\n          pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\n        }\n        viewData.elem.setAttribute(\"d\", pathShapeValue);\n      }\n      viewData.lastPath = pathString;\n    }\n  };\n  MaskElement.prototype.destroy = function () {\n    this.element = null;\n    this.globalData = null;\n    this.maskElement = null;\n    this.data = null;\n    this.masksProperties = null;\n  };\n  const filtersFactory = function () {\n    var ob = {};\n    ob.createFilter = createFilter;\n    ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\n    function createFilter(filId, skipCoordinates) {\n      var fil = createNS(\"filter\");\n      fil.setAttribute(\"id\", filId);\n      if (skipCoordinates !== true) {\n        fil.setAttribute(\"filterUnits\", \"objectBoundingBox\");\n        fil.setAttribute(\"x\", \"0%\");\n        fil.setAttribute(\"y\", \"0%\");\n        fil.setAttribute(\"width\", \"100%\");\n        fil.setAttribute(\"height\", \"100%\");\n      }\n      return fil;\n    }\n    function createAlphaToLuminanceFilter() {\n      var feColorMatrix = createNS(\"feColorMatrix\");\n      feColorMatrix.setAttribute(\"type\", \"matrix\");\n      feColorMatrix.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n      feColorMatrix.setAttribute(\"values\", \"0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1\");\n      return feColorMatrix;\n    }\n    return ob;\n  }();\n  const featureSupport = function () {\n    var ob = {\n      maskType: true\n    };\n    if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\n      ob.maskType = false;\n    }\n    return ob;\n  }();\n  var registeredEffects = {};\n  var idPrefix = \"filter_result_\";\n  function SVGEffects(elem) {\n    var i;\n    var source = \"SourceGraphic\";\n    var len = elem.data.ef ? elem.data.ef.length : 0;\n    var filId = createElementID();\n    var fil = filtersFactory.createFilter(filId, true);\n    var count = 0;\n    this.filters = [];\n    var filterManager;\n    for (i = 0; i < len; i += 1) {\n      filterManager = null;\n      var type = elem.data.ef[i].ty;\n      if (registeredEffects[type]) {\n        var Effect = registeredEffects[type].effect;\n        filterManager = new Effect(fil, elem.effectsManager.effectElements[i], elem, idPrefix + count, source);\n        source = idPrefix + count;\n        if (registeredEffects[type].countsAsEffect) {\n          count += 1;\n        }\n      }\n      if (filterManager) {\n        this.filters.push(filterManager);\n      }\n    }\n    if (count) {\n      elem.globalData.defs.appendChild(fil);\n      elem.layerElement.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + filId + \")\");\n    }\n    if (this.filters.length) {\n      elem.addRenderableComponent(this);\n    }\n  }\n  SVGEffects.prototype.renderFrame = function (_isFirstFrame) {\n    var i;\n    var len = this.filters.length;\n    for (i = 0; i < len; i += 1) {\n      this.filters[i].renderFrame(_isFirstFrame);\n    }\n  };\n  function SVGBaseElement() {}\n  SVGBaseElement.prototype = {\n    initRendererElement: function () {\n      this.layerElement = createNS(\"g\");\n    },\n    createContainerElements: function () {\n      this.matteElement = createNS(\"g\");\n      this.transformedElement = this.layerElement;\n      this.maskedElement = this.layerElement;\n      this._sizeChanged = false;\n      var layerElementParent = null;\n      var filId;\n      var fil;\n      var gg;\n      if (this.data.td) {\n        if (this.data.td == 3 || this.data.td == 1) {\n          var masker = createNS(\"mask\");\n          masker.setAttribute(\"id\", this.layerId);\n          masker.setAttribute(\"mask-type\", this.data.td == 3 ? \"luminance\" : \"alpha\");\n          masker.appendChild(this.layerElement);\n          layerElementParent = masker;\n          this.globalData.defs.appendChild(masker);\n          if (!featureSupport.maskType && this.data.td == 1) {\n            masker.setAttribute(\"mask-type\", \"luminance\");\n            filId = createElementID();\n            fil = filtersFactory.createFilter(filId);\n            this.globalData.defs.appendChild(fil);\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS(\"g\");\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            masker.appendChild(gg);\n            gg.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + filId + \")\");\n          }\n        } else if (this.data.td == 2) {\n          var maskGroup = createNS(\"mask\");\n          maskGroup.setAttribute(\"id\", this.layerId);\n          maskGroup.setAttribute(\"mask-type\", \"alpha\");\n          var maskGrouper = createNS(\"g\");\n          maskGroup.appendChild(maskGrouper);\n          filId = createElementID();\n          fil = filtersFactory.createFilter(filId);\n          var feCTr = createNS(\"feComponentTransfer\");\n          feCTr.setAttribute(\"in\", \"SourceGraphic\");\n          fil.appendChild(feCTr);\n          var feFunc = createNS(\"feFuncA\");\n          feFunc.setAttribute(\"type\", \"table\");\n          feFunc.setAttribute(\"tableValues\", \"1.0 0.0\");\n          feCTr.appendChild(feFunc);\n          this.globalData.defs.appendChild(fil);\n          var alphaRect = createNS(\"rect\");\n          alphaRect.setAttribute(\"width\", this.comp.data.w);\n          alphaRect.setAttribute(\"height\", this.comp.data.h);\n          alphaRect.setAttribute(\"x\", \"0\");\n          alphaRect.setAttribute(\"y\", \"0\");\n          alphaRect.setAttribute(\"fill\", \"#ffffff\");\n          alphaRect.setAttribute(\"opacity\", \"0\");\n          maskGrouper.setAttribute(\"filter\", \"url(\" + getLocationHref() + \"#\" + filId + \")\");\n          maskGrouper.appendChild(alphaRect);\n          maskGrouper.appendChild(this.layerElement);\n          layerElementParent = maskGrouper;\n          if (!featureSupport.maskType) {\n            maskGroup.setAttribute(\"mask-type\", \"luminance\");\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\n            gg = createNS(\"g\");\n            maskGrouper.appendChild(alphaRect);\n            gg.appendChild(this.layerElement);\n            layerElementParent = gg;\n            maskGrouper.appendChild(gg);\n          }\n          this.globalData.defs.appendChild(maskGroup);\n        }\n      } else if (this.data.tt) {\n        this.matteElement.appendChild(this.layerElement);\n        layerElementParent = this.matteElement;\n        this.baseElement = this.matteElement;\n      } else {\n        this.baseElement = this.layerElement;\n      }\n      if (this.data.ln) {\n        this.layerElement.setAttribute(\"id\", this.data.ln);\n      }\n      if (this.data.cl) {\n        this.layerElement.setAttribute(\"class\", this.data.cl);\n      }\n      if (this.data.ty === 0 && !this.data.hd) {\n        var cp = createNS(\"clipPath\");\n        var pt = createNS(\"path\");\n        pt.setAttribute(\"d\", \"M0,0 L\" + this.data.w + \",0 L\" + this.data.w + \",\" + this.data.h + \" L0,\" + this.data.h + \"z\");\n        var clipId = createElementID();\n        cp.setAttribute(\"id\", clipId);\n        cp.appendChild(pt);\n        this.globalData.defs.appendChild(cp);\n        if (this.checkMasks()) {\n          var cpGroup = createNS(\"g\");\n          cpGroup.setAttribute(\"clip-path\", \"url(\" + getLocationHref() + \"#\" + clipId + \")\");\n          cpGroup.appendChild(this.layerElement);\n          this.transformedElement = cpGroup;\n          if (layerElementParent) {\n            layerElementParent.appendChild(this.transformedElement);\n          } else {\n            this.baseElement = this.transformedElement;\n          }\n        } else {\n          this.layerElement.setAttribute(\"clip-path\", \"url(\" + getLocationHref() + \"#\" + clipId + \")\");\n        }\n      }\n      if (this.data.bm !== 0) {\n        this.setBlendMode();\n      }\n    },\n    renderElement: function () {\n      if (this.finalTransform._matMdf) {\n        this.transformedElement.setAttribute(\"transform\", this.finalTransform.mat.to2dCSS());\n      }\n      if (this.finalTransform._opMdf) {\n        this.transformedElement.setAttribute(\"opacity\", this.finalTransform.mProp.o.v);\n      }\n    },\n    destroyBaseElement: function () {\n      this.layerElement = null;\n      this.matteElement = null;\n      this.maskManager.destroy();\n    },\n    getBaseElement: function () {\n      if (this.data.hd) {\n        return null;\n      }\n      return this.baseElement;\n    },\n    createRenderableComponents: function () {\n      this.maskManager = new MaskElement(this.data, this, this.globalData);\n      this.renderableEffectsManager = new SVGEffects(this);\n    },\n    setMatte: function (id) {\n      if (!this.matteElement) {\n        return;\n      }\n      this.matteElement.setAttribute(\"mask\", \"url(\" + getLocationHref() + \"#\" + id + \")\");\n    }\n  };\n  function HierarchyElement() {}\n  HierarchyElement.prototype = {\n    /**\n     * @function\n     * Initializes hierarchy properties\n     *\n     */\n    initHierarchy: function () {\n      this.hierarchy = [];\n      this._isParent = false;\n      this.checkParenting();\n    },\n    /**\n     * @function\n     * Sets layer's hierarchy.\n     * @param {array} hierarch\n     * layer's parent list\n     *\n     */\n    setHierarchy: function (hierarchy) {\n      this.hierarchy = hierarchy;\n    },\n    /**\n     * @function\n     * Sets layer as parent.\n     *\n     */\n    setAsParent: function () {\n      this._isParent = true;\n    },\n    /**\n     * @function\n     * Searches layer's parenting chain\n     *\n     */\n    checkParenting: function () {\n      if (this.data.parent !== void 0) {\n        this.comp.buildElementParenting(this, this.data.parent, []);\n      }\n    }\n  };\n  function RenderableDOMElement() {}\n  (function () {\n    var _prototype = {\n      initElement: function (data, globalData, comp) {\n        this.initFrame();\n        this.initBaseData(data, globalData, comp);\n        this.initTransform(data, globalData, comp);\n        this.initHierarchy();\n        this.initRenderable();\n        this.initRendererElement();\n        this.createContainerElements();\n        this.createRenderableComponents();\n        this.createContent();\n        this.hide();\n      },\n      hide: function () {\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n          var elem = this.baseElement || this.layerElement;\n          elem.style.display = \"none\";\n          this.hidden = true;\n        }\n      },\n      show: function () {\n        if (this.isInRange && !this.isTransparent) {\n          if (!this.data.hd) {\n            var elem = this.baseElement || this.layerElement;\n            elem.style.display = \"block\";\n          }\n          this.hidden = false;\n          this._isFirstFrame = true;\n        }\n      },\n      renderFrame: function () {\n        if (this.data.hd || this.hidden) {\n          return;\n        }\n        this.renderTransform();\n        this.renderRenderable();\n        this.renderElement();\n        this.renderInnerContent();\n        if (this._isFirstFrame) {\n          this._isFirstFrame = false;\n        }\n      },\n      renderInnerContent: function () {},\n      prepareFrame: function (num) {\n        this._mdf = false;\n        this.prepareRenderableFrame(num);\n        this.prepareProperties(num, this.isInRange);\n        this.checkTransparency();\n      },\n      destroy: function () {\n        this.innerElem = null;\n        this.destroyBaseElement();\n      }\n    };\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\n  })();\n  function IImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.initElement(data, globalData, comp);\n    this.sourceRect = {\n      top: 0,\n      left: 0,\n      width: this.assetData.w,\n      height: this.assetData.h\n    };\n  }\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);\n  IImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\n    this.innerElem = createNS(\"image\");\n    this.innerElem.setAttribute(\"width\", this.assetData.w + \"px\");\n    this.innerElem.setAttribute(\"height\", this.assetData.h + \"px\");\n    this.innerElem.setAttribute(\"preserveAspectRatio\", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\n    this.innerElem.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", assetPath);\n    this.layerElement.appendChild(this.innerElem);\n  };\n  IImageElement.prototype.sourceRectAtTime = function () {\n    return this.sourceRect;\n  };\n  function ProcessedElement(element, position) {\n    this.elem = element;\n    this.pos = position;\n  }\n  function IShapeElement() {}\n  IShapeElement.prototype = {\n    addShapeToModifiers: function (data) {\n      var i;\n      var len = this.shapeModifiers.length;\n      for (i = 0; i < len; i += 1) {\n        this.shapeModifiers[i].addShape(data);\n      }\n    },\n    isShapeInAnimatedModifiers: function (data) {\n      var i = 0;\n      var len = this.shapeModifiers.length;\n      while (i < len) {\n        if (this.shapeModifiers[i].isAnimatedWithShape(data)) {\n          return true;\n        }\n      }\n      return false;\n    },\n    renderModifiers: function () {\n      if (!this.shapeModifiers.length) {\n        return;\n      }\n      var i;\n      var len = this.shapes.length;\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].sh.reset();\n      }\n      len = this.shapeModifiers.length;\n      var shouldBreakProcess;\n      for (i = len - 1; i >= 0; i -= 1) {\n        shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame);\n        if (shouldBreakProcess) {\n          break;\n        }\n      }\n    },\n    searchProcessedElement: function (elem) {\n      var elements = this.processedElements;\n      var i = 0;\n      var len = elements.length;\n      while (i < len) {\n        if (elements[i].elem === elem) {\n          return elements[i].pos;\n        }\n        i += 1;\n      }\n      return 0;\n    },\n    addProcessedElement: function (elem, pos) {\n      var elements = this.processedElements;\n      var i = elements.length;\n      while (i) {\n        i -= 1;\n        if (elements[i].elem === elem) {\n          elements[i].pos = pos;\n          return;\n        }\n      }\n      elements.push(new ProcessedElement(elem, pos));\n    },\n    prepareFrame: function (num) {\n      this.prepareRenderableFrame(num);\n      this.prepareProperties(num, this.isInRange);\n    }\n  };\n  const lineCapEnum = {\n    1: \"butt\",\n    2: \"round\",\n    3: \"square\"\n  };\n  const lineJoinEnum = {\n    1: \"miter\",\n    2: \"round\",\n    3: \"bevel\"\n  };\n  function SVGShapeData(transformers, level, shape) {\n    this.caches = [];\n    this.styles = [];\n    this.transformers = transformers;\n    this.lStr = \"\";\n    this.sh = shape;\n    this.lvl = level;\n    this._isAnimated = !!shape.k;\n    var i = 0;\n    var len = transformers.length;\n    while (i < len) {\n      if (transformers[i].mProps.dynamicProperties.length) {\n        this._isAnimated = true;\n        break;\n      }\n      i += 1;\n    }\n  }\n  SVGShapeData.prototype.setAsAnimated = function () {\n    this._isAnimated = true;\n  };\n  function SVGStyleData(data, level) {\n    this.data = data;\n    this.type = data.ty;\n    this.d = \"\";\n    this.lvl = level;\n    this._mdf = false;\n    this.closed = data.hd === true;\n    this.pElem = createNS(\"path\");\n    this.msElem = null;\n  }\n  SVGStyleData.prototype.reset = function () {\n    this.d = \"\";\n    this._mdf = false;\n  };\n  function DashProperty(elem, data, renderer, container) {\n    this.elem = elem;\n    this.frameId = -1;\n    this.dataProps = createSizedArray(data.length);\n    this.renderer = renderer;\n    this.k = false;\n    this.dashStr = \"\";\n    this.dashArray = createTypedArray(\"float32\", data.length ? data.length - 1 : 0);\n    this.dashoffset = createTypedArray(\"float32\", 1);\n    this.initDynamicPropertyContainer(container);\n    var i;\n    var len = data.length || 0;\n    var prop;\n    for (i = 0; i < len; i += 1) {\n      prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this);\n      this.k = prop.k || this.k;\n      this.dataProps[i] = {\n        n: data[i].n,\n        p: prop\n      };\n    }\n    if (!this.k) {\n      this.getValue(true);\n    }\n    this._isAnimated = this.k;\n  }\n  DashProperty.prototype.getValue = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return;\n    }\n    this.frameId = this.elem.globalData.frameId;\n    this.iterateDynamicProperties();\n    this._mdf = this._mdf || forceRender;\n    if (this._mdf) {\n      var i = 0;\n      var len = this.dataProps.length;\n      if (this.renderer === \"svg\") {\n        this.dashStr = \"\";\n      }\n      for (i = 0; i < len; i += 1) {\n        if (this.dataProps[i].n !== \"o\") {\n          if (this.renderer === \"svg\") {\n            this.dashStr += \" \" + this.dataProps[i].p.v;\n          } else {\n            this.dashArray[i] = this.dataProps[i].p.v;\n          }\n        } else {\n          this.dashoffset[0] = this.dataProps[i].p.v;\n        }\n      }\n    }\n  };\n  extendPrototype([DynamicPropertyContainer], DashProperty);\n  function SVGStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\n    this.d = new DashProperty(elem, data.d || {}, \"svg\", this);\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\n    this.style = styleOb;\n    this._isAnimated = !!this._isAnimated;\n  }\n  extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\n  function SVGFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\n    this.style = styleOb;\n  }\n  extendPrototype([DynamicPropertyContainer], SVGFillStyleData);\n  function SVGNoStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.style = styleOb;\n  }\n  extendPrototype([DynamicPropertyContainer], SVGNoStyleData);\n  function GradientProperty(elem, data, container) {\n    this.data = data;\n    this.c = createTypedArray(\"uint8c\", data.p * 4);\n    var cLength = data.k.k[0].s ? data.k.k[0].s.length - data.p * 4 : data.k.k.length - data.p * 4;\n    this.o = createTypedArray(\"float32\", cLength);\n    this._cmdf = false;\n    this._omdf = false;\n    this._collapsable = this.checkCollapsable();\n    this._hasOpacity = cLength;\n    this.initDynamicPropertyContainer(container);\n    this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this);\n    this.k = this.prop.k;\n    this.getValue(true);\n  }\n  GradientProperty.prototype.comparePoints = function (values, points) {\n    var i = 0;\n    var len = this.o.length / 2;\n    var diff;\n    while (i < len) {\n      diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);\n      if (diff > 0.01) {\n        return false;\n      }\n      i += 1;\n    }\n    return true;\n  };\n  GradientProperty.prototype.checkCollapsable = function () {\n    if (this.o.length / 2 !== this.c.length / 4) {\n      return false;\n    }\n    if (this.data.k.k[0].s) {\n      var i = 0;\n      var len = this.data.k.k.length;\n      while (i < len) {\n        if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\n          return false;\n        }\n        i += 1;\n      }\n    } else if (!this.comparePoints(this.data.k.k, this.data.p)) {\n      return false;\n    }\n    return true;\n  };\n  GradientProperty.prototype.getValue = function (forceRender) {\n    this.prop.getValue();\n    this._mdf = false;\n    this._cmdf = false;\n    this._omdf = false;\n    if (this.prop._mdf || forceRender) {\n      var i;\n      var len = this.data.p * 4;\n      var mult;\n      var val;\n      for (i = 0; i < len; i += 1) {\n        mult = i % 4 === 0 ? 100 : 255;\n        val = Math.round(this.prop.v[i] * mult);\n        if (this.c[i] !== val) {\n          this.c[i] = val;\n          this._cmdf = !forceRender;\n        }\n      }\n      if (this.o.length) {\n        len = this.prop.v.length;\n        for (i = this.data.p * 4; i < len; i += 1) {\n          mult = i % 2 === 0 ? 100 : 1;\n          val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];\n          if (this.o[i - this.data.p * 4] !== val) {\n            this.o[i - this.data.p * 4] = val;\n            this._omdf = !forceRender;\n          }\n        }\n      }\n      this._mdf = !forceRender;\n    }\n  };\n  extendPrototype([DynamicPropertyContainer], GradientProperty);\n  function SVGGradientFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.initGradientData(elem, data, styleOb);\n  }\n  SVGGradientFillStyleData.prototype.initGradientData = function (elem, data, styleOb) {\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\n    this.s = PropertyFactory.getProp(elem, data.s, 1, null, this);\n    this.e = PropertyFactory.getProp(elem, data.e, 1, null, this);\n    this.h = PropertyFactory.getProp(elem, data.h || {\n      k: 0\n    }, 0, 0.01, this);\n    this.a = PropertyFactory.getProp(elem, data.a || {\n      k: 0\n    }, 0, degToRads, this);\n    this.g = new GradientProperty(elem, data.g, this);\n    this.style = styleOb;\n    this.stops = [];\n    this.setGradientData(styleOb.pElem, data);\n    this.setGradientOpacity(data, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  };\n  SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data) {\n    var gradientId = createElementID();\n    var gfill = createNS(data.t === 1 ? \"linearGradient\" : \"radialGradient\");\n    gfill.setAttribute(\"id\", gradientId);\n    gfill.setAttribute(\"spreadMethod\", \"pad\");\n    gfill.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n    var stops = [];\n    var stop;\n    var j;\n    var jLen;\n    jLen = data.g.p * 4;\n    for (j = 0; j < jLen; j += 4) {\n      stop = createNS(\"stop\");\n      gfill.appendChild(stop);\n      stops.push(stop);\n    }\n    pathElement.setAttribute(data.ty === \"gf\" ? \"fill\" : \"stroke\", \"url(\" + getLocationHref() + \"#\" + gradientId + \")\");\n    this.gf = gfill;\n    this.cst = stops;\n  };\n  SVGGradientFillStyleData.prototype.setGradientOpacity = function (data, styleOb) {\n    if (this.g._hasOpacity && !this.g._collapsable) {\n      var stop;\n      var j;\n      var jLen;\n      var mask = createNS(\"mask\");\n      var maskElement = createNS(\"path\");\n      mask.appendChild(maskElement);\n      var opacityId = createElementID();\n      var maskId = createElementID();\n      mask.setAttribute(\"id\", maskId);\n      var opFill = createNS(data.t === 1 ? \"linearGradient\" : \"radialGradient\");\n      opFill.setAttribute(\"id\", opacityId);\n      opFill.setAttribute(\"spreadMethod\", \"pad\");\n      opFill.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n      jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\n      var stops = this.stops;\n      for (j = data.g.p * 4; j < jLen; j += 2) {\n        stop = createNS(\"stop\");\n        stop.setAttribute(\"stop-color\", \"rgb(255,255,255)\");\n        opFill.appendChild(stop);\n        stops.push(stop);\n      }\n      maskElement.setAttribute(data.ty === \"gf\" ? \"fill\" : \"stroke\", \"url(\" + getLocationHref() + \"#\" + opacityId + \")\");\n      if (data.ty === \"gs\") {\n        maskElement.setAttribute(\"stroke-linecap\", lineCapEnum[data.lc || 2]);\n        maskElement.setAttribute(\"stroke-linejoin\", lineJoinEnum[data.lj || 2]);\n        if (data.lj === 1) {\n          maskElement.setAttribute(\"stroke-miterlimit\", data.ml);\n        }\n      }\n      this.of = opFill;\n      this.ms = mask;\n      this.ost = stops;\n      this.maskId = maskId;\n      styleOb.msElem = maskElement;\n    }\n  };\n  extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\n  function SVGGradientStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem);\n    this.getValue = this.iterateDynamicProperties;\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\n    this.d = new DashProperty(elem, data.d || {}, \"svg\", this);\n    this.initGradientData(elem, data, styleOb);\n    this._isAnimated = !!this._isAnimated;\n  }\n  extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\n  function ShapeGroupData() {\n    this.it = [];\n    this.prevViewData = [];\n    this.gr = createNS(\"g\");\n  }\n  function SVGTransformData(mProps, op, container) {\n    this.transform = {\n      mProps,\n      op,\n      container\n    };\n    this.elements = [];\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\n  }\n  const buildShapeString = function (pathNodes, length, closed, mat) {\n    if (length === 0) {\n      return \"\";\n    }\n    var _o = pathNodes.o;\n    var _i = pathNodes.i;\n    var _v = pathNodes.v;\n    var i;\n    var shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n    for (i = 1; i < length; i += 1) {\n      shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\n    }\n    if (closed && length) {\n      shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\n      shapeString += \"z\";\n    }\n    return shapeString;\n  };\n  const SVGElementsRenderer = function () {\n    var _identityMatrix = new Matrix();\n    var _matrixHelper = new Matrix();\n    var ob = {\n      createRenderFunction\n    };\n    function createRenderFunction(data) {\n      switch (data.ty) {\n        case \"fl\":\n          return renderFill;\n        case \"gf\":\n          return renderGradient;\n        case \"gs\":\n          return renderGradientStroke;\n        case \"st\":\n          return renderStroke;\n        case \"sh\":\n        case \"el\":\n        case \"rc\":\n        case \"sr\":\n          return renderPath;\n        case \"tr\":\n          return renderContentTransform;\n        case \"no\":\n          return renderNoop;\n        default:\n          return null;\n      }\n    }\n    function renderContentTransform(styleData, itemData, isFirstFrame) {\n      if (isFirstFrame || itemData.transform.op._mdf) {\n        itemData.transform.container.setAttribute(\"opacity\", itemData.transform.op.v);\n      }\n      if (isFirstFrame || itemData.transform.mProps._mdf) {\n        itemData.transform.container.setAttribute(\"transform\", itemData.transform.mProps.v.to2dCSS());\n      }\n    }\n    function renderNoop() {}\n    function renderPath(styleData, itemData, isFirstFrame) {\n      var j;\n      var jLen;\n      var pathStringTransformed;\n      var redraw;\n      var pathNodes;\n      var l;\n      var lLen = itemData.styles.length;\n      var lvl = itemData.lvl;\n      var paths;\n      var mat;\n      var props;\n      var iterations;\n      var k;\n      for (l = 0; l < lLen; l += 1) {\n        redraw = itemData.sh._mdf || isFirstFrame;\n        if (itemData.styles[l].lvl < lvl) {\n          mat = _matrixHelper.reset();\n          iterations = lvl - itemData.styles[l].lvl;\n          k = itemData.transformers.length - 1;\n          while (!redraw && iterations > 0) {\n            redraw = itemData.transformers[k].mProps._mdf || redraw;\n            iterations -= 1;\n            k -= 1;\n          }\n          if (redraw) {\n            iterations = lvl - itemData.styles[l].lvl;\n            k = itemData.transformers.length - 1;\n            while (iterations > 0) {\n              props = itemData.transformers[k].mProps.v.props;\n              mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n              iterations -= 1;\n              k -= 1;\n            }\n          }\n        } else {\n          mat = _identityMatrix;\n        }\n        paths = itemData.sh.paths;\n        jLen = paths._length;\n        if (redraw) {\n          pathStringTransformed = \"\";\n          for (j = 0; j < jLen; j += 1) {\n            pathNodes = paths.shapes[j];\n            if (pathNodes && pathNodes._length) {\n              pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\n            }\n          }\n          itemData.caches[l] = pathStringTransformed;\n        } else {\n          pathStringTransformed = itemData.caches[l];\n        }\n        itemData.styles[l].d += styleData.hd === true ? \"\" : pathStringTransformed;\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\n      }\n    }\n    function renderFill(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n      if (itemData.c._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\"fill\", \"rgb(\" + bmFloor(itemData.c.v[0]) + \",\" + bmFloor(itemData.c.v[1]) + \",\" + bmFloor(itemData.c.v[2]) + \")\");\n      }\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\"fill-opacity\", itemData.o.v);\n      }\n    }\n    function renderGradientStroke(styleData, itemData, isFirstFrame) {\n      renderGradient(styleData, itemData, isFirstFrame);\n      renderStroke(styleData, itemData, isFirstFrame);\n    }\n    function renderGradient(styleData, itemData, isFirstFrame) {\n      var gfill = itemData.gf;\n      var hasOpacity = itemData.g._hasOpacity;\n      var pt1 = itemData.s.v;\n      var pt2 = itemData.e.v;\n      if (itemData.o._mdf || isFirstFrame) {\n        var attr = styleData.ty === \"gf\" ? \"fill-opacity\" : \"stroke-opacity\";\n        itemData.style.pElem.setAttribute(attr, itemData.o.v);\n      }\n      if (itemData.s._mdf || isFirstFrame) {\n        var attr1 = styleData.t === 1 ? \"x1\" : \"cx\";\n        var attr2 = attr1 === \"x1\" ? \"y1\" : \"cy\";\n        gfill.setAttribute(attr1, pt1[0]);\n        gfill.setAttribute(attr2, pt1[1]);\n        if (hasOpacity && !itemData.g._collapsable) {\n          itemData.of.setAttribute(attr1, pt1[0]);\n          itemData.of.setAttribute(attr2, pt1[1]);\n        }\n      }\n      var stops;\n      var i;\n      var len;\n      var stop;\n      if (itemData.g._cmdf || isFirstFrame) {\n        stops = itemData.cst;\n        var cValues = itemData.g.c;\n        len = stops.length;\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n          stop.setAttribute(\"offset\", cValues[i * 4] + \"%\");\n          stop.setAttribute(\"stop-color\", \"rgb(\" + cValues[i * 4 + 1] + \",\" + cValues[i * 4 + 2] + \",\" + cValues[i * 4 + 3] + \")\");\n        }\n      }\n      if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\n        var oValues = itemData.g.o;\n        if (itemData.g._collapsable) {\n          stops = itemData.cst;\n        } else {\n          stops = itemData.ost;\n        }\n        len = stops.length;\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i];\n          if (!itemData.g._collapsable) {\n            stop.setAttribute(\"offset\", oValues[i * 2] + \"%\");\n          }\n          stop.setAttribute(\"stop-opacity\", oValues[i * 2 + 1]);\n        }\n      }\n      if (styleData.t === 1) {\n        if (itemData.e._mdf || isFirstFrame) {\n          gfill.setAttribute(\"x2\", pt2[0]);\n          gfill.setAttribute(\"y2\", pt2[1]);\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute(\"x2\", pt2[0]);\n            itemData.of.setAttribute(\"y2\", pt2[1]);\n          }\n        }\n      } else {\n        var rad;\n        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          gfill.setAttribute(\"r\", rad);\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute(\"r\", rad);\n          }\n        }\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\n          if (!rad) {\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n          }\n          var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n          var percent = itemData.h.v;\n          if (percent >= 1) {\n            percent = 0.99;\n          } else if (percent <= -1) {\n            percent = -0.99;\n          }\n          var dist = rad * percent;\n          var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n          var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n          gfill.setAttribute(\"fx\", x);\n          gfill.setAttribute(\"fy\", y);\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute(\"fx\", x);\n            itemData.of.setAttribute(\"fy\", y);\n          }\n        }\n      }\n    }\n    function renderStroke(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style;\n      var d = itemData.d;\n      if (d && (d._mdf || isFirstFrame) && d.dashStr) {\n        styleElem.pElem.setAttribute(\"stroke-dasharray\", d.dashStr);\n        styleElem.pElem.setAttribute(\"stroke-dashoffset\", d.dashoffset[0]);\n      }\n      if (itemData.c && (itemData.c._mdf || isFirstFrame)) {\n        styleElem.pElem.setAttribute(\"stroke\", \"rgb(\" + bmFloor(itemData.c.v[0]) + \",\" + bmFloor(itemData.c.v[1]) + \",\" + bmFloor(itemData.c.v[2]) + \")\");\n      }\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\"stroke-opacity\", itemData.o.v);\n      }\n      if (itemData.w._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\"stroke-width\", itemData.w.v);\n        if (styleElem.msElem) {\n          styleElem.msElem.setAttribute(\"stroke-width\", itemData.w.v);\n        }\n      }\n    }\n    return ob;\n  }();\n  function SVGShapeElement(data, globalData, comp) {\n    this.shapes = [];\n    this.shapesData = data.shapes;\n    this.stylesList = [];\n    this.shapeModifiers = [];\n    this.itemsData = [];\n    this.processedElements = [];\n    this.animatedContents = [];\n    this.initElement(data, globalData, comp);\n    this.prevViewData = [];\n  }\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);\n  SVGShapeElement.prototype.initSecondaryElement = function () {};\n  SVGShapeElement.prototype.identityMatrix = new Matrix();\n  SVGShapeElement.prototype.buildExpressionInterface = function () {};\n  SVGShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n  };\n  SVGShapeElement.prototype.filterUniqueShapes = function () {\n    var i;\n    var len = this.shapes.length;\n    var shape;\n    var j;\n    var jLen = this.stylesList.length;\n    var style;\n    var tempShapes = [];\n    var areAnimated = false;\n    for (j = 0; j < jLen; j += 1) {\n      style = this.stylesList[j];\n      areAnimated = false;\n      tempShapes.length = 0;\n      for (i = 0; i < len; i += 1) {\n        shape = this.shapes[i];\n        if (shape.styles.indexOf(style) !== -1) {\n          tempShapes.push(shape);\n          areAnimated = shape._isAnimated || areAnimated;\n        }\n      }\n      if (tempShapes.length > 1 && areAnimated) {\n        this.setShapesAsAnimated(tempShapes);\n      }\n    }\n  };\n  SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {\n    var i;\n    var len = shapes.length;\n    for (i = 0; i < len; i += 1) {\n      shapes[i].setAsAnimated();\n    }\n  };\n  SVGShapeElement.prototype.createStyleElement = function (data, level) {\n    var elementData;\n    var styleOb = new SVGStyleData(data, level);\n    var pathElement = styleOb.pElem;\n    if (data.ty === \"st\") {\n      elementData = new SVGStrokeStyleData(this, data, styleOb);\n    } else if (data.ty === \"fl\") {\n      elementData = new SVGFillStyleData(this, data, styleOb);\n    } else if (data.ty === \"gf\" || data.ty === \"gs\") {\n      var GradientConstructor = data.ty === \"gf\" ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\n      elementData = new GradientConstructor(this, data, styleOb);\n      this.globalData.defs.appendChild(elementData.gf);\n      if (elementData.maskId) {\n        this.globalData.defs.appendChild(elementData.ms);\n        this.globalData.defs.appendChild(elementData.of);\n        pathElement.setAttribute(\"mask\", \"url(\" + getLocationHref() + \"#\" + elementData.maskId + \")\");\n      }\n    } else if (data.ty === \"no\") {\n      elementData = new SVGNoStyleData(this, data, styleOb);\n    }\n    if (data.ty === \"st\" || data.ty === \"gs\") {\n      pathElement.setAttribute(\"stroke-linecap\", lineCapEnum[data.lc || 2]);\n      pathElement.setAttribute(\"stroke-linejoin\", lineJoinEnum[data.lj || 2]);\n      pathElement.setAttribute(\"fill-opacity\", \"0\");\n      if (data.lj === 1) {\n        pathElement.setAttribute(\"stroke-miterlimit\", data.ml);\n      }\n    }\n    if (data.r === 2) {\n      pathElement.setAttribute(\"fill-rule\", \"evenodd\");\n    }\n    if (data.ln) {\n      pathElement.setAttribute(\"id\", data.ln);\n    }\n    if (data.cl) {\n      pathElement.setAttribute(\"class\", data.cl);\n    }\n    if (data.bm) {\n      pathElement.style[\"mix-blend-mode\"] = getBlendMode(data.bm);\n    }\n    this.stylesList.push(styleOb);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n  SVGShapeElement.prototype.createGroupElement = function (data) {\n    var elementData = new ShapeGroupData();\n    if (data.ln) {\n      elementData.gr.setAttribute(\"id\", data.ln);\n    }\n    if (data.cl) {\n      elementData.gr.setAttribute(\"class\", data.cl);\n    }\n    if (data.bm) {\n      elementData.gr.style[\"mix-blend-mode\"] = getBlendMode(data.bm);\n    }\n    return elementData;\n  };\n  SVGShapeElement.prototype.createTransformElement = function (data, container) {\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this);\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n  SVGShapeElement.prototype.createShapeElement = function (data, ownTransformers, level) {\n    var ty = 4;\n    if (data.ty === \"rc\") {\n      ty = 5;\n    } else if (data.ty === \"el\") {\n      ty = 6;\n    } else if (data.ty === \"sr\") {\n      ty = 7;\n    }\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this);\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    this.addToAnimatedContents(data, elementData);\n    return elementData;\n  };\n  SVGShapeElement.prototype.addToAnimatedContents = function (data, element) {\n    var i = 0;\n    var len = this.animatedContents.length;\n    while (i < len) {\n      if (this.animatedContents[i].element === element) {\n        return;\n      }\n      i += 1;\n    }\n    this.animatedContents.push({\n      fn: SVGElementsRenderer.createRenderFunction(data),\n      element,\n      data\n    });\n  };\n  SVGShapeElement.prototype.setElementStyles = function (elementData) {\n    var arr = elementData.styles;\n    var j;\n    var jLen = this.stylesList.length;\n    for (j = 0; j < jLen; j += 1) {\n      if (!this.stylesList[j].closed) {\n        arr.push(this.stylesList[j]);\n      }\n    }\n  };\n  SVGShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i;\n    var len = this.itemsData.length;\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\n    this.filterUniqueShapes();\n    len = this.dynamicProperties.length;\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n    this.renderModifiers();\n  };\n  SVGShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, container, level, transformers, render) {\n    var ownTransformers = [].concat(transformers);\n    var i;\n    var len = arr.length - 1;\n    var j;\n    var jLen;\n    var ownStyles = [];\n    var ownModifiers = [];\n    var currentTransform;\n    var modifier;\n    var processedPos;\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n      if (!processedPos) {\n        arr[i]._render = render;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n      if (arr[i].ty === \"fl\" || arr[i].ty === \"st\" || arr[i].ty === \"gf\" || arr[i].ty === \"gs\" || arr[i].ty === \"no\") {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], level);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n        if (arr[i]._render) {\n          if (itemsData[i].style.pElem.parentNode !== container) {\n            container.appendChild(itemsData[i].style.pElem);\n          }\n        }\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty === \"gr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);\n        if (arr[i]._render) {\n          if (itemsData[i].gr.parentNode !== container) {\n            container.appendChild(itemsData[i].gr);\n          }\n        }\n      } else if (arr[i].ty === \"tr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createTransformElement(arr[i], container);\n        }\n        currentTransform = itemsData[i].transform;\n        ownTransformers.push(currentTransform);\n      } else if (arr[i].ty === \"sh\" || arr[i].ty === \"rc\" || arr[i].ty === \"el\" || arr[i].ty === \"sr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\n        }\n        this.setElementStyles(itemsData[i]);\n      } else if (arr[i].ty === \"tm\" || arr[i].ty === \"rd\" || arr[i].ty === \"ms\" || arr[i].ty === \"pb\") {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty === \"rp\") {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          render = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n        ownModifiers.push(modifier);\n      }\n      this.addProcessedElement(arr[i], i + 1);\n    }\n    len = ownStyles.length;\n    for (i = 0; i < len; i += 1) {\n      ownStyles[i].closed = true;\n    }\n    len = ownModifiers.length;\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n  SVGShapeElement.prototype.renderInnerContent = function () {\n    this.renderModifiers();\n    var i;\n    var len = this.stylesList.length;\n    for (i = 0; i < len; i += 1) {\n      this.stylesList[i].reset();\n    }\n    this.renderShape();\n    for (i = 0; i < len; i += 1) {\n      if (this.stylesList[i]._mdf || this._isFirstFrame) {\n        if (this.stylesList[i].msElem) {\n          this.stylesList[i].msElem.setAttribute(\"d\", this.stylesList[i].d);\n          this.stylesList[i].d = \"M0 0\" + this.stylesList[i].d;\n        }\n        this.stylesList[i].pElem.setAttribute(\"d\", this.stylesList[i].d || \"M0 0\");\n      }\n    }\n  };\n  SVGShapeElement.prototype.renderShape = function () {\n    var i;\n    var len = this.animatedContents.length;\n    var animatedContent;\n    for (i = 0; i < len; i += 1) {\n      animatedContent = this.animatedContents[i];\n      if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\n        animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\n      }\n    }\n  };\n  SVGShapeElement.prototype.destroy = function () {\n    this.destroyBaseElement();\n    this.shapesData = null;\n    this.itemsData = null;\n  };\n  function LetterProps(o, sw, sc, fc, m, p) {\n    this.o = o;\n    this.sw = sw;\n    this.sc = sc;\n    this.fc = fc;\n    this.m = m;\n    this.p = p;\n    this._mdf = {\n      o: true,\n      sw: !!sw,\n      sc: !!sc,\n      fc: !!fc,\n      m: true,\n      p: true\n    };\n  }\n  LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\n    this._mdf.o = false;\n    this._mdf.sw = false;\n    this._mdf.sc = false;\n    this._mdf.fc = false;\n    this._mdf.m = false;\n    this._mdf.p = false;\n    var updated = false;\n    if (this.o !== o) {\n      this.o = o;\n      this._mdf.o = true;\n      updated = true;\n    }\n    if (this.sw !== sw) {\n      this.sw = sw;\n      this._mdf.sw = true;\n      updated = true;\n    }\n    if (this.sc !== sc) {\n      this.sc = sc;\n      this._mdf.sc = true;\n      updated = true;\n    }\n    if (this.fc !== fc) {\n      this.fc = fc;\n      this._mdf.fc = true;\n      updated = true;\n    }\n    if (this.m !== m) {\n      this.m = m;\n      this._mdf.m = true;\n      updated = true;\n    }\n    if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\n      this.p = p;\n      this._mdf.p = true;\n      updated = true;\n    }\n    return updated;\n  };\n  function TextProperty(elem, data) {\n    this._frameId = initialDefaultFrame;\n    this.pv = \"\";\n    this.v = \"\";\n    this.kf = false;\n    this._isFirstFrame = true;\n    this._mdf = false;\n    this.data = data;\n    this.elem = elem;\n    this.comp = this.elem.comp;\n    this.keysIndex = 0;\n    this.canResize = false;\n    this.minimumFontSize = 1;\n    this.effectsSequence = [];\n    this.currentData = {\n      ascent: 0,\n      boxWidth: this.defaultBoxWidth,\n      f: \"\",\n      fStyle: \"\",\n      fWeight: \"\",\n      fc: \"\",\n      j: \"\",\n      justifyOffset: \"\",\n      l: [],\n      lh: 0,\n      lineWidths: [],\n      ls: \"\",\n      of: \"\",\n      s: \"\",\n      sc: \"\",\n      sw: 0,\n      t: 0,\n      tr: 0,\n      sz: 0,\n      ps: null,\n      fillColorAnim: false,\n      strokeColorAnim: false,\n      strokeWidthAnim: false,\n      yOffset: 0,\n      finalSize: 0,\n      finalText: [],\n      finalLineHeight: 0,\n      __complete: false\n    };\n    this.copyData(this.currentData, this.data.d.k[0].s);\n    if (!this.searchProperty()) {\n      this.completeTextData(this.currentData);\n    }\n  }\n  TextProperty.prototype.defaultBoxWidth = [0, 0];\n  TextProperty.prototype.copyData = function (obj, data) {\n    for (var s in data) {\n      if (Object.prototype.hasOwnProperty.call(data, s)) {\n        obj[s] = data[s];\n      }\n    }\n    return obj;\n  };\n  TextProperty.prototype.setCurrentData = function (data) {\n    if (!data.__complete) {\n      this.completeTextData(data);\n    }\n    this.currentData = data;\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\n    this._mdf = true;\n  };\n  TextProperty.prototype.searchProperty = function () {\n    return this.searchKeyframes();\n  };\n  TextProperty.prototype.searchKeyframes = function () {\n    this.kf = this.data.d.k.length > 1;\n    if (this.kf) {\n      this.addEffect(this.getKeyframeValue.bind(this));\n    }\n    return this.kf;\n  };\n  TextProperty.prototype.addEffect = function (effectFunction) {\n    this.effectsSequence.push(effectFunction);\n    this.elem.addDynamicProperty(this);\n  };\n  TextProperty.prototype.getValue = function (_finalValue) {\n    if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\n      return;\n    }\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\n    var currentValue = this.currentData;\n    var currentIndex = this.keysIndex;\n    if (this.lock) {\n      this.setCurrentData(this.currentData);\n      return;\n    }\n    this.lock = true;\n    this._mdf = false;\n    var i;\n    var len = this.effectsSequence.length;\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\n    for (i = 0; i < len; i += 1) {\n      if (currentIndex !== this.keysIndex) {\n        finalValue = this.effectsSequence[i](finalValue, finalValue.t);\n      } else {\n        finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\n      }\n    }\n    if (currentValue !== finalValue) {\n      this.setCurrentData(finalValue);\n    }\n    this.v = this.currentData;\n    this.pv = this.v;\n    this.lock = false;\n    this.frameId = this.elem.globalData.frameId;\n  };\n  TextProperty.prototype.getKeyframeValue = function () {\n    var textKeys = this.data.d.k;\n    var frameNum = this.elem.comp.renderedFrame;\n    var i = 0;\n    var len = textKeys.length;\n    while (i <= len - 1) {\n      if (i === len - 1 || textKeys[i + 1].t > frameNum) {\n        break;\n      }\n      i += 1;\n    }\n    if (this.keysIndex !== i) {\n      this.keysIndex = i;\n    }\n    return this.data.d.k[this.keysIndex].s;\n  };\n  TextProperty.prototype.buildFinalText = function (text) {\n    var charactersArray = [];\n    var i = 0;\n    var len = text.length;\n    var charCode;\n    var secondCharCode;\n    var shouldCombine = false;\n    while (i < len) {\n      charCode = text.charCodeAt(i);\n      if (FontManager.isCombinedCharacter(charCode)) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i);\n      } else if (charCode >= 55296 && charCode <= 56319) {\n        secondCharCode = text.charCodeAt(i + 1);\n        if (secondCharCode >= 56320 && secondCharCode <= 57343) {\n          if (shouldCombine || FontManager.isModifier(charCode, secondCharCode)) {\n            charactersArray[charactersArray.length - 1] += text.substr(i, 2);\n            shouldCombine = false;\n          } else {\n            charactersArray.push(text.substr(i, 2));\n          }\n          i += 1;\n        } else {\n          charactersArray.push(text.charAt(i));\n        }\n      } else if (charCode > 56319) {\n        secondCharCode = text.charCodeAt(i + 1);\n        if (FontManager.isZeroWidthJoiner(charCode, secondCharCode)) {\n          shouldCombine = true;\n          charactersArray[charactersArray.length - 1] += text.substr(i, 2);\n          i += 1;\n        } else {\n          charactersArray.push(text.charAt(i));\n        }\n      } else if (FontManager.isZeroWidthJoiner(charCode)) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i);\n        shouldCombine = true;\n      } else {\n        charactersArray.push(text.charAt(i));\n      }\n      i += 1;\n    }\n    return charactersArray;\n  };\n  TextProperty.prototype.completeTextData = function (documentData) {\n    documentData.__complete = true;\n    var fontManager = this.elem.globalData.fontManager;\n    var data = this.data;\n    var letters = [];\n    var i;\n    var len;\n    var newLineFlag;\n    var index2 = 0;\n    var val;\n    var anchorGrouping = data.m.g;\n    var currentSize = 0;\n    var currentPos = 0;\n    var currentLine = 0;\n    var lineWidths = [];\n    var lineWidth = 0;\n    var maxLineWidth = 0;\n    var j;\n    var jLen;\n    var fontData = fontManager.getFontByName(documentData.f);\n    var charData;\n    var cLength = 0;\n    var fontProps = getFontProperties(fontData);\n    documentData.fWeight = fontProps.weight;\n    documentData.fStyle = fontProps.style;\n    documentData.finalSize = documentData.s;\n    documentData.finalText = this.buildFinalText(documentData.t);\n    len = documentData.finalText.length;\n    documentData.finalLineHeight = documentData.lh;\n    var trackingOffset = documentData.tr / 1e3 * documentData.finalSize;\n    var charCode;\n    if (documentData.sz) {\n      var flag = true;\n      var boxWidth = documentData.sz[0];\n      var boxHeight = documentData.sz[1];\n      var currentHeight;\n      var finalText;\n      while (flag) {\n        finalText = this.buildFinalText(documentData.t);\n        currentHeight = 0;\n        lineWidth = 0;\n        len = finalText.length;\n        trackingOffset = documentData.tr / 1e3 * documentData.finalSize;\n        var lastSpaceIndex = -1;\n        for (i = 0; i < len; i += 1) {\n          charCode = finalText[i].charCodeAt(0);\n          newLineFlag = false;\n          if (finalText[i] === \" \") {\n            lastSpaceIndex = i;\n          } else if (charCode === 13 || charCode === 3) {\n            lineWidth = 0;\n            newLineFlag = true;\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n          }\n          if (fontManager.chars) {\n            charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\n            cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n          } else {\n            cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\n          }\n          if (lineWidth + cLength > boxWidth && finalText[i] !== \" \") {\n            if (lastSpaceIndex === -1) {\n              len += 1;\n            } else {\n              i = lastSpaceIndex;\n            }\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\n            finalText.splice(i, lastSpaceIndex === i ? 1 : 0, \"\\r\");\n            lastSpaceIndex = -1;\n            lineWidth = 0;\n          } else {\n            lineWidth += cLength;\n            lineWidth += trackingOffset;\n          }\n        }\n        currentHeight += fontData.ascent * documentData.finalSize / 100;\n        if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\n          documentData.finalSize -= 1;\n          documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\n        } else {\n          documentData.finalText = finalText;\n          len = documentData.finalText.length;\n          flag = false;\n        }\n      }\n    }\n    lineWidth = -trackingOffset;\n    cLength = 0;\n    var uncollapsedSpaces = 0;\n    var currentChar;\n    for (i = 0; i < len; i += 1) {\n      newLineFlag = false;\n      currentChar = documentData.finalText[i];\n      charCode = currentChar.charCodeAt(0);\n      if (charCode === 13 || charCode === 3) {\n        uncollapsedSpaces = 0;\n        lineWidths.push(lineWidth);\n        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n        lineWidth = -2 * trackingOffset;\n        val = \"\";\n        newLineFlag = true;\n        currentLine += 1;\n      } else {\n        val = currentChar;\n      }\n      if (fontManager.chars) {\n        charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\n        cLength = newLineFlag ? 0 : charData.w * documentData.finalSize / 100;\n      } else {\n        cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\n      }\n      if (currentChar === \" \") {\n        uncollapsedSpaces += cLength + trackingOffset;\n      } else {\n        lineWidth += cLength + trackingOffset + uncollapsedSpaces;\n        uncollapsedSpaces = 0;\n      }\n      letters.push({\n        l: cLength,\n        an: cLength,\n        add: currentSize,\n        n: newLineFlag,\n        anIndexes: [],\n        val,\n        line: currentLine,\n        animatorJustifyOffset: 0\n      });\n      if (anchorGrouping == 2) {\n        currentSize += cLength;\n        if (val === \"\" || val === \" \" || i === len - 1) {\n          if (val === \"\" || val === \" \") {\n            currentSize -= cLength;\n          }\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index2;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n          index2 += 1;\n          currentSize = 0;\n        }\n      } else if (anchorGrouping == 3) {\n        currentSize += cLength;\n        if (val === \"\" || i === len - 1) {\n          if (val === \"\") {\n            currentSize -= cLength;\n          }\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize;\n            letters[currentPos].ind = index2;\n            letters[currentPos].extra = cLength;\n            currentPos += 1;\n          }\n          currentSize = 0;\n          index2 += 1;\n        }\n      } else {\n        letters[index2].ind = index2;\n        letters[index2].extra = 0;\n        index2 += 1;\n      }\n    }\n    documentData.l = letters;\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\n    lineWidths.push(lineWidth);\n    if (documentData.sz) {\n      documentData.boxWidth = documentData.sz[0];\n      documentData.justifyOffset = 0;\n    } else {\n      documentData.boxWidth = maxLineWidth;\n      switch (documentData.j) {\n        case 1:\n          documentData.justifyOffset = -documentData.boxWidth;\n          break;\n        case 2:\n          documentData.justifyOffset = -documentData.boxWidth / 2;\n          break;\n        default:\n          documentData.justifyOffset = 0;\n      }\n    }\n    documentData.lineWidths = lineWidths;\n    var animators = data.a;\n    var animatorData;\n    var letterData;\n    jLen = animators.length;\n    var based;\n    var ind;\n    var indexes = [];\n    for (j = 0; j < jLen; j += 1) {\n      animatorData = animators[j];\n      if (animatorData.a.sc) {\n        documentData.strokeColorAnim = true;\n      }\n      if (animatorData.a.sw) {\n        documentData.strokeWidthAnim = true;\n      }\n      if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\n        documentData.fillColorAnim = true;\n      }\n      ind = 0;\n      based = animatorData.s.b;\n      for (i = 0; i < len; i += 1) {\n        letterData = letters[i];\n        letterData.anIndexes[j] = ind;\n        if (based == 1 && letterData.val !== \"\" || based == 2 && letterData.val !== \"\" && letterData.val !== \" \" || based == 3 && (letterData.n || letterData.val == \" \" || i == len - 1) || based == 4 && (letterData.n || i == len - 1)) {\n          if (animatorData.s.rn === 1) {\n            indexes.push(ind);\n          }\n          ind += 1;\n        }\n      }\n      data.a[j].s.totalChars = ind;\n      var currentInd = -1;\n      var newInd;\n      if (animatorData.s.rn === 1) {\n        for (i = 0; i < len; i += 1) {\n          letterData = letters[i];\n          if (currentInd != letterData.anIndexes[j]) {\n            currentInd = letterData.anIndexes[j];\n            newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];\n          }\n          letterData.anIndexes[j] = newInd;\n        }\n      }\n    }\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;\n    documentData.ls = documentData.ls || 0;\n    documentData.ascent = fontData.ascent * documentData.finalSize / 100;\n  };\n  TextProperty.prototype.updateDocumentData = function (newData, index2) {\n    index2 = index2 === void 0 ? this.keysIndex : index2;\n    var dData = this.copyData({}, this.data.d.k[index2].s);\n    dData = this.copyData(dData, newData);\n    this.data.d.k[index2].s = dData;\n    this.recalculate(index2);\n    this.elem.addDynamicProperty(this);\n  };\n  TextProperty.prototype.recalculate = function (index2) {\n    var dData = this.data.d.k[index2].s;\n    dData.__complete = false;\n    this.keysIndex = 0;\n    this._isFirstFrame = true;\n    this.getValue(dData);\n  };\n  TextProperty.prototype.canResizeFont = function (_canResize) {\n    this.canResize = _canResize;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n  TextProperty.prototype.setMinimumFontSize = function (_fontValue) {\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\n    this.recalculate(this.keysIndex);\n    this.elem.addDynamicProperty(this);\n  };\n  const TextSelectorProp = function () {\n    var max = Math.max;\n    var min = Math.min;\n    var floor = Math.floor;\n    function TextSelectorPropFactory(elem, data) {\n      this._currentTextLength = -1;\n      this.k = false;\n      this.data = data;\n      this.elem = elem;\n      this.comp = elem.comp;\n      this.finalS = 0;\n      this.finalE = 0;\n      this.initDynamicPropertyContainer(elem);\n      this.s = PropertyFactory.getProp(elem, data.s || {\n        k: 0\n      }, 0, 0, this);\n      if (\"e\" in data) {\n        this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this);\n      } else {\n        this.e = {\n          v: 100\n        };\n      }\n      this.o = PropertyFactory.getProp(elem, data.o || {\n        k: 0\n      }, 0, 0, this);\n      this.xe = PropertyFactory.getProp(elem, data.xe || {\n        k: 0\n      }, 0, 0, this);\n      this.ne = PropertyFactory.getProp(elem, data.ne || {\n        k: 0\n      }, 0, 0, this);\n      this.sm = PropertyFactory.getProp(elem, data.sm || {\n        k: 100\n      }, 0, 0, this);\n      this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this);\n      if (!this.dynamicProperties.length) {\n        this.getValue();\n      }\n    }\n    TextSelectorPropFactory.prototype = {\n      getMult: function (ind) {\n        if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\n          this.getValue();\n        }\n        var x1 = 0;\n        var y1 = 0;\n        var x2 = 1;\n        var y2 = 1;\n        if (this.ne.v > 0) {\n          x1 = this.ne.v / 100;\n        } else {\n          y1 = -this.ne.v / 100;\n        }\n        if (this.xe.v > 0) {\n          x2 = 1 - this.xe.v / 100;\n        } else {\n          y2 = 1 + this.xe.v / 100;\n        }\n        var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;\n        var mult = 0;\n        var s = this.finalS;\n        var e = this.finalE;\n        var type = this.data.sh;\n        if (type === 2) {\n          if (e === s) {\n            mult = ind >= e ? 1 : 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n          mult = easer(mult);\n        } else if (type === 3) {\n          if (e === s) {\n            mult = ind >= e ? 0 : 1;\n          } else {\n            mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n          }\n          mult = easer(mult);\n        } else if (type === 4) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\n            if (mult < 0.5) {\n              mult *= 2;\n            } else {\n              mult = 1 - 2 * (mult - 0.5);\n            }\n          }\n          mult = easer(mult);\n        } else if (type === 5) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            var tot = e - s;\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            var x = -tot / 2 + ind;\n            var a = tot / 2;\n            mult = Math.sqrt(1 - x * x / (a * a));\n          }\n          mult = easer(mult);\n        } else if (type === 6) {\n          if (e === s) {\n            mult = 0;\n          } else {\n            ind = min(max(0, ind + 0.5 - s), e - s);\n            mult = (1 + Math.cos(Math.PI + Math.PI * 2 * ind / (e - s))) / 2;\n          }\n          mult = easer(mult);\n        } else {\n          if (ind >= floor(s)) {\n            if (ind - s < 0) {\n              mult = max(0, min(min(e, 1) - (s - ind), 1));\n            } else {\n              mult = max(0, min(e - ind, 1));\n            }\n          }\n          mult = easer(mult);\n        }\n        if (this.sm.v !== 100) {\n          var smoothness = this.sm.v * 0.01;\n          if (smoothness === 0) {\n            smoothness = 1e-8;\n          }\n          var threshold = 0.5 - smoothness * 0.5;\n          if (mult < threshold) {\n            mult = 0;\n          } else {\n            mult = (mult - threshold) / smoothness;\n            if (mult > 1) {\n              mult = 1;\n            }\n          }\n        }\n        return mult * this.a.v;\n      },\n      getValue: function (newCharsFlag) {\n        this.iterateDynamicProperties();\n        this._mdf = newCharsFlag || this._mdf;\n        this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\n        if (newCharsFlag && this.data.r === 2) {\n          this.e.v = this._currentTextLength;\n        }\n        var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\n        var o = this.o.v / divisor;\n        var s = this.s.v / divisor + o;\n        var e = this.e.v / divisor + o;\n        if (s > e) {\n          var _s = s;\n          s = e;\n          e = _s;\n        }\n        this.finalS = s;\n        this.finalE = e;\n      }\n    };\n    extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory);\n    function getTextSelectorProp(elem, data, arr) {\n      return new TextSelectorPropFactory(elem, data);\n    }\n    return {\n      getTextSelectorProp\n    };\n  }();\n  function TextAnimatorDataProperty(elem, animatorProps, container) {\n    var defaultData = {\n      propType: false\n    };\n    var getProp = PropertyFactory.getProp;\n    var textAnimatorAnimatables = animatorProps.a;\n    this.a = {\n      r: textAnimatorAnimatables.r ? getProp(elem, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,\n      rx: textAnimatorAnimatables.rx ? getProp(elem, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,\n      ry: textAnimatorAnimatables.ry ? getProp(elem, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,\n      sk: textAnimatorAnimatables.sk ? getProp(elem, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,\n      sa: textAnimatorAnimatables.sa ? getProp(elem, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,\n      s: textAnimatorAnimatables.s ? getProp(elem, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,\n      a: textAnimatorAnimatables.a ? getProp(elem, textAnimatorAnimatables.a, 1, 0, container) : defaultData,\n      o: textAnimatorAnimatables.o ? getProp(elem, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,\n      p: textAnimatorAnimatables.p ? getProp(elem, textAnimatorAnimatables.p, 1, 0, container) : defaultData,\n      sw: textAnimatorAnimatables.sw ? getProp(elem, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,\n      sc: textAnimatorAnimatables.sc ? getProp(elem, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,\n      fc: textAnimatorAnimatables.fc ? getProp(elem, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,\n      fh: textAnimatorAnimatables.fh ? getProp(elem, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,\n      fs: textAnimatorAnimatables.fs ? getProp(elem, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,\n      fb: textAnimatorAnimatables.fb ? getProp(elem, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,\n      t: textAnimatorAnimatables.t ? getProp(elem, textAnimatorAnimatables.t, 0, 0, container) : defaultData\n    };\n    this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container);\n    this.s.t = animatorProps.s.t;\n  }\n  function TextAnimatorProperty(textData, renderType, elem) {\n    this._isFirstFrame = true;\n    this._hasMaskedPath = false;\n    this._frameId = -1;\n    this._textData = textData;\n    this._renderType = renderType;\n    this._elem = elem;\n    this._animatorsData = createSizedArray(this._textData.a.length);\n    this._pathData = {};\n    this._moreOptions = {\n      alignment: {}\n    };\n    this.renderedLetters = [];\n    this.lettersChangedFlag = false;\n    this.initDynamicPropertyContainer(elem);\n  }\n  TextAnimatorProperty.prototype.searchProperties = function () {\n    var i;\n    var len = this._textData.a.length;\n    var animatorProps;\n    var getProp = PropertyFactory.getProp;\n    for (i = 0; i < len; i += 1) {\n      animatorProps = this._textData.a[i];\n      this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\n    }\n    if (this._textData.p && \"m\" in this._textData.p) {\n      this._pathData = {\n        a: getProp(this._elem, this._textData.p.a, 0, 0, this),\n        f: getProp(this._elem, this._textData.p.f, 0, 0, this),\n        l: getProp(this._elem, this._textData.p.l, 0, 0, this),\n        r: getProp(this._elem, this._textData.p.r, 0, 0, this),\n        p: getProp(this._elem, this._textData.p.p, 0, 0, this),\n        m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\n      };\n      this._hasMaskedPath = true;\n    } else {\n      this._hasMaskedPath = false;\n    }\n    this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);\n  };\n  TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\n    this.lettersChangedFlag = lettersChangedFlag;\n    if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\n      return;\n    }\n    this._isFirstFrame = false;\n    var alignment = this._moreOptions.alignment.v;\n    var animators = this._animatorsData;\n    var textData = this._textData;\n    var matrixHelper = this.mHelper;\n    var renderType = this._renderType;\n    var renderedLettersCount = this.renderedLetters.length;\n    var xPos;\n    var yPos;\n    var i;\n    var len;\n    var letters = documentData.l;\n    var pathInfo;\n    var currentLength;\n    var currentPoint;\n    var segmentLength;\n    var flag;\n    var pointInd;\n    var segmentInd;\n    var prevPoint;\n    var points;\n    var segments;\n    var partialLength;\n    var totalLength;\n    var perc;\n    var tanAngle;\n    var mask;\n    if (this._hasMaskedPath) {\n      mask = this._pathData.m;\n      if (!this._pathData.n || this._pathData._mdf) {\n        var paths = mask.v;\n        if (this._pathData.r.v) {\n          paths = paths.reverse();\n        }\n        pathInfo = {\n          tLength: 0,\n          segments: []\n        };\n        len = paths._length - 1;\n        var bezierData;\n        totalLength = 0;\n        for (i = 0; i < len; i += 1) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[i + 1], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n        i = len;\n        if (mask.v.c) {\n          bezierData = bez.buildBezierData(paths.v[i], paths.v[0], [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]], [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\n          pathInfo.tLength += bezierData.segmentLength;\n          pathInfo.segments.push(bezierData);\n          totalLength += bezierData.segmentLength;\n        }\n        this._pathData.pi = pathInfo;\n      }\n      pathInfo = this._pathData.pi;\n      currentLength = this._pathData.f.v;\n      segmentInd = 0;\n      pointInd = 1;\n      segmentLength = 0;\n      flag = true;\n      segments = pathInfo.segments;\n      if (currentLength < 0 && mask.v.c) {\n        if (pathInfo.tLength < Math.abs(currentLength)) {\n          currentLength = -Math.abs(currentLength) % pathInfo.tLength;\n        }\n        segmentInd = segments.length - 1;\n        points = segments[segmentInd].points;\n        pointInd = points.length - 1;\n        while (currentLength < 0) {\n          currentLength += points[pointInd].partialLength;\n          pointInd -= 1;\n          if (pointInd < 0) {\n            segmentInd -= 1;\n            points = segments[segmentInd].points;\n            pointInd = points.length - 1;\n          }\n        }\n      }\n      points = segments[segmentInd].points;\n      prevPoint = points[pointInd - 1];\n      currentPoint = points[pointInd];\n      partialLength = currentPoint.partialLength;\n    }\n    len = letters.length;\n    xPos = 0;\n    yPos = 0;\n    var yOff = documentData.finalSize * 1.2 * 0.714;\n    var firstLine = true;\n    var animatorProps;\n    var animatorSelector;\n    var j;\n    var jLen;\n    var letterValue;\n    jLen = animators.length;\n    var mult;\n    var ind = -1;\n    var offf;\n    var xPathPos;\n    var yPathPos;\n    var initPathPos = currentLength;\n    var initSegmentInd = segmentInd;\n    var initPointInd = pointInd;\n    var currentLine = -1;\n    var elemOpacity;\n    var sc;\n    var sw;\n    var fc;\n    var k;\n    var letterSw;\n    var letterSc;\n    var letterFc;\n    var letterM = \"\";\n    var letterP = this.defaultPropsArray;\n    var letterO;\n    if (documentData.j === 2 || documentData.j === 1) {\n      var animatorJustifyOffset = 0;\n      var animatorFirstCharOffset = 0;\n      var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\n      var lastIndex = 0;\n      var isNewLine = true;\n      for (i = 0; i < len; i += 1) {\n        if (letters[i].n) {\n          if (animatorJustifyOffset) {\n            animatorJustifyOffset += animatorFirstCharOffset;\n          }\n          while (lastIndex < i) {\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n            lastIndex += 1;\n          }\n          animatorJustifyOffset = 0;\n          isNewLine = true;\n        } else {\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n            if (animatorProps.t.propType) {\n              if (isNewLine && documentData.j === 2) {\n                animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\n              }\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n              if (mult.length) {\n                animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;\n              } else {\n                animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;\n              }\n            }\n          }\n          isNewLine = false;\n        }\n      }\n      if (animatorJustifyOffset) {\n        animatorJustifyOffset += animatorFirstCharOffset;\n      }\n      while (lastIndex < i) {\n        letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\n        lastIndex += 1;\n      }\n    }\n    for (i = 0; i < len; i += 1) {\n      matrixHelper.reset();\n      elemOpacity = 1;\n      if (letters[i].n) {\n        xPos = 0;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        currentLength = initPathPos;\n        firstLine = false;\n        if (this._hasMaskedPath) {\n          segmentInd = initSegmentInd;\n          pointInd = initPointInd;\n          points = segments[segmentInd].points;\n          prevPoint = points[pointInd - 1];\n          currentPoint = points[pointInd];\n          partialLength = currentPoint.partialLength;\n          segmentLength = 0;\n        }\n        letterM = \"\";\n        letterFc = \"\";\n        letterSw = \"\";\n        letterO = \"\";\n        letterP = this.defaultPropsArray;\n      } else {\n        if (this._hasMaskedPath) {\n          if (currentLine !== letters[i].line) {\n            switch (documentData.j) {\n              case 1:\n                currentLength += totalLength - documentData.lineWidths[letters[i].line];\n                break;\n              case 2:\n                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;\n                break;\n            }\n            currentLine = letters[i].line;\n          }\n          if (ind !== letters[i].ind) {\n            if (letters[ind]) {\n              currentLength += letters[ind].extra;\n            }\n            currentLength += letters[i].an / 2;\n            ind = letters[i].ind;\n          }\n          currentLength += alignment[0] * letters[i].an * 5e-3;\n          var animatorOffset = 0;\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a;\n            if (animatorProps.p.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n              if (mult.length) {\n                animatorOffset += animatorProps.p.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.p.v[0] * mult;\n              }\n            }\n            if (animatorProps.a.propType) {\n              animatorSelector = animators[j].s;\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n              if (mult.length) {\n                animatorOffset += animatorProps.a.v[0] * mult[0];\n              } else {\n                animatorOffset += animatorProps.a.v[0] * mult;\n              }\n            }\n          }\n          flag = true;\n          if (this._pathData.a.v) {\n            currentLength = letters[0].an * 0.5 + (totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind / (len - 1);\n            currentLength += this._pathData.f.v;\n          }\n          while (flag) {\n            if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\n              perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\n              xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\n              yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\n              matrixHelper.translate(-alignment[0] * letters[i].an * 5e-3, -(alignment[1] * yOff) * 0.01);\n              flag = false;\n            } else if (points) {\n              segmentLength += currentPoint.partialLength;\n              pointInd += 1;\n              if (pointInd >= points.length) {\n                pointInd = 0;\n                segmentInd += 1;\n                if (!segments[segmentInd]) {\n                  if (mask.v.c) {\n                    pointInd = 0;\n                    segmentInd = 0;\n                    points = segments[segmentInd].points;\n                  } else {\n                    segmentLength -= currentPoint.partialLength;\n                    points = null;\n                  }\n                } else {\n                  points = segments[segmentInd].points;\n                }\n              }\n              if (points) {\n                prevPoint = currentPoint;\n                currentPoint = points[pointInd];\n                partialLength = currentPoint.partialLength;\n              }\n            }\n          }\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0);\n        } else {\n          offf = letters[i].an / 2 - letters[i].add;\n          matrixHelper.translate(-offf, 0, 0);\n          matrixHelper.translate(-alignment[0] * letters[i].an * 5e-3, -alignment[1] * yOff * 0.01, 0);\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          if (animatorProps.t.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n            if (xPos !== 0 || documentData.j !== 0) {\n              if (this._hasMaskedPath) {\n                if (mult.length) {\n                  currentLength += animatorProps.t.v * mult[0];\n                } else {\n                  currentLength += animatorProps.t.v * mult;\n                }\n              } else if (mult.length) {\n                xPos += animatorProps.t.v * mult[0];\n              } else {\n                xPos += animatorProps.t.v * mult;\n              }\n            }\n          }\n        }\n        if (documentData.strokeWidthAnim) {\n          sw = documentData.sw || 0;\n        }\n        if (documentData.strokeColorAnim) {\n          if (documentData.sc) {\n            sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\n          } else {\n            sc = [0, 0, 0];\n          }\n        }\n        if (documentData.fillColorAnim && documentData.fc) {\n          fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          if (animatorProps.a.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n            if (mult.length) {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          if (animatorProps.s.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n            if (mult.length) {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1);\n            } else {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1);\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          animatorSelector = animators[j].s;\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n          if (animatorProps.sk.propType) {\n            if (mult.length) {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\n            } else {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\n            }\n          }\n          if (animatorProps.r.propType) {\n            if (mult.length) {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\n            } else {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult);\n            }\n          }\n          if (animatorProps.ry.propType) {\n            if (mult.length) {\n              matrixHelper.rotateY(animatorProps.ry.v * mult[1]);\n            } else {\n              matrixHelper.rotateY(animatorProps.ry.v * mult);\n            }\n          }\n          if (animatorProps.rx.propType) {\n            if (mult.length) {\n              matrixHelper.rotateX(animatorProps.rx.v * mult[0]);\n            } else {\n              matrixHelper.rotateX(animatorProps.rx.v * mult);\n            }\n          }\n          if (animatorProps.o.propType) {\n            if (mult.length) {\n              elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];\n            } else {\n              elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult;\n            }\n          }\n          if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\n            if (mult.length) {\n              sw += animatorProps.sw.v * mult[0];\n            } else {\n              sw += animatorProps.sw.v * mult;\n            }\n          }\n          if (documentData.strokeColorAnim && animatorProps.sc.propType) {\n            for (k = 0; k < 3; k += 1) {\n              if (mult.length) {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult[0];\n              } else {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult;\n              }\n            }\n          }\n          if (documentData.fillColorAnim && documentData.fc) {\n            if (animatorProps.fc.propType) {\n              for (k = 0; k < 3; k += 1) {\n                if (mult.length) {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult[0];\n                } else {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult;\n                }\n              }\n            }\n            if (animatorProps.fh.propType) {\n              if (mult.length) {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);\n              } else {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult);\n              }\n            }\n            if (animatorProps.fs.propType) {\n              if (mult.length) {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);\n              } else {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);\n              }\n            }\n            if (animatorProps.fb.propType) {\n              if (mult.length) {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);\n              } else {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);\n              }\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a;\n          if (animatorProps.p.propType) {\n            animatorSelector = animators[j].s;\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\n            if (this._hasMaskedPath) {\n              if (mult.length) {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\n              } else {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n              }\n            } else if (mult.length) {\n              matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\n            } else {\n              matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\n            }\n          }\n        }\n        if (documentData.strokeWidthAnim) {\n          letterSw = sw < 0 ? 0 : sw;\n        }\n        if (documentData.strokeColorAnim) {\n          letterSc = \"rgb(\" + Math.round(sc[0] * 255) + \",\" + Math.round(sc[1] * 255) + \",\" + Math.round(sc[2] * 255) + \")\";\n        }\n        if (documentData.fillColorAnim && documentData.fc) {\n          letterFc = \"rgb(\" + Math.round(fc[0] * 255) + \",\" + Math.round(fc[1] * 255) + \",\" + Math.round(fc[2] * 255) + \")\";\n        }\n        if (this._hasMaskedPath) {\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(0, alignment[1] * yOff * 0.01 + yPos, 0);\n          if (this._pathData.p.v) {\n            tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\n            var rot = Math.atan(tanAngle) * 180 / Math.PI;\n            if (currentPoint.point[0] < prevPoint.point[0]) {\n              rot += 180;\n            }\n            matrixHelper.rotate(-rot * Math.PI / 180);\n          }\n          matrixHelper.translate(xPathPos, yPathPos, 0);\n          currentLength -= alignment[0] * letters[i].an * 5e-3;\n          if (letters[i + 1] && ind !== letters[i + 1].ind) {\n            currentLength += letters[i].an / 2;\n            currentLength += documentData.tr * 1e-3 * documentData.finalSize;\n          }\n        } else {\n          matrixHelper.translate(xPos, yPos, 0);\n          if (documentData.ps) {\n            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n          }\n          switch (documentData.j) {\n            case 1:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);\n              break;\n            case 2:\n              matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);\n              break;\n          }\n          matrixHelper.translate(0, -documentData.ls);\n          matrixHelper.translate(offf, 0, 0);\n          matrixHelper.translate(alignment[0] * letters[i].an * 5e-3, alignment[1] * yOff * 0.01, 0);\n          xPos += letters[i].l + documentData.tr * 1e-3 * documentData.finalSize;\n        }\n        if (renderType === \"html\") {\n          letterM = matrixHelper.toCSS();\n        } else if (renderType === \"svg\") {\n          letterM = matrixHelper.to2dCSS();\n        } else {\n          letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];\n        }\n        letterO = elemOpacity;\n      }\n      if (renderedLettersCount <= i) {\n        letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);\n        this.renderedLetters.push(letterValue);\n        renderedLettersCount += 1;\n        this.lettersChangedFlag = true;\n      } else {\n        letterValue = this.renderedLetters[i];\n        this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\n      }\n    }\n  };\n  TextAnimatorProperty.prototype.getValue = function () {\n    if (this._elem.globalData.frameId === this._frameId) {\n      return;\n    }\n    this._frameId = this._elem.globalData.frameId;\n    this.iterateDynamicProperties();\n  };\n  TextAnimatorProperty.prototype.mHelper = new Matrix();\n  TextAnimatorProperty.prototype.defaultPropsArray = [];\n  extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\n  function ITextElement() {}\n  ITextElement.prototype.initElement = function (data, globalData, comp) {\n    this.lettersChangedFlag = true;\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\n    this.initTransform(data, globalData, comp);\n    this.initHierarchy();\n    this.initRenderable();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n    this.createContent();\n    this.hide();\n    this.textAnimator.searchProperties(this.dynamicProperties);\n  };\n  ITextElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n    if (this.textProperty._mdf || this.textProperty._isFirstFrame) {\n      this.buildNewText();\n      this.textProperty._isFirstFrame = false;\n      this.textProperty._mdf = false;\n    }\n  };\n  ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\n    var j;\n    var jLen = shapes.length;\n    var pathNodes;\n    var shapeStr = \"\";\n    for (j = 0; j < jLen; j += 1) {\n      if (shapes[j].ty === \"sh\") {\n        pathNodes = shapes[j].ks.k;\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\n      }\n    }\n    return shapeStr;\n  };\n  ITextElement.prototype.updateDocumentData = function (newData, index2) {\n    this.textProperty.updateDocumentData(newData, index2);\n  };\n  ITextElement.prototype.canResizeFont = function (_canResize) {\n    this.textProperty.canResizeFont(_canResize);\n  };\n  ITextElement.prototype.setMinimumFontSize = function (_fontSize) {\n    this.textProperty.setMinimumFontSize(_fontSize);\n  };\n  ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\n    if (documentData.ps) {\n      matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\n    }\n    matrixHelper.translate(0, -documentData.ls, 0);\n    switch (documentData.j) {\n      case 1:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);\n        break;\n      case 2:\n        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);\n        break;\n    }\n    matrixHelper.translate(xPos, yPos, 0);\n  };\n  ITextElement.prototype.buildColor = function (colorData) {\n    return \"rgb(\" + Math.round(colorData[0] * 255) + \",\" + Math.round(colorData[1] * 255) + \",\" + Math.round(colorData[2] * 255) + \")\";\n  };\n  ITextElement.prototype.emptyProp = new LetterProps();\n  ITextElement.prototype.destroy = function () {};\n  var emptyShapeData = {\n    shapes: []\n  };\n  function SVGTextLottieElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.renderType = \"svg\";\n    this.initElement(data, globalData, comp);\n  }\n  extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement);\n  SVGTextLottieElement.prototype.createContent = function () {\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\n      this.textContainer = createNS(\"text\");\n    }\n  };\n  SVGTextLottieElement.prototype.buildTextContents = function (textArray) {\n    var i = 0;\n    var len = textArray.length;\n    var textContents = [];\n    var currentTextContent = \"\";\n    while (i < len) {\n      if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\n        textContents.push(currentTextContent);\n        currentTextContent = \"\";\n      } else {\n        currentTextContent += textArray[i];\n      }\n      i += 1;\n    }\n    textContents.push(currentTextContent);\n    return textContents;\n  };\n  SVGTextLottieElement.prototype.buildShapeData = function (data, scale) {\n    if (data.shapes && data.shapes.length) {\n      var shape = data.shapes[0];\n      if (shape.it) {\n        var shapeItem = shape.it[shape.it.length - 1];\n        if (shapeItem.s) {\n          shapeItem.s.k[0] = scale;\n          shapeItem.s.k[1] = scale;\n        }\n      }\n    }\n    return data;\n  };\n  SVGTextLottieElement.prototype.buildNewText = function () {\n    this.addDynamicProperty(this);\n    var i;\n    var len;\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\n    if (documentData.fc) {\n      this.layerElement.setAttribute(\"fill\", this.buildColor(documentData.fc));\n    } else {\n      this.layerElement.setAttribute(\"fill\", \"rgba(0,0,0,0)\");\n    }\n    if (documentData.sc) {\n      this.layerElement.setAttribute(\"stroke\", this.buildColor(documentData.sc));\n      this.layerElement.setAttribute(\"stroke-width\", documentData.sw);\n    }\n    this.layerElement.setAttribute(\"font-size\", documentData.finalSize);\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n    if (fontData.fClass) {\n      this.layerElement.setAttribute(\"class\", fontData.fClass);\n    } else {\n      this.layerElement.setAttribute(\"font-family\", fontData.fFamily);\n      var fWeight = documentData.fWeight;\n      var fStyle = documentData.fStyle;\n      this.layerElement.setAttribute(\"font-style\", fStyle);\n      this.layerElement.setAttribute(\"font-weight\", fWeight);\n    }\n    this.layerElement.setAttribute(\"aria-label\", documentData.t);\n    var letters = documentData.l || [];\n    var usesGlyphs = !!this.globalData.fontManager.chars;\n    len = letters.length;\n    var tSpan;\n    var matrixHelper = this.mHelper;\n    var shapeStr = \"\";\n    var singleShape = this.data.singleShape;\n    var xPos = 0;\n    var yPos = 0;\n    var firstLine = true;\n    var trackingOffset = documentData.tr * 1e-3 * documentData.finalSize;\n    if (singleShape && !usesGlyphs && !documentData.sz) {\n      var tElement = this.textContainer;\n      var justify = \"start\";\n      switch (documentData.j) {\n        case 1:\n          justify = \"end\";\n          break;\n        case 2:\n          justify = \"middle\";\n          break;\n        default:\n          justify = \"start\";\n          break;\n      }\n      tElement.setAttribute(\"text-anchor\", justify);\n      tElement.setAttribute(\"letter-spacing\", trackingOffset);\n      var textContent = this.buildTextContents(documentData.finalText);\n      len = textContent.length;\n      yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\n      for (i = 0; i < len; i += 1) {\n        tSpan = this.textSpans[i].span || createNS(\"tspan\");\n        tSpan.textContent = textContent[i];\n        tSpan.setAttribute(\"x\", 0);\n        tSpan.setAttribute(\"y\", yPos);\n        tSpan.style.display = \"inherit\";\n        tElement.appendChild(tSpan);\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            glyph: null\n          };\n        }\n        this.textSpans[i].span = tSpan;\n        yPos += documentData.finalLineHeight;\n      }\n      this.layerElement.appendChild(tElement);\n    } else {\n      var cachedSpansLength = this.textSpans.length;\n      var charData;\n      for (i = 0; i < len; i += 1) {\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            childSpan: null,\n            glyph: null\n          };\n        }\n        if (!usesGlyphs || !singleShape || i === 0) {\n          tSpan = cachedSpansLength > i ? this.textSpans[i].span : createNS(usesGlyphs ? \"g\" : \"text\");\n          if (cachedSpansLength <= i) {\n            tSpan.setAttribute(\"stroke-linecap\", \"butt\");\n            tSpan.setAttribute(\"stroke-linejoin\", \"round\");\n            tSpan.setAttribute(\"stroke-miterlimit\", \"4\");\n            this.textSpans[i].span = tSpan;\n            if (usesGlyphs) {\n              var childSpan = createNS(\"g\");\n              tSpan.appendChild(childSpan);\n              this.textSpans[i].childSpan = childSpan;\n            }\n            this.textSpans[i].span = tSpan;\n            this.layerElement.appendChild(tSpan);\n          }\n          tSpan.style.display = \"inherit\";\n        }\n        matrixHelper.reset();\n        if (singleShape) {\n          if (letters[i].n) {\n            xPos = -trackingOffset;\n            yPos += documentData.yOffset;\n            yPos += firstLine ? 1 : 0;\n            firstLine = false;\n          }\n          this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n          xPos += letters[i].l || 0;\n          xPos += trackingOffset;\n        }\n        if (usesGlyphs) {\n          charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n          var glyphElement;\n          if (charData.t === 1) {\n            glyphElement = new SVGCompElement(charData.data, this.globalData, this);\n          } else {\n            var data = emptyShapeData;\n            if (charData.data && charData.data.shapes) {\n              data = this.buildShapeData(charData.data, documentData.finalSize);\n            }\n            glyphElement = new SVGShapeElement(data, this.globalData, this);\n          }\n          if (this.textSpans[i].glyph) {\n            var glyph = this.textSpans[i].glyph;\n            this.textSpans[i].childSpan.removeChild(glyph.layerElement);\n            glyph.destroy();\n          }\n          this.textSpans[i].glyph = glyphElement;\n          glyphElement._debug = true;\n          glyphElement.prepareFrame(0);\n          glyphElement.renderFrame();\n          this.textSpans[i].childSpan.appendChild(glyphElement.layerElement);\n          if (charData.t === 1) {\n            this.textSpans[i].childSpan.setAttribute(\"transform\", \"scale(\" + documentData.finalSize / 100 + \",\" + documentData.finalSize / 100 + \")\");\n          }\n        } else {\n          if (singleShape) {\n            tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\n          }\n          tSpan.textContent = letters[i].val;\n          tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n        }\n      }\n      if (singleShape && tSpan) {\n        tSpan.setAttribute(\"d\", shapeStr);\n      }\n    }\n    while (i < this.textSpans.length) {\n      this.textSpans[i].span.style.display = \"none\";\n      i += 1;\n    }\n    this._sizeChanged = true;\n  };\n  SVGTextLottieElement.prototype.sourceRectAtTime = function () {\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\n    this.renderInnerContent();\n    if (this._sizeChanged) {\n      this._sizeChanged = false;\n      var textBox = this.layerElement.getBBox();\n      this.bbox = {\n        top: textBox.y,\n        left: textBox.x,\n        width: textBox.width,\n        height: textBox.height\n      };\n    }\n    return this.bbox;\n  };\n  SVGTextLottieElement.prototype.getValue = function () {\n    var i;\n    var len = this.textSpans.length;\n    var glyphElement;\n    this.renderedFrame = this.comp.renderedFrame;\n    for (i = 0; i < len; i += 1) {\n      glyphElement = this.textSpans[i].glyph;\n      if (glyphElement) {\n        glyphElement.prepareFrame(this.comp.renderedFrame - this.data.st);\n        if (glyphElement._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n  SVGTextLottieElement.prototype.renderInnerContent = function () {\n    if (!this.data.singleShape || this._mdf) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n      if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\n        this._sizeChanged = true;\n        var i;\n        var len;\n        var renderedLetters = this.textAnimator.renderedLetters;\n        var letters = this.textProperty.currentData.l;\n        len = letters.length;\n        var renderedLetter;\n        var textSpan;\n        var glyphElement;\n        for (i = 0; i < len; i += 1) {\n          if (!letters[i].n) {\n            renderedLetter = renderedLetters[i];\n            textSpan = this.textSpans[i].span;\n            glyphElement = this.textSpans[i].glyph;\n            if (glyphElement) {\n              glyphElement.renderFrame();\n            }\n            if (renderedLetter._mdf.m) {\n              textSpan.setAttribute(\"transform\", renderedLetter.m);\n            }\n            if (renderedLetter._mdf.o) {\n              textSpan.setAttribute(\"opacity\", renderedLetter.o);\n            }\n            if (renderedLetter._mdf.sw) {\n              textSpan.setAttribute(\"stroke-width\", renderedLetter.sw);\n            }\n            if (renderedLetter._mdf.sc) {\n              textSpan.setAttribute(\"stroke\", renderedLetter.sc);\n            }\n            if (renderedLetter._mdf.fc) {\n              textSpan.setAttribute(\"fill\", renderedLetter.fc);\n            }\n          }\n        }\n      }\n    }\n  };\n  function ISolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n  extendPrototype([IImageElement], ISolidElement);\n  ISolidElement.prototype.createContent = function () {\n    var rect = createNS(\"rect\");\n    rect.setAttribute(\"width\", this.data.sw);\n    rect.setAttribute(\"height\", this.data.sh);\n    rect.setAttribute(\"fill\", this.data.sc);\n    this.layerElement.appendChild(rect);\n  };\n  function NullElement(data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initFrame();\n    this.initTransform(data, globalData, comp);\n    this.initHierarchy();\n  }\n  NullElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true);\n  };\n  NullElement.prototype.renderFrame = function () {};\n  NullElement.prototype.getBaseElement = function () {\n    return null;\n  };\n  NullElement.prototype.destroy = function () {};\n  NullElement.prototype.sourceRectAtTime = function () {};\n  NullElement.prototype.hide = function () {};\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);\n  function SVGRendererBase() {}\n  extendPrototype([BaseRenderer], SVGRendererBase);\n  SVGRendererBase.prototype.createNull = function (data) {\n    return new NullElement(data, this.globalData, this);\n  };\n  SVGRendererBase.prototype.createShape = function (data) {\n    return new SVGShapeElement(data, this.globalData, this);\n  };\n  SVGRendererBase.prototype.createText = function (data) {\n    return new SVGTextLottieElement(data, this.globalData, this);\n  };\n  SVGRendererBase.prototype.createImage = function (data) {\n    return new IImageElement(data, this.globalData, this);\n  };\n  SVGRendererBase.prototype.createSolid = function (data) {\n    return new ISolidElement(data, this.globalData, this);\n  };\n  SVGRendererBase.prototype.configAnimation = function (animData) {\n    this.svgElement.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    if (this.renderConfig.viewBoxSize) {\n      this.svgElement.setAttribute(\"viewBox\", this.renderConfig.viewBoxSize);\n    } else {\n      this.svgElement.setAttribute(\"viewBox\", \"0 0 \" + animData.w + \" \" + animData.h);\n    }\n    if (!this.renderConfig.viewBoxOnly) {\n      this.svgElement.setAttribute(\"width\", animData.w);\n      this.svgElement.setAttribute(\"height\", animData.h);\n      this.svgElement.style.width = \"100%\";\n      this.svgElement.style.height = \"100%\";\n      this.svgElement.style.transform = \"translate3d(0,0,0)\";\n      this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility;\n    }\n    if (this.renderConfig.width) {\n      this.svgElement.setAttribute(\"width\", this.renderConfig.width);\n    }\n    if (this.renderConfig.height) {\n      this.svgElement.setAttribute(\"height\", this.renderConfig.height);\n    }\n    if (this.renderConfig.className) {\n      this.svgElement.setAttribute(\"class\", this.renderConfig.className);\n    }\n    if (this.renderConfig.id) {\n      this.svgElement.setAttribute(\"id\", this.renderConfig.id);\n    }\n    if (this.renderConfig.focusable !== void 0) {\n      this.svgElement.setAttribute(\"focusable\", this.renderConfig.focusable);\n    }\n    this.svgElement.setAttribute(\"preserveAspectRatio\", this.renderConfig.preserveAspectRatio);\n    this.animationItem.wrapper.appendChild(this.svgElement);\n    var defs = this.globalData.defs;\n    this.setupGlobalData(animData, defs);\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.data = animData;\n    var maskElement = createNS(\"clipPath\");\n    var rect = createNS(\"rect\");\n    rect.setAttribute(\"width\", animData.w);\n    rect.setAttribute(\"height\", animData.h);\n    rect.setAttribute(\"x\", 0);\n    rect.setAttribute(\"y\", 0);\n    var maskId = createElementID();\n    maskElement.setAttribute(\"id\", maskId);\n    maskElement.appendChild(rect);\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + getLocationHref() + \"#\" + maskId + \")\");\n    defs.appendChild(maskElement);\n    this.layers = animData.layers;\n    this.elements = createSizedArray(animData.layers.length);\n  };\n  SVGRendererBase.prototype.destroy = function () {\n    if (this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = \"\";\n    }\n    this.layerElement = null;\n    this.globalData.defs = null;\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n    this.elements.length = 0;\n    this.destroyed = true;\n    this.animationItem = null;\n  };\n  SVGRendererBase.prototype.updateContainerSize = function () {};\n  SVGRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return;\n    }\n    elements[pos] = true;\n    var element = this.createItem(this.layers[pos]);\n    elements[pos] = element;\n    if (getExpressionsPlugin()) {\n      if (this.layers[pos].ty === 0) {\n        this.globalData.projectInterface.registerComposition(element);\n      }\n      element.initExpressions();\n    }\n    this.appendElementInPos(element, pos);\n    if (this.layers[pos].tt) {\n      if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {\n        this.buildItem(pos - 1);\n        this.addPendingElement(element);\n      } else {\n        element.setMatte(elements[pos - 1].layerId);\n      }\n    }\n  };\n  SVGRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n      if (element.data.tt) {\n        var i = 0;\n        var len = this.elements.length;\n        while (i < len) {\n          if (this.elements[i] === element) {\n            element.setMatte(this.elements[i - 1].layerId);\n            break;\n          }\n          i += 1;\n        }\n      }\n    }\n  };\n  SVGRendererBase.prototype.renderFrame = function (num) {\n    if (this.renderedFrame === num || this.destroyed) {\n      return;\n    }\n    if (num === null) {\n      num = this.renderedFrame;\n    } else {\n      this.renderedFrame = num;\n    }\n    this.globalData.frameNum = num;\n    this.globalData.frameId += 1;\n    this.globalData.projectInterface.currentFrame = num;\n    this.globalData._mdf = false;\n    var i;\n    var len = this.layers.length;\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n    if (this.globalData._mdf) {\n      for (i = 0; i < len; i += 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n    }\n  };\n  SVGRendererBase.prototype.appendElementInPos = function (element, pos) {\n    var newElement = element.getBaseElement();\n    if (!newElement) {\n      return;\n    }\n    var i = 0;\n    var nextElement;\n    while (i < pos) {\n      if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\n        nextElement = this.elements[i].getBaseElement();\n      }\n      i += 1;\n    }\n    if (nextElement) {\n      this.layerElement.insertBefore(newElement, nextElement);\n    } else {\n      this.layerElement.appendChild(newElement);\n    }\n  };\n  SVGRendererBase.prototype.hide = function () {\n    this.layerElement.style.display = \"none\";\n  };\n  SVGRendererBase.prototype.show = function () {\n    this.layerElement.style.display = \"block\";\n  };\n  function ICompElement() {}\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\n  ICompElement.prototype.initElement = function (data, globalData, comp) {\n    this.initFrame();\n    this.initBaseData(data, globalData, comp);\n    this.initTransform(data, globalData, comp);\n    this.initRenderable();\n    this.initHierarchy();\n    this.initRendererElement();\n    this.createContainerElements();\n    this.createRenderableComponents();\n    if (this.data.xt || !globalData.progressiveLoad) {\n      this.buildAllItems();\n    }\n    this.hide();\n  };\n  ICompElement.prototype.prepareFrame = function (num) {\n    this._mdf = false;\n    this.prepareRenderableFrame(num);\n    this.prepareProperties(num, this.isInRange);\n    if (!this.isInRange && !this.data.xt) {\n      return;\n    }\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v;\n      if (timeRemapped === this.data.op) {\n        timeRemapped = this.data.op - 1;\n      }\n      this.renderedFrame = timeRemapped;\n    } else {\n      this.renderedFrame = num / this.data.sr;\n    }\n    var i;\n    var len = this.elements.length;\n    if (!this.completeLayers) {\n      this.checkLayers(this.renderedFrame);\n    }\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\n        if (this.elements[i]._mdf) {\n          this._mdf = true;\n        }\n      }\n    }\n  };\n  ICompElement.prototype.renderInnerContent = function () {\n    var i;\n    var len = this.layers.length;\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n  ICompElement.prototype.setElements = function (elems) {\n    this.elements = elems;\n  };\n  ICompElement.prototype.getElements = function () {\n    return this.elements;\n  };\n  ICompElement.prototype.destroyElements = function () {\n    var i;\n    var len = this.layers.length;\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n  };\n  ICompElement.prototype.destroy = function () {\n    this.destroyElements();\n    this.destroyBaseElement();\n  };\n  function SVGCompElement(data, globalData, comp) {\n    this.layers = data.layers;\n    this.supports3d = true;\n    this.completeLayers = false;\n    this.pendingElements = [];\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n  extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement);\n  SVGCompElement.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this);\n  };\n  function SVGRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.layers = null;\n    this.renderedFrame = -1;\n    this.svgElement = createNS(\"svg\");\n    var ariaLabel = \"\";\n    if (config && config.title) {\n      var titleElement = createNS(\"title\");\n      var titleId = createElementID();\n      titleElement.setAttribute(\"id\", titleId);\n      titleElement.textContent = config.title;\n      this.svgElement.appendChild(titleElement);\n      ariaLabel += titleId;\n    }\n    if (config && config.description) {\n      var descElement = createNS(\"desc\");\n      var descId = createElementID();\n      descElement.setAttribute(\"id\", descId);\n      descElement.textContent = config.description;\n      this.svgElement.appendChild(descElement);\n      ariaLabel += \" \" + descId;\n    }\n    if (ariaLabel) {\n      this.svgElement.setAttribute(\"aria-labelledby\", ariaLabel);\n    }\n    var defs = createNS(\"defs\");\n    this.svgElement.appendChild(defs);\n    var maskElement = createNS(\"g\");\n    this.svgElement.appendChild(maskElement);\n    this.layerElement = maskElement;\n    this.renderConfig = {\n      preserveAspectRatio: config && config.preserveAspectRatio || \"xMidYMid meet\",\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || \"xMidYMid slice\",\n      contentVisibility: config && config.contentVisibility || \"visible\",\n      progressiveLoad: config && config.progressiveLoad || false,\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      viewBoxOnly: config && config.viewBoxOnly || false,\n      viewBoxSize: config && config.viewBoxSize || false,\n      className: config && config.className || \"\",\n      id: config && config.id || \"\",\n      focusable: config && config.focusable,\n      filterSize: {\n        width: config && config.filterSize && config.filterSize.width || \"100%\",\n        height: config && config.filterSize && config.filterSize.height || \"100%\",\n        x: config && config.filterSize && config.filterSize.x || \"0%\",\n        y: config && config.filterSize && config.filterSize.y || \"0%\"\n      },\n      width: config && config.width,\n      height: config && config.height\n    };\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      defs,\n      renderConfig: this.renderConfig\n    };\n    this.elements = [];\n    this.pendingElements = [];\n    this.destroyed = false;\n    this.rendererType = \"svg\";\n  }\n  extendPrototype([SVGRendererBase], SVGRenderer);\n  SVGRenderer.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this);\n  };\n  function CVContextData() {\n    this.saved = [];\n    this.cArrPos = 0;\n    this.cTr = new Matrix();\n    this.cO = 1;\n    var i;\n    var len = 15;\n    this.savedOp = createTypedArray(\"float32\", len);\n    for (i = 0; i < len; i += 1) {\n      this.saved[i] = createTypedArray(\"float32\", 16);\n    }\n    this._length = len;\n  }\n  CVContextData.prototype.duplicate = function () {\n    var newLength = this._length * 2;\n    var currentSavedOp = this.savedOp;\n    this.savedOp = createTypedArray(\"float32\", newLength);\n    this.savedOp.set(currentSavedOp);\n    var i = 0;\n    for (i = this._length; i < newLength; i += 1) {\n      this.saved[i] = createTypedArray(\"float32\", 16);\n    }\n    this._length = newLength;\n  };\n  CVContextData.prototype.reset = function () {\n    this.cArrPos = 0;\n    this.cTr.reset();\n    this.cO = 1;\n  };\n  function ShapeTransformManager() {\n    this.sequences = {};\n    this.sequenceList = [];\n    this.transform_key_count = 0;\n  }\n  ShapeTransformManager.prototype = {\n    addTransformSequence: function (transforms) {\n      var i;\n      var len = transforms.length;\n      var key = \"_\";\n      for (i = 0; i < len; i += 1) {\n        key += transforms[i].transform.key + \"_\";\n      }\n      var sequence = this.sequences[key];\n      if (!sequence) {\n        sequence = {\n          transforms: [].concat(transforms),\n          finalTransform: new Matrix(),\n          _mdf: false\n        };\n        this.sequences[key] = sequence;\n        this.sequenceList.push(sequence);\n      }\n      return sequence;\n    },\n    processSequence: function (sequence, isFirstFrame) {\n      var i = 0;\n      var len = sequence.transforms.length;\n      var _mdf = isFirstFrame;\n      while (i < len && !isFirstFrame) {\n        if (sequence.transforms[i].transform.mProps._mdf) {\n          _mdf = true;\n          break;\n        }\n        i += 1;\n      }\n      if (_mdf) {\n        var props;\n        sequence.finalTransform.reset();\n        for (i = len - 1; i >= 0; i -= 1) {\n          props = sequence.transforms[i].transform.mProps.v.props;\n          sequence.finalTransform.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\n        }\n      }\n      sequence._mdf = _mdf;\n    },\n    processSequences: function (isFirstFrame) {\n      var i;\n      var len = this.sequenceList.length;\n      for (i = 0; i < len; i += 1) {\n        this.processSequence(this.sequenceList[i], isFirstFrame);\n      }\n    },\n    getNewKey: function () {\n      this.transform_key_count += 1;\n      return \"_\" + this.transform_key_count;\n    }\n  };\n  function CVEffects() {}\n  CVEffects.prototype.renderFrame = function () {};\n  function CVMaskElement(data, element) {\n    this.data = data;\n    this.element = element;\n    this.masksProperties = this.data.masksProperties || [];\n    this.viewData = createSizedArray(this.masksProperties.length);\n    var i;\n    var len = this.masksProperties.length;\n    var hasMasks = false;\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== \"n\") {\n        hasMasks = true;\n      }\n      this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);\n    }\n    this.hasMasks = hasMasks;\n    if (hasMasks) {\n      this.element.addRenderableComponent(this);\n    }\n  }\n  CVMaskElement.prototype.renderFrame = function () {\n    if (!this.hasMasks) {\n      return;\n    }\n    var transform = this.element.finalTransform.mat;\n    var ctx = this.element.canvasContext;\n    var i;\n    var len = this.masksProperties.length;\n    var pt;\n    var pts;\n    var data;\n    ctx.beginPath();\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== \"n\") {\n        if (this.masksProperties[i].inv) {\n          ctx.moveTo(0, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, 0);\n          ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\n          ctx.lineTo(0, this.element.globalData.compSize.h);\n          ctx.lineTo(0, 0);\n        }\n        data = this.viewData[i].v;\n        pt = transform.applyToPointArray(data.v[0][0], data.v[0][1], 0);\n        ctx.moveTo(pt[0], pt[1]);\n        var j;\n        var jLen = data._length;\n        for (j = 1; j < jLen; j += 1) {\n          pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\n          ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n        }\n        pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\n        ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\n      }\n    }\n    this.element.globalData.renderer.save(true);\n    ctx.clip();\n  };\n  CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\n  CVMaskElement.prototype.destroy = function () {\n    this.element = null;\n  };\n  function CVBaseElement() {}\n  CVBaseElement.prototype = {\n    createElements: function () {},\n    initRendererElement: function () {},\n    createContainerElements: function () {\n      this.canvasContext = this.globalData.canvasContext;\n      this.renderableEffectsManager = new CVEffects();\n    },\n    createContent: function () {},\n    setBlendMode: function () {\n      var globalData = this.globalData;\n      if (globalData.blendMode !== this.data.bm) {\n        globalData.blendMode = this.data.bm;\n        var blendModeValue = getBlendMode(this.data.bm);\n        globalData.canvasContext.globalCompositeOperation = blendModeValue;\n      }\n    },\n    createRenderableComponents: function () {\n      this.maskManager = new CVMaskElement(this.data, this);\n    },\n    hideElement: function () {\n      if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n        this.hidden = true;\n      }\n    },\n    showElement: function () {\n      if (this.isInRange && !this.isTransparent) {\n        this.hidden = false;\n        this._isFirstFrame = true;\n        this.maskManager._isFirstFrame = true;\n      }\n    },\n    renderFrame: function () {\n      if (this.hidden || this.data.hd) {\n        return;\n      }\n      this.renderTransform();\n      this.renderRenderable();\n      this.setBlendMode();\n      var forceRealStack = this.data.ty === 0;\n      this.globalData.renderer.save(forceRealStack);\n      this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\n      this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\n      this.renderInnerContent();\n      this.globalData.renderer.restore(forceRealStack);\n      if (this.maskManager.hasMasks) {\n        this.globalData.renderer.restore(true);\n      }\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false;\n      }\n    },\n    destroy: function () {\n      this.canvasContext = null;\n      this.data = null;\n      this.globalData = null;\n      this.maskManager.destroy();\n    },\n    mHelper: new Matrix()\n  };\n  CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\n  CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\n  function CVShapeData(element, data, styles, transformsManager) {\n    this.styledShapes = [];\n    this.tr = [0, 0, 0, 0, 0, 0];\n    var ty = 4;\n    if (data.ty === \"rc\") {\n      ty = 5;\n    } else if (data.ty === \"el\") {\n      ty = 6;\n    } else if (data.ty === \"sr\") {\n      ty = 7;\n    }\n    this.sh = ShapePropertyFactory.getShapeProp(element, data, ty, element);\n    var i;\n    var len = styles.length;\n    var styledShape;\n    for (i = 0; i < len; i += 1) {\n      if (!styles[i].closed) {\n        styledShape = {\n          transforms: transformsManager.addTransformSequence(styles[i].transforms),\n          trNodes: []\n        };\n        this.styledShapes.push(styledShape);\n        styles[i].elements.push(styledShape);\n      }\n    }\n  }\n  CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\n  function CVShapeElement(data, globalData, comp) {\n    this.shapes = [];\n    this.shapesData = data.shapes;\n    this.stylesList = [];\n    this.itemsData = [];\n    this.prevViewData = [];\n    this.shapeModifiers = [];\n    this.processedElements = [];\n    this.transformsManager = new ShapeTransformManager();\n    this.initElement(data, globalData, comp);\n  }\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement);\n  CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\n  CVShapeElement.prototype.transformHelper = {\n    opacity: 1,\n    _opMdf: false\n  };\n  CVShapeElement.prototype.dashResetter = [];\n  CVShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n  };\n  CVShapeElement.prototype.createStyleElement = function (data, transforms) {\n    var styleElem = {\n      data,\n      type: data.ty,\n      preTransforms: this.transformsManager.addTransformSequence(transforms),\n      transforms: [],\n      elements: [],\n      closed: data.hd === true\n    };\n    var elementData = {};\n    if (data.ty === \"fl\" || data.ty === \"st\") {\n      elementData.c = PropertyFactory.getProp(this, data.c, 1, 255, this);\n      if (!elementData.c.k) {\n        styleElem.co = \"rgb(\" + bmFloor(elementData.c.v[0]) + \",\" + bmFloor(elementData.c.v[1]) + \",\" + bmFloor(elementData.c.v[2]) + \")\";\n      }\n    } else if (data.ty === \"gf\" || data.ty === \"gs\") {\n      elementData.s = PropertyFactory.getProp(this, data.s, 1, null, this);\n      elementData.e = PropertyFactory.getProp(this, data.e, 1, null, this);\n      elementData.h = PropertyFactory.getProp(this, data.h || {\n        k: 0\n      }, 0, 0.01, this);\n      elementData.a = PropertyFactory.getProp(this, data.a || {\n        k: 0\n      }, 0, degToRads, this);\n      elementData.g = new GradientProperty(this, data.g, this);\n    }\n    elementData.o = PropertyFactory.getProp(this, data.o, 0, 0.01, this);\n    if (data.ty === \"st\" || data.ty === \"gs\") {\n      styleElem.lc = lineCapEnum[data.lc || 2];\n      styleElem.lj = lineJoinEnum[data.lj || 2];\n      if (data.lj == 1) {\n        styleElem.ml = data.ml;\n      }\n      elementData.w = PropertyFactory.getProp(this, data.w, 0, null, this);\n      if (!elementData.w.k) {\n        styleElem.wi = elementData.w.v;\n      }\n      if (data.d) {\n        var d = new DashProperty(this, data.d, \"canvas\", this);\n        elementData.d = d;\n        if (!elementData.d.k) {\n          styleElem.da = elementData.d.dashArray;\n          styleElem.do = elementData.d.dashoffset[0];\n        }\n      }\n    } else {\n      styleElem.r = data.r === 2 ? \"evenodd\" : \"nonzero\";\n    }\n    this.stylesList.push(styleElem);\n    elementData.style = styleElem;\n    return elementData;\n  };\n  CVShapeElement.prototype.createGroupElement = function () {\n    var elementData = {\n      it: [],\n      prevViewData: []\n    };\n    return elementData;\n  };\n  CVShapeElement.prototype.createTransformElement = function (data) {\n    var elementData = {\n      transform: {\n        opacity: 1,\n        _opMdf: false,\n        key: this.transformsManager.getNewKey(),\n        op: PropertyFactory.getProp(this, data.o, 0, 0.01, this),\n        mProps: TransformPropertyFactory.getTransformProperty(this, data, this)\n      }\n    };\n    return elementData;\n  };\n  CVShapeElement.prototype.createShapeElement = function (data) {\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\n    this.shapes.push(elementData);\n    this.addShapeToModifiers(elementData);\n    return elementData;\n  };\n  CVShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true;\n    var i;\n    var len = this.itemsData.length;\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i];\n    }\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\n    len = this.dynamicProperties.length;\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue();\n    }\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n  };\n  CVShapeElement.prototype.addTransformToStyleList = function (transform) {\n    var i;\n    var len = this.stylesList.length;\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.push(transform);\n      }\n    }\n  };\n  CVShapeElement.prototype.removeTransformFromStyleList = function () {\n    var i;\n    var len = this.stylesList.length;\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.pop();\n      }\n    }\n  };\n  CVShapeElement.prototype.closeStyles = function (styles) {\n    var i;\n    var len = styles.length;\n    for (i = 0; i < len; i += 1) {\n      styles[i].closed = true;\n    }\n  };\n  CVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, shouldRender, transforms) {\n    var i;\n    var len = arr.length - 1;\n    var j;\n    var jLen;\n    var ownStyles = [];\n    var ownModifiers = [];\n    var processedPos;\n    var modifier;\n    var currentTransform;\n    var ownTransforms = [].concat(transforms);\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i]);\n      if (!processedPos) {\n        arr[i]._shouldRender = shouldRender;\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1];\n      }\n      if (arr[i].ty === \"fl\" || arr[i].ty === \"st\" || arr[i].ty === \"gf\" || arr[i].ty === \"gs\") {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\n        } else {\n          itemsData[i].style.closed = false;\n        }\n        ownStyles.push(itemsData[i].style);\n      } else if (arr[i].ty === \"gr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i]);\n        } else {\n          jLen = itemsData[i].it.length;\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j];\n          }\n        }\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms);\n      } else if (arr[i].ty === \"tr\") {\n        if (!processedPos) {\n          currentTransform = this.createTransformElement(arr[i]);\n          itemsData[i] = currentTransform;\n        }\n        ownTransforms.push(itemsData[i]);\n        this.addTransformToStyleList(itemsData[i]);\n      } else if (arr[i].ty === \"sh\" || arr[i].ty === \"rc\" || arr[i].ty === \"el\" || arr[i].ty === \"sr\") {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i]);\n        }\n      } else if (arr[i].ty === \"tm\" || arr[i].ty === \"rd\" || arr[i].ty === \"pb\") {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          modifier.init(this, arr[i]);\n          itemsData[i] = modifier;\n          this.shapeModifiers.push(modifier);\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = false;\n        }\n        ownModifiers.push(modifier);\n      } else if (arr[i].ty === \"rp\") {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty);\n          itemsData[i] = modifier;\n          modifier.init(this, arr, i, itemsData);\n          this.shapeModifiers.push(modifier);\n          shouldRender = false;\n        } else {\n          modifier = itemsData[i];\n          modifier.closed = true;\n        }\n        ownModifiers.push(modifier);\n      }\n      this.addProcessedElement(arr[i], i + 1);\n    }\n    this.removeTransformFromStyleList();\n    this.closeStyles(ownStyles);\n    len = ownModifiers.length;\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true;\n    }\n  };\n  CVShapeElement.prototype.renderInnerContent = function () {\n    this.transformHelper.opacity = 1;\n    this.transformHelper._opMdf = false;\n    this.renderModifiers();\n    this.transformsManager.processSequences(this._isFirstFrame);\n    this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);\n  };\n  CVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {\n    if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\n      groupTransform.opacity = parentTransform.opacity;\n      groupTransform.opacity *= groupTransform.op.v;\n      groupTransform._opMdf = true;\n    }\n  };\n  CVShapeElement.prototype.drawLayer = function () {\n    var i;\n    var len = this.stylesList.length;\n    var j;\n    var jLen;\n    var k;\n    var kLen;\n    var elems;\n    var nodes;\n    var renderer = this.globalData.renderer;\n    var ctx = this.globalData.canvasContext;\n    var type;\n    var currentStyle;\n    for (i = 0; i < len; i += 1) {\n      currentStyle = this.stylesList[i];\n      type = currentStyle.type;\n      if (!((type === \"st\" || type === \"gs\") && currentStyle.wi === 0 || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0)) {\n        renderer.save();\n        elems = currentStyle.elements;\n        if (type === \"st\" || type === \"gs\") {\n          ctx.strokeStyle = type === \"st\" ? currentStyle.co : currentStyle.grd;\n          ctx.lineWidth = currentStyle.wi;\n          ctx.lineCap = currentStyle.lc;\n          ctx.lineJoin = currentStyle.lj;\n          ctx.miterLimit = currentStyle.ml || 0;\n        } else {\n          ctx.fillStyle = type === \"fl\" ? currentStyle.co : currentStyle.grd;\n        }\n        renderer.ctxOpacity(currentStyle.coOp);\n        if (type !== \"st\" && type !== \"gs\") {\n          ctx.beginPath();\n        }\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\n        jLen = elems.length;\n        for (j = 0; j < jLen; j += 1) {\n          if (type === \"st\" || type === \"gs\") {\n            ctx.beginPath();\n            if (currentStyle.da) {\n              ctx.setLineDash(currentStyle.da);\n              ctx.lineDashOffset = currentStyle.do;\n            }\n          }\n          nodes = elems[j].trNodes;\n          kLen = nodes.length;\n          for (k = 0; k < kLen; k += 1) {\n            if (nodes[k].t === \"m\") {\n              ctx.moveTo(nodes[k].p[0], nodes[k].p[1]);\n            } else if (nodes[k].t === \"c\") {\n              ctx.bezierCurveTo(nodes[k].pts[0], nodes[k].pts[1], nodes[k].pts[2], nodes[k].pts[3], nodes[k].pts[4], nodes[k].pts[5]);\n            } else {\n              ctx.closePath();\n            }\n          }\n          if (type === \"st\" || type === \"gs\") {\n            ctx.stroke();\n            if (currentStyle.da) {\n              ctx.setLineDash(this.dashResetter);\n            }\n          }\n        }\n        if (type !== \"st\" && type !== \"gs\") {\n          ctx.fill(currentStyle.r);\n        }\n        renderer.restore();\n      }\n    }\n  };\n  CVShapeElement.prototype.renderShape = function (parentTransform, items, data, isMain) {\n    var i;\n    var len = items.length - 1;\n    var groupTransform;\n    groupTransform = parentTransform;\n    for (i = len; i >= 0; i -= 1) {\n      if (items[i].ty === \"tr\") {\n        groupTransform = data[i].transform;\n        this.renderShapeTransform(parentTransform, groupTransform);\n      } else if (items[i].ty === \"sh\" || items[i].ty === \"el\" || items[i].ty === \"rc\" || items[i].ty === \"sr\") {\n        this.renderPath(items[i], data[i]);\n      } else if (items[i].ty === \"fl\") {\n        this.renderFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty === \"st\") {\n        this.renderStroke(items[i], data[i], groupTransform);\n      } else if (items[i].ty === \"gf\" || items[i].ty === \"gs\") {\n        this.renderGradientFill(items[i], data[i], groupTransform);\n      } else if (items[i].ty === \"gr\") {\n        this.renderShape(groupTransform, items[i].it, data[i].it);\n      } else if (items[i].ty === \"tm\") ;\n    }\n    if (isMain) {\n      this.drawLayer();\n    }\n  };\n  CVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {\n    if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\n      var shapeNodes = styledShape.trNodes;\n      var paths = shape.paths;\n      var i;\n      var len;\n      var j;\n      var jLen = paths._length;\n      shapeNodes.length = 0;\n      var groupTransformMat = styledShape.transforms.finalTransform;\n      for (j = 0; j < jLen; j += 1) {\n        var pathNodes = paths.shapes[j];\n        if (pathNodes && pathNodes.v) {\n          len = pathNodes._length;\n          for (i = 1; i < len; i += 1) {\n            if (i === 1) {\n              shapeNodes.push({\n                t: \"m\",\n                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n              });\n            }\n            shapeNodes.push({\n              t: \"c\",\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\n            });\n          }\n          if (len === 1) {\n            shapeNodes.push({\n              t: \"m\",\n              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\n            });\n          }\n          if (pathNodes.c && len) {\n            shapeNodes.push({\n              t: \"c\",\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\n            });\n            shapeNodes.push({\n              t: \"z\"\n            });\n          }\n        }\n      }\n      styledShape.trNodes = shapeNodes;\n    }\n  };\n  CVShapeElement.prototype.renderPath = function (pathData, itemData) {\n    if (pathData.hd !== true && pathData._shouldRender) {\n      var i;\n      var len = itemData.styledShapes.length;\n      for (i = 0; i < len; i += 1) {\n        this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\n      }\n    }\n  };\n  CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = \"rgb(\" + bmFloor(itemData.c.v[0]) + \",\" + bmFloor(itemData.c.v[1]) + \",\" + bmFloor(itemData.c.v[2]) + \")\";\n    }\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n  };\n  CVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var grd;\n    if (!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf)) {\n      var ctx = this.globalData.canvasContext;\n      var pt1 = itemData.s.v;\n      var pt2 = itemData.e.v;\n      if (styleData.t === 1) {\n        grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\n      } else {\n        var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\n        var percent = itemData.h.v;\n        if (percent >= 1) {\n          percent = 0.99;\n        } else if (percent <= -1) {\n          percent = -0.99;\n        }\n        var dist = rad * percent;\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\n        grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\n      }\n      var i;\n      var len = styleData.g.p;\n      var cValues = itemData.g.c;\n      var opacity = 1;\n      for (i = 0; i < len; i += 1) {\n        if (itemData.g._hasOpacity && itemData.g._collapsable) {\n          opacity = itemData.g.o[i * 2 + 1];\n        }\n        grd.addColorStop(cValues[i * 4] / 100, \"rgba(\" + cValues[i * 4 + 1] + \",\" + cValues[i * 4 + 2] + \",\" + cValues[i * 4 + 3] + \",\" + opacity + \")\");\n      }\n      styleElem.grd = grd;\n    }\n    styleElem.coOp = itemData.o.v * groupTransform.opacity;\n  };\n  CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style;\n    var d = itemData.d;\n    if (d && (d._mdf || this._isFirstFrame)) {\n      styleElem.da = d.dashArray;\n      styleElem.do = d.dashoffset[0];\n    }\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co = \"rgb(\" + bmFloor(itemData.c.v[0]) + \",\" + bmFloor(itemData.c.v[1]) + \",\" + bmFloor(itemData.c.v[2]) + \")\";\n    }\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity;\n    }\n    if (itemData.w._mdf || this._isFirstFrame) {\n      styleElem.wi = itemData.w.v;\n    }\n  };\n  CVShapeElement.prototype.destroy = function () {\n    this.shapesData = null;\n    this.globalData = null;\n    this.canvasContext = null;\n    this.stylesList.length = 0;\n    this.itemsData.length = 0;\n  };\n  function CVTextElement(data, globalData, comp) {\n    this.textSpans = [];\n    this.yOffset = 0;\n    this.fillColorAnim = false;\n    this.strokeColorAnim = false;\n    this.strokeWidthAnim = false;\n    this.stroke = false;\n    this.fill = false;\n    this.justifyOffset = 0;\n    this.currentRender = null;\n    this.renderType = \"canvas\";\n    this.values = {\n      fill: \"rgba(0,0,0,0)\",\n      stroke: \"rgba(0,0,0,0)\",\n      sWidth: 0,\n      fValue: \"\"\n    };\n    this.initElement(data, globalData, comp);\n  }\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement);\n  CVTextElement.prototype.tHelper = createTag(\"canvas\").getContext(\"2d\");\n  CVTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData;\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\n    var hasFill = false;\n    if (documentData.fc) {\n      hasFill = true;\n      this.values.fill = this.buildColor(documentData.fc);\n    } else {\n      this.values.fill = \"rgba(0,0,0,0)\";\n    }\n    this.fill = hasFill;\n    var hasStroke = false;\n    if (documentData.sc) {\n      hasStroke = true;\n      this.values.stroke = this.buildColor(documentData.sc);\n      this.values.sWidth = documentData.sw;\n    }\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\n    var i;\n    var len;\n    var letters = documentData.l;\n    var matrixHelper = this.mHelper;\n    this.stroke = hasStroke;\n    this.values.fValue = documentData.finalSize + \"px \" + this.globalData.fontManager.getFontByName(documentData.f).fFamily;\n    len = documentData.finalText.length;\n    var charData;\n    var shapeData;\n    var k;\n    var kLen;\n    var shapes;\n    var j;\n    var jLen;\n    var pathNodes;\n    var commands;\n    var pathArr;\n    var singleShape = this.data.singleShape;\n    var trackingOffset = documentData.tr * 1e-3 * documentData.finalSize;\n    var xPos = 0;\n    var yPos = 0;\n    var firstLine = true;\n    var cnt = 0;\n    for (i = 0; i < len; i += 1) {\n      charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\n      shapeData = charData && charData.data || {};\n      matrixHelper.reset();\n      if (singleShape && letters[i].n) {\n        xPos = -trackingOffset;\n        yPos += documentData.yOffset;\n        yPos += firstLine ? 1 : 0;\n        firstLine = false;\n      }\n      shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\n      jLen = shapes.length;\n      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\n      if (singleShape) {\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\n      }\n      commands = createSizedArray(jLen - 1);\n      var commandsCounter = 0;\n      for (j = 0; j < jLen; j += 1) {\n        if (shapes[j].ty === \"sh\") {\n          kLen = shapes[j].ks.k.i.length;\n          pathNodes = shapes[j].ks.k;\n          pathArr = [];\n          for (k = 1; k < kLen; k += 1) {\n            if (k === 1) {\n              pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n            }\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0), matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0));\n          }\n          pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\n          commands[commandsCounter] = pathArr;\n          commandsCounter += 1;\n        }\n      }\n      if (singleShape) {\n        xPos += letters[i].l;\n        xPos += trackingOffset;\n      }\n      if (this.textSpans[cnt]) {\n        this.textSpans[cnt].elem = commands;\n      } else {\n        this.textSpans[cnt] = {\n          elem: commands\n        };\n      }\n      cnt += 1;\n    }\n  };\n  CVTextElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.font = this.values.fValue;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 4;\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\n    }\n    var i;\n    var len;\n    var j;\n    var jLen;\n    var k;\n    var kLen;\n    var renderedLetters = this.textAnimator.renderedLetters;\n    var letters = this.textProperty.currentData.l;\n    len = letters.length;\n    var renderedLetter;\n    var lastFill = null;\n    var lastStroke = null;\n    var lastStrokeW = null;\n    var commands;\n    var pathArr;\n    for (i = 0; i < len; i += 1) {\n      if (!letters[i].n) {\n        renderedLetter = renderedLetters[i];\n        if (renderedLetter) {\n          this.globalData.renderer.save();\n          this.globalData.renderer.ctxTransform(renderedLetter.p);\n          this.globalData.renderer.ctxOpacity(renderedLetter.o);\n        }\n        if (this.fill) {\n          if (renderedLetter && renderedLetter.fc) {\n            if (lastFill !== renderedLetter.fc) {\n              lastFill = renderedLetter.fc;\n              ctx.fillStyle = renderedLetter.fc;\n            }\n          } else if (lastFill !== this.values.fill) {\n            lastFill = this.values.fill;\n            ctx.fillStyle = this.values.fill;\n          }\n          commands = this.textSpans[i].elem;\n          jLen = commands.length;\n          this.globalData.canvasContext.beginPath();\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j];\n            kLen = pathArr.length;\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n            }\n          }\n          this.globalData.canvasContext.closePath();\n          this.globalData.canvasContext.fill();\n        }\n        if (this.stroke) {\n          if (renderedLetter && renderedLetter.sw) {\n            if (lastStrokeW !== renderedLetter.sw) {\n              lastStrokeW = renderedLetter.sw;\n              ctx.lineWidth = renderedLetter.sw;\n            }\n          } else if (lastStrokeW !== this.values.sWidth) {\n            lastStrokeW = this.values.sWidth;\n            ctx.lineWidth = this.values.sWidth;\n          }\n          if (renderedLetter && renderedLetter.sc) {\n            if (lastStroke !== renderedLetter.sc) {\n              lastStroke = renderedLetter.sc;\n              ctx.strokeStyle = renderedLetter.sc;\n            }\n          } else if (lastStroke !== this.values.stroke) {\n            lastStroke = this.values.stroke;\n            ctx.strokeStyle = this.values.stroke;\n          }\n          commands = this.textSpans[i].elem;\n          jLen = commands.length;\n          this.globalData.canvasContext.beginPath();\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j];\n            kLen = pathArr.length;\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\n            }\n          }\n          this.globalData.canvasContext.closePath();\n          this.globalData.canvasContext.stroke();\n        }\n        if (renderedLetter) {\n          this.globalData.renderer.restore();\n        }\n      }\n    }\n  };\n  function CVImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId);\n    this.img = globalData.imageLoader.getAsset(this.assetData);\n    this.initElement(data, globalData, comp);\n  }\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\n  CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n  CVImageElement.prototype.createContent = function () {\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\n      var canvas = createTag(\"canvas\");\n      canvas.width = this.assetData.w;\n      canvas.height = this.assetData.h;\n      var ctx = canvas.getContext(\"2d\");\n      var imgW = this.img.width;\n      var imgH = this.img.height;\n      var imgRel = imgW / imgH;\n      var canvasRel = this.assetData.w / this.assetData.h;\n      var widthCrop;\n      var heightCrop;\n      var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\n      if (imgRel > canvasRel && par === \"xMidYMid slice\" || imgRel < canvasRel && par !== \"xMidYMid slice\") {\n        heightCrop = imgH;\n        widthCrop = heightCrop * canvasRel;\n      } else {\n        widthCrop = imgW;\n        heightCrop = widthCrop / canvasRel;\n      }\n      ctx.drawImage(this.img, (imgW - widthCrop) / 2, (imgH - heightCrop) / 2, widthCrop, heightCrop, 0, 0, this.assetData.w, this.assetData.h);\n      this.img = canvas;\n    }\n  };\n  CVImageElement.prototype.renderInnerContent = function () {\n    this.canvasContext.drawImage(this.img, 0, 0);\n  };\n  CVImageElement.prototype.destroy = function () {\n    this.img = null;\n  };\n  function CVSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp);\n  }\n  extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\n  CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\n  CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\n  CVSolidElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.fillStyle = this.data.sc;\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\n  };\n  function CanvasRendererBase(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== void 0 ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || \"xMidYMid meet\",\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || \"xMidYMid slice\",\n      contentVisibility: config && config.contentVisibility || \"visible\",\n      className: config && config.className || \"\",\n      id: config && config.id || \"\"\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = \"canvas\";\n  }\n  extendPrototype([BaseRenderer], CanvasRendererBase);\n  CanvasRendererBase.prototype.createShape = function (data) {\n    return new CVShapeElement(data, this.globalData, this);\n  };\n  CanvasRendererBase.prototype.createText = function (data) {\n    return new CVTextElement(data, this.globalData, this);\n  };\n  CanvasRendererBase.prototype.createImage = function (data) {\n    return new CVImageElement(data, this.globalData, this);\n  };\n  CanvasRendererBase.prototype.createSolid = function (data) {\n    return new CVSolidElement(data, this.globalData, this);\n  };\n  CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull;\n  CanvasRendererBase.prototype.ctxTransform = function (props) {\n    if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {\n      return;\n    }\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13]);\n      return;\n    }\n    this.transformMat.cloneFromProps(props);\n    var cProps = this.contextData.cTr.props;\n    this.transformMat.transform(cProps[0], cProps[1], cProps[2], cProps[3], cProps[4], cProps[5], cProps[6], cProps[7], cProps[8], cProps[9], cProps[10], cProps[11], cProps[12], cProps[13], cProps[14], cProps[15]);\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\n    var trProps = this.contextData.cTr.props;\n    this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);\n  };\n  CanvasRendererBase.prototype.ctxOpacity = function (op) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n      return;\n    }\n    this.contextData.cO *= op < 0 ? 0 : op;\n    if (this.globalData.currentGlobalAlpha !== this.contextData.cO) {\n      this.canvasContext.globalAlpha = this.contextData.cO;\n      this.globalData.currentGlobalAlpha = this.contextData.cO;\n    }\n  };\n  CanvasRendererBase.prototype.reset = function () {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n    this.contextData.reset();\n  };\n  CanvasRendererBase.prototype.save = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.save();\n      return;\n    }\n    if (actionFlag) {\n      this.canvasContext.save();\n    }\n    var props = this.contextData.cTr.props;\n    if (this.contextData._length <= this.contextData.cArrPos) {\n      this.contextData.duplicate();\n    }\n    var i;\n    var arr = this.contextData.saved[this.contextData.cArrPos];\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = props[i];\n    }\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\n    this.contextData.cArrPos += 1;\n  };\n  CanvasRendererBase.prototype.restore = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore();\n      return;\n    }\n    if (actionFlag) {\n      this.canvasContext.restore();\n      this.globalData.blendMode = \"source-over\";\n    }\n    this.contextData.cArrPos -= 1;\n    var popped = this.contextData.saved[this.contextData.cArrPos];\n    var i;\n    var arr = this.contextData.cTr.props;\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = popped[i];\n    }\n    this.canvasContext.setTransform(popped[0], popped[1], popped[4], popped[5], popped[12], popped[13]);\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\n    this.contextData.cO = popped;\n    if (this.globalData.currentGlobalAlpha !== popped) {\n      this.canvasContext.globalAlpha = popped;\n      this.globalData.currentGlobalAlpha = popped;\n    }\n  };\n  CanvasRendererBase.prototype.configAnimation = function (animData) {\n    if (this.animationItem.wrapper) {\n      this.animationItem.container = createTag(\"canvas\");\n      var containerStyle = this.animationItem.container.style;\n      containerStyle.width = \"100%\";\n      containerStyle.height = \"100%\";\n      var origin = \"0px 0px 0px\";\n      containerStyle.transformOrigin = origin;\n      containerStyle.mozTransformOrigin = origin;\n      containerStyle.webkitTransformOrigin = origin;\n      containerStyle[\"-webkit-transform\"] = origin;\n      containerStyle.contentVisibility = this.renderConfig.contentVisibility;\n      this.animationItem.wrapper.appendChild(this.animationItem.container);\n      this.canvasContext = this.animationItem.container.getContext(\"2d\");\n      if (this.renderConfig.className) {\n        this.animationItem.container.setAttribute(\"class\", this.renderConfig.className);\n      }\n      if (this.renderConfig.id) {\n        this.animationItem.container.setAttribute(\"id\", this.renderConfig.id);\n      }\n    } else {\n      this.canvasContext = this.renderConfig.context;\n    }\n    this.data = animData;\n    this.layers = animData.layers;\n    this.transformCanvas = {\n      w: animData.w,\n      h: animData.h,\n      sx: 0,\n      sy: 0,\n      tx: 0,\n      ty: 0\n    };\n    this.setupGlobalData(animData, document.body);\n    this.globalData.canvasContext = this.canvasContext;\n    this.globalData.renderer = this;\n    this.globalData.isDashed = false;\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\n    this.globalData.transformCanvas = this.transformCanvas;\n    this.elements = createSizedArray(animData.layers.length);\n    this.updateContainerSize();\n  };\n  CanvasRendererBase.prototype.updateContainerSize = function () {\n    this.reset();\n    var elementWidth;\n    var elementHeight;\n    if (this.animationItem.wrapper && this.animationItem.container) {\n      elementWidth = this.animationItem.wrapper.offsetWidth;\n      elementHeight = this.animationItem.wrapper.offsetHeight;\n      this.animationItem.container.setAttribute(\"width\", elementWidth * this.renderConfig.dpr);\n      this.animationItem.container.setAttribute(\"height\", elementHeight * this.renderConfig.dpr);\n    } else {\n      elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\n      elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\n    }\n    var elementRel;\n    var animationRel;\n    if (this.renderConfig.preserveAspectRatio.indexOf(\"meet\") !== -1 || this.renderConfig.preserveAspectRatio.indexOf(\"slice\") !== -1) {\n      var par = this.renderConfig.preserveAspectRatio.split(\" \");\n      var fillType = par[1] || \"meet\";\n      var pos = par[0] || \"xMidYMid\";\n      var xPos = pos.substr(0, 4);\n      var yPos = pos.substr(4);\n      elementRel = elementWidth / elementHeight;\n      animationRel = this.transformCanvas.w / this.transformCanvas.h;\n      if (animationRel > elementRel && fillType === \"meet\" || animationRel < elementRel && fillType === \"slice\") {\n        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      } else {\n        this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      }\n      if (xPos === \"xMid\" && (animationRel < elementRel && fillType === \"meet\" || animationRel > elementRel && fillType === \"slice\")) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2 * this.renderConfig.dpr;\n      } else if (xPos === \"xMax\" && (animationRel < elementRel && fillType === \"meet\" || animationRel > elementRel && fillType === \"slice\")) {\n        this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.tx = 0;\n      }\n      if (yPos === \"YMid\" && (animationRel > elementRel && fillType === \"meet\" || animationRel < elementRel && fillType === \"slice\")) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2 * this.renderConfig.dpr;\n      } else if (yPos === \"YMax\" && (animationRel > elementRel && fillType === \"meet\" || animationRel < elementRel && fillType === \"slice\")) {\n        this.transformCanvas.ty = (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr;\n      } else {\n        this.transformCanvas.ty = 0;\n      }\n    } else if (this.renderConfig.preserveAspectRatio === \"none\") {\n      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\n      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    } else {\n      this.transformCanvas.sx = this.renderConfig.dpr;\n      this.transformCanvas.sy = this.renderConfig.dpr;\n      this.transformCanvas.tx = 0;\n      this.transformCanvas.ty = 0;\n    }\n    this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];\n    this.ctxTransform(this.transformCanvas.props);\n    this.canvasContext.beginPath();\n    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n    this.canvasContext.closePath();\n    this.canvasContext.clip();\n    this.renderFrame(this.renderedFrame, true);\n  };\n  CanvasRendererBase.prototype.destroy = function () {\n    if (this.renderConfig.clearCanvas && this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = \"\";\n    }\n    var i;\n    var len = this.layers ? this.layers.length : 0;\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n    this.elements.length = 0;\n    this.globalData.canvasContext = null;\n    this.animationItem.container = null;\n    this.destroyed = true;\n  };\n  CanvasRendererBase.prototype.renderFrame = function (num, forceRender) {\n    if (this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender || this.destroyed || num === -1) {\n      return;\n    }\n    this.renderedFrame = num;\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\n    this.globalData.frameId += 1;\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\n    this.globalData.projectInterface.currentFrame = num;\n    var i;\n    var len = this.layers.length;\n    if (!this.completeLayers) {\n      this.checkLayers(num);\n    }\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st);\n      }\n    }\n    if (this.globalData._mdf) {\n      if (this.renderConfig.clearCanvas === true) {\n        this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\n      } else {\n        this.save();\n      }\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame();\n        }\n      }\n      if (this.renderConfig.clearCanvas !== true) {\n        this.restore();\n      }\n    }\n  };\n  CanvasRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements;\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return;\n    }\n    var element = this.createItem(this.layers[pos], this, this.globalData);\n    elements[pos] = element;\n    element.initExpressions();\n  };\n  CanvasRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop();\n      element.checkParenting();\n    }\n  };\n  CanvasRendererBase.prototype.hide = function () {\n    this.animationItem.container.style.display = \"none\";\n  };\n  CanvasRendererBase.prototype.show = function () {\n    this.animationItem.container.style.display = \"block\";\n  };\n  function CVCompElement(data, globalData, comp) {\n    this.completeLayers = false;\n    this.layers = data.layers;\n    this.pendingElements = [];\n    this.elements = createSizedArray(this.layers.length);\n    this.initElement(data, globalData, comp);\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : {\n      _placeholder: true\n    };\n  }\n  extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement);\n  CVCompElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext;\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(this.data.w, 0);\n    ctx.lineTo(this.data.w, this.data.h);\n    ctx.lineTo(0, this.data.h);\n    ctx.lineTo(0, 0);\n    ctx.clip();\n    var i;\n    var len = this.layers.length;\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame();\n      }\n    }\n  };\n  CVCompElement.prototype.destroy = function () {\n    var i;\n    var len = this.layers.length;\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy();\n      }\n    }\n    this.layers = null;\n    this.elements = null;\n  };\n  CVCompElement.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this);\n  };\n  function CanvasRenderer(animationItem, config) {\n    this.animationItem = animationItem;\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== void 0 ? config.clearCanvas : true,\n      context: config && config.context || null,\n      progressiveLoad: config && config.progressiveLoad || false,\n      preserveAspectRatio: config && config.preserveAspectRatio || \"xMidYMid meet\",\n      imagePreserveAspectRatio: config && config.imagePreserveAspectRatio || \"xMidYMid slice\",\n      contentVisibility: config && config.contentVisibility || \"visible\",\n      className: config && config.className || \"\",\n      id: config && config.id || \"\"\n    };\n    this.renderConfig.dpr = config && config.dpr || 1;\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = config && config.dpr || window.devicePixelRatio || 1;\n    }\n    this.renderedFrame = -1;\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1\n    };\n    this.contextData = new CVContextData();\n    this.elements = [];\n    this.pendingElements = [];\n    this.transformMat = new Matrix();\n    this.completeLayers = false;\n    this.rendererType = \"canvas\";\n  }\n  extendPrototype([CanvasRendererBase], CanvasRenderer);\n  CanvasRenderer.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this);\n  };\n  registerRenderer(\"canvas\", CanvasRenderer);\n  ShapeModifiers.registerModifier(\"tm\", TrimModifier);\n  ShapeModifiers.registerModifier(\"pb\", PuckerAndBloatModifier);\n  ShapeModifiers.registerModifier(\"rp\", RepeaterModifier);\n  ShapeModifiers.registerModifier(\"rd\", RoundCornersModifier);\n  const Expressions = function () {\n    var ob = {};\n    ob.initExpressions = initExpressions;\n    function initExpressions(animation) {\n      var stackCount = 0;\n      var registers = [];\n      function pushExpression() {\n        stackCount += 1;\n      }\n      function popExpression() {\n        stackCount -= 1;\n        if (stackCount === 0) {\n          releaseInstances();\n        }\n      }\n      function registerExpressionProperty(expression) {\n        if (registers.indexOf(expression) === -1) {\n          registers.push(expression);\n        }\n      }\n      function releaseInstances() {\n        var i;\n        var len = registers.length;\n        for (i = 0; i < len; i += 1) {\n          registers[i].release();\n        }\n        registers.length = 0;\n      }\n      animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\n      animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\n      animation.renderer.globalData.pushExpression = pushExpression;\n      animation.renderer.globalData.popExpression = popExpression;\n      animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\n    }\n    return ob;\n  }();\n  function seedRandom(pool, math) {\n    var global = this,\n      width = 256,\n      chunks = 6,\n      digits = 52,\n      rngname = \"random\",\n      startdenom = math.pow(width, chunks),\n      significance = math.pow(2, digits),\n      overflow = significance * 2,\n      mask = width - 1,\n      nodecrypto;\n    function seedrandom(seed, options, callback) {\n      var key = [];\n      options = options === true ? {\n        entropy: true\n      } : options || {};\n      var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3), key);\n      var arc4 = new ARC4(key);\n      var prng = function () {\n        var n = arc4.g(chunks),\n          d = startdenom,\n          x = 0;\n        while (n < significance) {\n          n = (n + x) * width;\n          d *= width;\n          x = arc4.g(1);\n        }\n        while (n >= overflow) {\n          n /= 2;\n          d /= 2;\n          x >>>= 1;\n        }\n        return (n + x) / d;\n      };\n      prng.int32 = function () {\n        return arc4.g(4) | 0;\n      };\n      prng.quick = function () {\n        return arc4.g(4) / 4294967296;\n      };\n      prng.double = prng;\n      mixkey(tostring(arc4.S), pool);\n      return (options.pass || callback || function (prng2, seed2, is_math_call, state) {\n        if (state) {\n          if (state.S) {\n            copy(state, arc4);\n          }\n          prng2.state = function () {\n            return copy(arc4, {});\n          };\n        }\n        if (is_math_call) {\n          math[rngname] = prng2;\n          return seed2;\n        } else return prng2;\n      })(prng, shortseed, \"global\" in options ? options.global : this == math, options.state);\n    }\n    math[\"seed\" + rngname] = seedrandom;\n    function ARC4(key) {\n      var t,\n        keylen = key.length,\n        me = this,\n        i = 0,\n        j = me.i = me.j = 0,\n        s = me.S = [];\n      if (!keylen) {\n        key = [keylen++];\n      }\n      while (i < width) {\n        s[i] = i++;\n      }\n      for (i = 0; i < width; i++) {\n        s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n        s[j] = t;\n      }\n      me.g = function (count) {\n        var t2,\n          r = 0,\n          i2 = me.i,\n          j2 = me.j,\n          s2 = me.S;\n        while (count--) {\n          t2 = s2[i2 = mask & i2 + 1];\n          r = r * width + s2[mask & (s2[i2] = s2[j2 = mask & j2 + t2]) + (s2[j2] = t2)];\n        }\n        me.i = i2;\n        me.j = j2;\n        return r;\n      };\n    }\n    function copy(f, t) {\n      t.i = f.i;\n      t.j = f.j;\n      t.S = f.S.slice();\n      return t;\n    }\n    function flatten(obj, depth) {\n      var result = [],\n        typ = typeof obj,\n        prop;\n      if (depth && typ == \"object\") {\n        for (prop in obj) {\n          try {\n            result.push(flatten(obj[prop], depth - 1));\n          } catch (e) {}\n        }\n      }\n      return result.length ? result : typ == \"string\" ? obj : obj + \"\\0\";\n    }\n    function mixkey(seed, key) {\n      var stringseed = seed + \"\",\n        smear,\n        j = 0;\n      while (j < stringseed.length) {\n        key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n      }\n      return tostring(key);\n    }\n    function autoseed() {\n      try {\n        if (nodecrypto) ;\n        var out = new Uint8Array(width);\n        (global.crypto || global.msCrypto).getRandomValues(out);\n        return tostring(out);\n      } catch (e) {\n        var browser = global.navigator,\n          plugins = browser && browser.plugins;\n        return [+ /* @__PURE__ */new Date(), global, plugins, global.screen, tostring(pool)];\n      }\n    }\n    function tostring(a) {\n      return String.fromCharCode.apply(0, a);\n    }\n    mixkey(math.random(), pool);\n  }\n  function initialize$2(BMMath2) {\n    seedRandom([], BMMath2);\n  }\n  const ExpressionManager = function () {\n    var ob = {};\n    var Math2 = BMMath;\n    var window2 = null;\n    var document2 = null;\n    var XMLHttpRequest2 = null;\n    var fetch = null;\n    var frames = null;\n    initialize$2(BMMath);\n    function $bm_isInstanceOfArray(arr) {\n      return arr.constructor === Array || arr.constructor === Float32Array;\n    }\n    function isNumerable(tOfV, v) {\n      return tOfV === \"number\" || tOfV === \"boolean\" || tOfV === \"string\" || v instanceof Number;\n    }\n    function $bm_neg(a) {\n      var tOfA = typeof a;\n      if (tOfA === \"number\" || tOfA === \"boolean\" || a instanceof Number) {\n        return -a;\n      }\n      if ($bm_isInstanceOfArray(a)) {\n        var i;\n        var lenA = a.length;\n        var retArr = [];\n        for (i = 0; i < lenA; i += 1) {\n          retArr[i] = -a[i];\n        }\n        return retArr;\n      }\n      if (a.propType) {\n        return a.v;\n      }\n      return -a;\n    }\n    BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, \"easeIn\").get;\n    BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, \"easeOut\").get;\n    BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, \"easeInOut\").get;\n    function sum(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      if (tOfA === \"string\" || tOfB === \"string\") {\n        return a + b;\n      }\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a + b;\n      }\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] += b;\n        return a;\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a + b[0];\n        return b;\n      }\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0;\n        var lenA = a.length;\n        var lenB = b.length;\n        var retArr = [];\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === \"number\" || a[i] instanceof Number) && (typeof b[i] === \"number\" || b[i] instanceof Number)) {\n            retArr[i] = a[i] + b[i];\n          } else {\n            retArr[i] = b[i] === void 0 ? a[i] : a[i] || b[i];\n          }\n          i += 1;\n        }\n        return retArr;\n      }\n      return 0;\n    }\n    var add = sum;\n    function sub(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        if (tOfA === \"string\") {\n          a = parseInt(a, 10);\n        }\n        if (tOfB === \"string\") {\n          b = parseInt(b, 10);\n        }\n        return a - b;\n      }\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0);\n        a[0] -= b;\n        return a;\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0);\n        b[0] = a - b[0];\n        return b;\n      }\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0;\n        var lenA = a.length;\n        var lenB = b.length;\n        var retArr = [];\n        while (i < lenA || i < lenB) {\n          if ((typeof a[i] === \"number\" || a[i] instanceof Number) && (typeof b[i] === \"number\" || b[i] instanceof Number)) {\n            retArr[i] = a[i] - b[i];\n          } else {\n            retArr[i] = b[i] === void 0 ? a[i] : a[i] || b[i];\n          }\n          i += 1;\n        }\n        return retArr;\n      }\n      return 0;\n    }\n    function mul(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      var arr;\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a * b;\n      }\n      var i;\n      var len;\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray(\"float32\", len);\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] * b;\n        }\n        return arr;\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray(\"float32\", len);\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a * b[i];\n        }\n        return arr;\n      }\n      return 0;\n    }\n    function div(a, b) {\n      var tOfA = typeof a;\n      var tOfB = typeof b;\n      var arr;\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a / b;\n      }\n      var i;\n      var len;\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length;\n        arr = createTypedArray(\"float32\", len);\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] / b;\n        }\n        return arr;\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length;\n        arr = createTypedArray(\"float32\", len);\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a / b[i];\n        }\n        return arr;\n      }\n      return 0;\n    }\n    function mod(a, b) {\n      if (typeof a === \"string\") {\n        a = parseInt(a, 10);\n      }\n      if (typeof b === \"string\") {\n        b = parseInt(b, 10);\n      }\n      return a % b;\n    }\n    var $bm_sum = sum;\n    var $bm_sub = sub;\n    var $bm_mul = mul;\n    var $bm_div = div;\n    var $bm_mod = mod;\n    function clamp(num, min, max) {\n      if (min > max) {\n        var mm = max;\n        max = min;\n        min = mm;\n      }\n      return Math2.min(Math2.max(num, min), max);\n    }\n    function radiansToDegrees(val) {\n      return val / degToRads;\n    }\n    var radians_to_degrees = radiansToDegrees;\n    function degreesToRadians(val) {\n      return val * degToRads;\n    }\n    var degrees_to_radians = radiansToDegrees;\n    var helperLengthArray = [0, 0, 0, 0, 0, 0];\n    function length(arr1, arr2) {\n      if (typeof arr1 === \"number\" || arr1 instanceof Number) {\n        arr2 = arr2 || 0;\n        return Math2.abs(arr1 - arr2);\n      }\n      if (!arr2) {\n        arr2 = helperLengthArray;\n      }\n      var i;\n      var len = Math2.min(arr1.length, arr2.length);\n      var addedLength = 0;\n      for (i = 0; i < len; i += 1) {\n        addedLength += Math2.pow(arr2[i] - arr1[i], 2);\n      }\n      return Math2.sqrt(addedLength);\n    }\n    function normalize(vec) {\n      return div(vec, length(vec));\n    }\n    function rgbToHsl(val) {\n      var r = val[0];\n      var g = val[1];\n      var b = val[2];\n      var max = Math2.max(r, g, b);\n      var min = Math2.min(r, g, b);\n      var h;\n      var s;\n      var l = (max + min) / 2;\n      if (max === min) {\n        h = 0;\n        s = 0;\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n      return [h, s, l, val[3]];\n    }\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n    function hslToRgb(val) {\n      var h = val[0];\n      var s = val[1];\n      var l = val[2];\n      var r;\n      var g;\n      var b;\n      if (s === 0) {\n        r = l;\n        b = l;\n        g = l;\n      } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n      }\n      return [r, g, b, val[3]];\n    }\n    function linear(t, tMin, tMax, value1, value2) {\n      if (value1 === void 0 || value2 === void 0) {\n        value1 = tMin;\n        value2 = tMax;\n        tMin = 0;\n        tMax = 1;\n      }\n      if (tMax < tMin) {\n        var _tMin = tMax;\n        tMax = tMin;\n        tMin = _tMin;\n      }\n      if (t <= tMin) {\n        return value1;\n      }\n      if (t >= tMax) {\n        return value2;\n      }\n      var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin);\n      if (!value1.length) {\n        return value1 + (value2 - value1) * perc;\n      }\n      var i;\n      var len = value1.length;\n      var arr = createTypedArray(\"float32\", len);\n      for (i = 0; i < len; i += 1) {\n        arr[i] = value1[i] + (value2[i] - value1[i]) * perc;\n      }\n      return arr;\n    }\n    function random(min, max) {\n      if (max === void 0) {\n        if (min === void 0) {\n          min = 0;\n          max = 1;\n        } else {\n          max = min;\n          min = void 0;\n        }\n      }\n      if (max.length) {\n        var i;\n        var len = max.length;\n        if (!min) {\n          min = createTypedArray(\"float32\", len);\n        }\n        var arr = createTypedArray(\"float32\", len);\n        var rnd = BMMath.random();\n        for (i = 0; i < len; i += 1) {\n          arr[i] = min[i] + rnd * (max[i] - min[i]);\n        }\n        return arr;\n      }\n      if (min === void 0) {\n        min = 0;\n      }\n      var rndm = BMMath.random();\n      return min + rndm * (max - min);\n    }\n    function createPath(points, inTangents, outTangents, closed) {\n      var i;\n      var len = points.length;\n      var path = shapePool.newElement();\n      path.setPathData(!!closed, len);\n      var arrPlaceholder = [0, 0];\n      var inVertexPoint;\n      var outVertexPoint;\n      for (i = 0; i < len; i += 1) {\n        inVertexPoint = inTangents && inTangents[i] ? inTangents[i] : arrPlaceholder;\n        outVertexPoint = outTangents && outTangents[i] ? outTangents[i] : arrPlaceholder;\n        path.setTripleAt(points[i][0], points[i][1], outVertexPoint[0] + points[i][0], outVertexPoint[1] + points[i][1], inVertexPoint[0] + points[i][0], inVertexPoint[1] + points[i][1], i, true);\n      }\n      return path;\n    }\n    function noOp(_value) {\n      return _value;\n    }\n    function initiateExpression(elem, data, property) {\n      return noOp;\n    }\n    ob.initiateExpression = initiateExpression;\n    ob.__preventDeadCodeRemoval = [window2, document2, XMLHttpRequest2, fetch, frames, $bm_neg, add, $bm_sum, $bm_sub, $bm_mul, $bm_div, $bm_mod, clamp, radians_to_degrees, degreesToRadians, degrees_to_radians, normalize, rgbToHsl, hslToRgb, linear, random, createPath];\n    return ob;\n  }();\n  const expressionHelpers = function () {\n    function searchExpressions(elem, data, prop) {\n      if (data.x) {\n        prop.k = true;\n        prop.x = true;\n        prop.initiateExpression = ExpressionManager.initiateExpression;\n        prop.effectsSequence.push(prop.initiateExpression(elem, data, prop).bind(prop));\n      }\n    }\n    function getValueAtTime(frameNum) {\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\n        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\n        this._cachingAtTime.lastFrame = frameNum;\n      }\n      return this._cachingAtTime.value;\n    }\n    function getSpeedAtTime(frameNum) {\n      var delta = -0.01;\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var speed = 0;\n      if (v1.length) {\n        var i;\n        for (i = 0; i < v1.length; i += 1) {\n          speed += Math.pow(v2[i] - v1[i], 2);\n        }\n        speed = Math.sqrt(speed) * 100;\n      } else {\n        speed = 0;\n      }\n      return speed;\n    }\n    function getVelocityAtTime(frameNum) {\n      if (this.vel !== void 0) {\n        return this.vel;\n      }\n      var delta = -1e-3;\n      var v1 = this.getValueAtTime(frameNum);\n      var v2 = this.getValueAtTime(frameNum + delta);\n      var velocity;\n      if (v1.length) {\n        velocity = createTypedArray(\"float32\", v1.length);\n        var i;\n        for (i = 0; i < v1.length; i += 1) {\n          velocity[i] = (v2[i] - v1[i]) / delta;\n        }\n      } else {\n        velocity = (v2 - v1) / delta;\n      }\n      return velocity;\n    }\n    function getStaticValueAtTime() {\n      return this.pv;\n    }\n    function setGroupProperty(propertyGroup) {\n      this.propertyGroup = propertyGroup;\n    }\n    return {\n      searchExpressions,\n      getSpeedAtTime,\n      getVelocityAtTime,\n      getValueAtTime,\n      getStaticValueAtTime,\n      setGroupProperty\n    };\n  }();\n  function addPropertyDecorator() {\n    function loopOut(type, duration, durationFlag) {\n      if (!this.k || !this.keyframes) {\n        return this.pv;\n      }\n      type = type ? type.toLowerCase() : \"\";\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var lastKeyFrame = keyframes[keyframes.length - 1].t;\n      if (currentFrame <= lastKeyFrame) {\n        return this.pv;\n      }\n      var cycleDuration;\n      var firstKeyFrame;\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1;\n        }\n        firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\n        cycleDuration = lastKeyFrame - firstKeyFrame;\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip);\n        } else {\n          cycleDuration = Math.abs(lastKeyFrame - this.elem.comp.globalData.frameRate * duration);\n        }\n        firstKeyFrame = lastKeyFrame - cycleDuration;\n      }\n      var i;\n      var len;\n      var ret;\n      if (type === \"pingpong\") {\n        var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n        if (iterations % 2 !== 0) {\n          return this.getValueAtTime((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        }\n      } else if (type === \"offset\") {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\n        if (this.pv.length) {\n          ret = new Array(initV.length);\n          len = ret.length;\n          for (i = 0; i < len; i += 1) {\n            ret[i] = (endV[i] - initV[i]) * repeats + current[i];\n          }\n          return ret;\n        }\n        return (endV - initV) * repeats + current;\n      } else if (type === \"continue\") {\n        var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var nextLastValue = this.getValueAtTime((lastKeyFrame - 1e-3) / this.comp.globalData.frameRate, 0);\n        if (this.pv.length) {\n          ret = new Array(lastValue.length);\n          len = ret.length;\n          for (i = 0; i < len; i += 1) {\n            ret[i] = lastValue[i] + (lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate) / 5e-4;\n          }\n          return ret;\n        }\n        return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 1e-3);\n      }\n      return this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n    }\n    function loopIn(type, duration, durationFlag) {\n      if (!this.k) {\n        return this.pv;\n      }\n      type = type ? type.toLowerCase() : \"\";\n      var currentFrame = this.comp.renderedFrame;\n      var keyframes = this.keyframes;\n      var firstKeyFrame = keyframes[0].t;\n      if (currentFrame >= firstKeyFrame) {\n        return this.pv;\n      }\n      var cycleDuration;\n      var lastKeyFrame;\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1;\n        }\n        lastKeyFrame = keyframes[duration].t;\n        cycleDuration = lastKeyFrame - firstKeyFrame;\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame);\n        } else {\n          cycleDuration = Math.abs(this.elem.comp.globalData.frameRate * duration);\n        }\n        lastKeyFrame = firstKeyFrame + cycleDuration;\n      }\n      var i;\n      var len;\n      var ret;\n      if (type === \"pingpong\") {\n        var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration);\n        if (iterations % 2 === 0) {\n          return this.getValueAtTime(((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        }\n      } else if (type === \"offset\") {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\n        var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0);\n        var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1;\n        if (this.pv.length) {\n          ret = new Array(initV.length);\n          len = ret.length;\n          for (i = 0; i < len; i += 1) {\n            ret[i] = current[i] - (endV[i] - initV[i]) * repeats;\n          }\n          return ret;\n        }\n        return current - (endV - initV) * repeats;\n      } else if (type === \"continue\") {\n        var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\n        var nextFirstValue = this.getValueAtTime((firstKeyFrame + 1e-3) / this.comp.globalData.frameRate, 0);\n        if (this.pv.length) {\n          ret = new Array(firstValue.length);\n          len = ret.length;\n          for (i = 0; i < len; i += 1) {\n            ret[i] = firstValue[i] + (firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame) / 1e-3;\n          }\n          return ret;\n        }\n        return firstValue + (firstValue - nextFirstValue) * (firstKeyFrame - currentFrame) / 1e-3;\n      }\n      return this.getValueAtTime((cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame)) / this.comp.globalData.frameRate, 0);\n    }\n    function smooth(width, samples) {\n      if (!this.k) {\n        return this.pv;\n      }\n      width = (width || 0.4) * 0.5;\n      samples = Math.floor(samples || 5);\n      if (samples <= 1) {\n        return this.pv;\n      }\n      var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\n      var initFrame = currentTime - width;\n      var endFrame = currentTime + width;\n      var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\n      var i = 0;\n      var j = 0;\n      var value;\n      if (this.pv.length) {\n        value = createTypedArray(\"float32\", this.pv.length);\n      } else {\n        value = 0;\n      }\n      var sampleValue;\n      while (i < samples) {\n        sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\n        if (this.pv.length) {\n          for (j = 0; j < this.pv.length; j += 1) {\n            value[j] += sampleValue[j];\n          }\n        } else {\n          value += sampleValue;\n        }\n        i += 1;\n      }\n      if (this.pv.length) {\n        for (j = 0; j < this.pv.length; j += 1) {\n          value[j] /= samples;\n        }\n      } else {\n        value /= samples;\n      }\n      return value;\n    }\n    function getTransformValueAtTime(time) {\n      if (!this._transformCachingAtTime) {\n        this._transformCachingAtTime = {\n          v: new Matrix()\n        };\n      }\n      var matrix = this._transformCachingAtTime.v;\n      matrix.cloneFromProps(this.pre.props);\n      if (this.appliedTransformations < 1) {\n        var anchor = this.a.getValueAtTime(time);\n        matrix.translate(-anchor[0] * this.a.mult, -anchor[1] * this.a.mult, anchor[2] * this.a.mult);\n      }\n      if (this.appliedTransformations < 2) {\n        var scale = this.s.getValueAtTime(time);\n        matrix.scale(scale[0] * this.s.mult, scale[1] * this.s.mult, scale[2] * this.s.mult);\n      }\n      if (this.sk && this.appliedTransformations < 3) {\n        var skew = this.sk.getValueAtTime(time);\n        var skewAxis = this.sa.getValueAtTime(time);\n        matrix.skewFromAxis(-skew * this.sk.mult, skewAxis * this.sa.mult);\n      }\n      if (this.r && this.appliedTransformations < 4) {\n        var rotation = this.r.getValueAtTime(time);\n        matrix.rotate(-rotation * this.r.mult);\n      } else if (!this.r && this.appliedTransformations < 4) {\n        var rotationZ = this.rz.getValueAtTime(time);\n        var rotationY = this.ry.getValueAtTime(time);\n        var rotationX = this.rx.getValueAtTime(time);\n        var orientation = this.or.getValueAtTime(time);\n        matrix.rotateZ(-rotationZ * this.rz.mult).rotateY(rotationY * this.ry.mult).rotateX(rotationX * this.rx.mult).rotateZ(-orientation[2] * this.or.mult).rotateY(orientation[1] * this.or.mult).rotateX(orientation[0] * this.or.mult);\n      }\n      if (this.data.p && this.data.p.s) {\n        var positionX = this.px.getValueAtTime(time);\n        var positionY = this.py.getValueAtTime(time);\n        if (this.data.p.z) {\n          var positionZ = this.pz.getValueAtTime(time);\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, -positionZ * this.pz.mult);\n        } else {\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, 0);\n        }\n      } else {\n        var position = this.p.getValueAtTime(time);\n        matrix.translate(position[0] * this.p.mult, position[1] * this.p.mult, -position[2] * this.p.mult);\n      }\n      return matrix;\n    }\n    function getTransformStaticValueAtTime() {\n      return this.v.clone(new Matrix());\n    }\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\n    TransformPropertyFactory.getTransformProperty = function (elem, data, container) {\n      var prop = getTransformProperty(elem, data, container);\n      if (prop.dynamicProperties.length) {\n        prop.getValueAtTime = getTransformValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\n      }\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      return prop;\n    };\n    var propertyGetProp = PropertyFactory.getProp;\n    PropertyFactory.getProp = function (elem, data, type, mult, container) {\n      var prop = propertyGetProp(elem, data, type, mult, container);\n      if (prop.kf) {\n        prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\n      } else {\n        prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\n      }\n      prop.setGroupProperty = expressionHelpers.setGroupProperty;\n      prop.loopOut = loopOut;\n      prop.loopIn = loopIn;\n      prop.smooth = smooth;\n      prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\n      prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\n      prop.numKeys = data.a === 1 ? data.k.length : 0;\n      prop.propertyIndex = data.ix;\n      var value = 0;\n      if (type !== 0) {\n        value = createTypedArray(\"float32\", data.a === 1 ? data.k[0].s.length : data.k.length);\n      }\n      prop._cachingAtTime = {\n        lastFrame: initialDefaultFrame,\n        lastIndex: 0,\n        value\n      };\n      expressionHelpers.searchExpressions(elem, data, prop);\n      if (prop.k) {\n        container.addDynamicProperty(prop);\n      }\n      return prop;\n    };\n    function getShapeValueAtTime(frameNum) {\n      if (!this._cachingAtTime) {\n        this._cachingAtTime = {\n          shapeValue: shapePool.clone(this.pv),\n          lastIndex: 0,\n          lastTime: initialDefaultFrame\n        };\n      }\n      frameNum *= this.elem.globalData.frameRate;\n      frameNum -= this.offsetTime;\n      if (frameNum !== this._cachingAtTime.lastTime) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\n        this._cachingAtTime.lastTime = frameNum;\n        this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\n      }\n      return this._cachingAtTime.shapeValue;\n    }\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\n    function ShapeExpressions() {}\n    ShapeExpressions.prototype = {\n      vertices: function (prop, time) {\n        if (this.k) {\n          this.getValue();\n        }\n        var shapePath = this.v;\n        if (time !== void 0) {\n          shapePath = this.getValueAtTime(time, 0);\n        }\n        var i;\n        var len = shapePath._length;\n        var vertices = shapePath[prop];\n        var points = shapePath.v;\n        var arr = createSizedArray(len);\n        for (i = 0; i < len; i += 1) {\n          if (prop === \"i\" || prop === \"o\") {\n            arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\n          } else {\n            arr[i] = [vertices[i][0], vertices[i][1]];\n          }\n        }\n        return arr;\n      },\n      points: function (time) {\n        return this.vertices(\"v\", time);\n      },\n      inTangents: function (time) {\n        return this.vertices(\"i\", time);\n      },\n      outTangents: function (time) {\n        return this.vertices(\"o\", time);\n      },\n      isClosed: function () {\n        return this.v.c;\n      },\n      pointOnPath: function (perc, time) {\n        var shapePath = this.v;\n        if (time !== void 0) {\n          shapePath = this.getValueAtTime(time, 0);\n        }\n        if (!this._segmentsLength) {\n          this._segmentsLength = bez.getSegmentsLength(shapePath);\n        }\n        var segmentsLength = this._segmentsLength;\n        var lengths = segmentsLength.lengths;\n        var lengthPos = segmentsLength.totalLength * perc;\n        var i = 0;\n        var len = lengths.length;\n        var accumulatedLength = 0;\n        var pt;\n        while (i < len) {\n          if (accumulatedLength + lengths[i].addedLength > lengthPos) {\n            var initIndex = i;\n            var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1;\n            var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength;\n            pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\n            break;\n          } else {\n            accumulatedLength += lengths[i].addedLength;\n          }\n          i += 1;\n        }\n        if (!pt) {\n          pt = shapePath.c ? [shapePath.v[0][0], shapePath.v[0][1]] : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]];\n        }\n        return pt;\n      },\n      vectorOnPath: function (perc, time, vectorType) {\n        if (perc == 1) {\n          perc = this.v.c;\n        } else if (perc == 0) {\n          perc = 0.999;\n        }\n        var pt1 = this.pointOnPath(perc, time);\n        var pt2 = this.pointOnPath(perc + 1e-3, time);\n        var xLength = pt2[0] - pt1[0];\n        var yLength = pt2[1] - pt1[1];\n        var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2));\n        if (magnitude === 0) {\n          return [0, 0];\n        }\n        var unitVector = vectorType === \"tangent\" ? [xLength / magnitude, yLength / magnitude] : [-yLength / magnitude, xLength / magnitude];\n        return unitVector;\n      },\n      tangentOnPath: function (perc, time) {\n        return this.vectorOnPath(perc, time, \"tangent\");\n      },\n      normalOnPath: function (perc, time) {\n        return this.vectorOnPath(perc, time, \"normal\");\n      },\n      setGroupProperty: expressionHelpers.setGroupProperty,\n      getValueAtTime: expressionHelpers.getStaticValueAtTime\n    };\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\n    ShapePropertyFactory.getShapeProp = function (elem, data, type, arr, trims) {\n      var prop = propertyGetShapeProp(elem, data, type, arr, trims);\n      prop.propertyIndex = data.ix;\n      prop.lock = false;\n      if (type === 3) {\n        expressionHelpers.searchExpressions(elem, data.pt, prop);\n      } else if (type === 4) {\n        expressionHelpers.searchExpressions(elem, data.ks, prop);\n      }\n      if (prop.k) {\n        elem.addDynamicProperty(prop);\n      }\n      return prop;\n    };\n  }\n  function initialize$1() {\n    addPropertyDecorator();\n  }\n  function addDecorator() {\n    function searchExpressions() {\n      if (this.data.d.x) {\n        this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this);\n        this.addEffect(this.getExpressionValue.bind(this));\n        return true;\n      }\n      return null;\n    }\n    TextProperty.prototype.getExpressionValue = function (currentValue, text) {\n      var newValue = this.calculateExpression(text);\n      if (currentValue.t !== newValue) {\n        var newData = {};\n        this.copyData(newData, currentValue);\n        newData.t = newValue.toString();\n        newData.__complete = false;\n        return newData;\n      }\n      return currentValue;\n    };\n    TextProperty.prototype.searchProperty = function () {\n      var isKeyframed = this.searchKeyframes();\n      var hasExpressions = this.searchExpressions();\n      this.kf = isKeyframed || hasExpressions;\n      return this.kf;\n    };\n    TextProperty.prototype.searchExpressions = searchExpressions;\n  }\n  function initialize() {\n    addDecorator();\n  }\n  setExpressionsPlugin(Expressions);\n  initialize$1();\n  initialize();\n  return lottie2;\n})();\nexport { lottie as default };","map":{"version":3,"names":["lottie","navigator","document","CanvasRenderingContext2D","svgNS","locationHref","_useWebWorker","initialDefaultFrame","setWebWorker","flag","getWebWorker","setLocationHref","value","getLocationHref","createTag","type","createElement","extendPrototype","sources","destination","i","len","length","sourcePrototype","prototype","attr","Object","hasOwnProperty","call","getDescriptor","object","prop","getOwnPropertyDescriptor","createProxyFunction","ProxyFunction","audioControllerFactory","AudioController","audioFactory","audios","_volume","_isMuted","addAudio","audio","push","pause","resume","setRate","rateValue","createAudio","assetPath","window","Howl","src","isPlaying","play","seek","playing","rate","setVolume","setAudioFactory","_updateVolume","mute","unmute","getVolume","volume","createTypedArray","createRegularArray","arr","createTypedArrayFactory","Float32Array","Int16Array","Uint8ClampedArray","createSizedArray","Array","apply","subframeEnabled","expressionsPlugin","idPrefix$1","isSafari","test","userAgent","bmPow","Math","pow","bmSqrt","sqrt","bmFloor","floor","bmMin","min","BMMath","propertyNames","random","abs","val","tOfVal","absArr","defaultCurveSegments","degToRads","PI","roundCorner","BMEnterFrameEvent","currentTime","totalTime","frameMultiplier","direction","BMCompleteEvent","BMCompleteLoopEvent","totalLoops","currentLoop","BMSegmentStartEvent","firstFrame","totalFrames","BMDestroyEvent","target","BMRenderFrameErrorEvent","nativeError","BMConfigErrorEvent","createElementID","_count","createID","HSVtoRGB","h","s","v","r","g","b","f","p","q","t","RGBtoHSV","max","d","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","colorMap","hex","toString","setSubframeEnabled","getSubframeEnabled","setExpressionsPlugin","getExpressionsPlugin","setDefaultCurveSegments","getDefaultCurveSegments","setIdPrefix","createNS","createElementNS","dataManager","_counterId","processes","workerFn","workerInstance","workerProxy","onmessage","postMessage","path","data","_workerSelf","createWorker","fn","Worker","Blob","blob","url","URL","createObjectURL","setupWorker","workerStart","e","dataFunctionManager","completeLayers","layers","comps","layerData","j","jLen","k","kLen","completed","tt","td","hasMask","maskProps","masksProperties","pt","convertPathsToAbsoluteValues","ty","findCompLayers","refId","completeShapes","shapes","completeText","completeChars","chars","assets","findComp","id","comp","__used","JSON","parse","stringify","ks","it","o","checkVersion","minimum","animVersionString","animVersion","split","checkText","minimumVersion","updateTextLayer","textLayer","documentData","iterateLayers","animationData","checkChars","charData","ip","op","st","sr","a","sk","sa","checkPathProperties","pathData","checkColors","iterateShapes","c","checkShapes","completeClosingShapes","closed","cl","completeData","__complete","moduleOb","assetLoader","formatResponse","xhr","contentTypeHeader","getResponseHeader","responseType","indexOf","response","responseText","loadAsset","fullPath","callback","errorCallback","XMLHttpRequest","err","onreadystatechange","readyState","status","open","error","send","load","payload","animation","event","process","onComplete","onError","createProcess","loadAnimation2","processId","location","origin","pathname","loadData","completeAnimation","anim","loadAnimation","ImagePreloader","proxyImage","canvas","width","height","ctx","getContext","fillStyle","fillRect","imageLoaded","loadedAssets","totalImages","loadedFootagesCount","totalFootages","imagesLoadedCb","footageLoaded","getAssetsPath","assetData","assetsPath","originalPath","imagePath","u","testImageLoaded","img","intervalId","setInterval","box","getBBox","_imageLoaded","clearInterval","bind","createImageData","addEventListener","ob","setAttributeNS","_elementHelper","append","appendChild","createImgData","crossOrigin","createFootageData","footageData","_footageLoaded","loadAssets","cb","images","_createImageData","setPath","setAssetsPath","getAsset","destroy","loadedImages","loadedFootages","setCacheType","elementHelper","ImagePreloaderFactory","BaseEvent","triggerEvent","eventName","args","_cbs","callbacks","removeEventListener","splice","markerParser","parsePayloadLines","lines","keys","line","keysCount","trim","Error","_markers","markers","_marker","markerData","time","tm","duration","dr","cm","_","__","name","ProjectInterface","registerComposition","compositions","_thisProjectFunction","nm","prepareFrame","xt","currentFrame","compInterface","renderers","registerRenderer","key","getRenderer","AnimationItem","isLoaded","currentRawFrame","frameRate","frameMult","playSpeed","playDirection","playCount","isPaused","autoplay","loop","renderer","animationID","timeCompleted","segmentPos","isSubframeEnabled","segments","_idle","_completedLoop","projectInterface","imagePreloader","audioController","configAnimation","onSetupError","onSegmentComplete","drawnFrameEvent","setParams","params","wrapper","container","animType","RendererClass","rendererSettings","globalData","defs","setProjectInterface","parseInt","autoloadSegments","initialSegment","setupAnimation","lastIndexOf","substr","fileName","trigger","setData","wrapperAttributes","attributes","getNamedItem","prerender","includeLayers","newLayers","fonts","fontManager","addChars","addFonts","expressionsPlugin2","initExpressions","loadNextSegment","segment","shift","segmentPath","loadSegments","imagesLoaded","checkLoaded","preloadImages","animData","round","fr","searchExtraCompositions","updaFrameModifier","waitForFontsLoaded","triggerConfigError","setTimeout","rendererType","initItems","gotoFrame","resize","updateContainerSize","setSubframe","renderFrame","triggerRenderFrameError","togglePause","stop","setCurrentRawFrameValue","getMarkerData","markerName","marker","goToAndStop","isFrame","numValue","Number","isNaN","frameModifier","goToAndPlay","playSegments","advanceTime","nextValue","_isComplete","checkSegments","adjustSegment","setSpeed","setDirection","setSegment","init","end","pendingFrame","forceFlag","resetSegments","onEnterFrame","onLoopComplete","onSegmentStart","onDestroy","getPath","getAssetData","hide","show","getDuration","updateDocumentData","index2","element","getElementByPath","animationManager","registeredAnimations","initTime","playingAnimationsNum","_stopped","_isFrozen","removeElement","ev","animItem","subtractPlayingCount","registerAnimation","elem","getRegisteredAnimations","lenAnims","animations","addPlayingCount","activate","nowTime","elapsedTime","requestAnimationFrame","first","searchAnimations2","standalone","animElements","concat","slice","getElementsByClassName","setAttribute","body","getElementsByTagName","innerText","div","style","freeze","unfreeze","searchAnimations","BezierFactory","getBezierEasing","beziers","str","replace","bezEasing","BezierEasing","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","newtonRaphsonIterate","aGuessT","currentSlope","points","_p","_mSampleValues","_precomputed","get","x","mY1","mY2","_precompute","_getTForX","_calcSampleValues","mSampleValues","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","pooling","double","poolFactory","initialLength","_create","_release","_length","_maxLength","pool","newElement","release","bezierLengthPool","create","addedLength","percents","lengths","segmentsLengthPool","totalLength","bezFunction","math","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","pointOnLine3D","z1","z2","z3","dist1","dist2","dist3","diffDist","getBezierLength","pt1","pt2","pt3","pt4","curveSegments","ptCoord","perc","ptDistance","point","lastPoint","lengthData","getSegmentsLength","shapeData","segmentsLength","pathV","pathO","pathI","BezierData","segmentLength","PointData","partial","partialLength","buildBezierData","storedData","bezierName","bezierData","getDistancePerc","initPos","lengthPos","lPerc","dir","getPointInSegment","percent","t1","u1","ptX","ptY","bezierSegmentPoints","getNewSegment","startPerc","endPerc","t0","u0","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","bez","PropertyFactory","initFrame","mathAbs","interpolateValue","frameNum","caching","offsetTime","newValue","propType","pv","iterationIndex","lastIndex","keyframes","keyData","nextKeyData","keyframeMetadata","keyframesMetadata","fnc","nextKeyTime","keyTime","endValue","to","ti","ind","__fnct","y","n","distanceInLine","segmentPerc","lastFrame","_lastKeyframeIndex","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","sh","quatStart","createQuaternion","quatEnd","quaternionToEuler","slerp","constructor","out","ax","ay","az","aw","bx","by","bz","bw","omega","cosom","sinom","scale0","scale1","acos","sin","quat","qx","qy","qz","qw","heading","atan2","attitude","asin","bank","values","c1","cos","c2","c3","s1","s2","s3","w","z","getValueAtCurrentTime","renderedFrame","endTime","_caching","renderResult","setVValue","multipliedValue","mult","_mdf","processEffectsSequence","frameId","effectsSequence","lock","_isFirstFrame","finalValue","kf","addEffect","effectFunction","addDynamicProperty","ValueProperty","vel","getValue","MultiDimensionalProperty","KeyframedValueProperty","KeyframedMultidimensionalProperty","arrLen","getProp","DynamicPropertyContainer","dynamicProperties","_isAnimated","iterateDynamicProperties","initDynamicPropertyContainer","pointPool","ShapePath","setPathData","setLength","doubleArrayLength","setXYAt","pos","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","cnt","shapePool","shapePath","clone","shape","cloned","factory","ShapeCollection","addShape","releaseShapes","shapeCollectionPool","newShapeCollection","shapeCollection","ShapePropertyFactory","interpolateShape","previousValue","keyPropS","keyPropE","isHold","vertexValue","interpolateShapeCurrentTime","resetShape","paths","localShapeCollection","shapesEqual","shape1","shape2","ShapeProperty","reset","KeyframedShapeProperty","EllShapeProperty","cPoint","EllShapePropertyFactory","convertEllToPath","p0","p1","s0","_cw","_v","StarShapeProperty","StarShapePropertyFactory","sy","ir","is","convertToPath","convertStarToPath","convertPolygonToPath","or","os","numPts","angle","longFlag","longRad","shortRad","longRound","shortRound","longPerimSegment","shortPerimSegment","rad","roundness","perimSegment","currentAng","ox","oy","RectShapeProperty","RectShapePropertyFactory","convertRectToPath","v0","v1","getShapeProp","dataProp","getConstructorFunction","getKeyframedConstructorFunction","Matrix","_cos","_sin","_tan","tan","_rnd","props","rotate","mCos","mSin","_t","rotateX","rotateY","rotateZ","shear","sx","skew","skewFromAxis","scale","sz","setTransform","l","m","translate","tx","tz","transform","a2","b2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_identityCalculated","a1","b1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","isIdentity","_identity","equals","matr","cloneFromProps","applyToPoint","applyToX","applyToY","applyToZ","getInverseMatrix","determinant","inverseMatrix","inversePoint","applyToPointArray","inversePoints","pts","retPts","applyToTriplePoints","p4","p5","p12","p13","applyToPointStringified","toCSS","cssValue","roundMatrixProperty","to2dCSS","_a","_b","_c","_d","_e","_f","lottie2","setLocation","href","setSubframeRendering","setPrefix","prefix","setQuality","inBrowser","installPlugin","plugin","getFactory","useWebWorker","setIDPrefix","__getFactory","version","checkReady","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","scripts","index","myScript","exports","module","define","amd","bodymovin","ShapeModifiers","modifiers","registerModifier","getModifier","ShapeModifier","initModifierProperties","addShapeToModifier","setAsAnimated","processKeys","TrimModifier","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","shapeSegments","segmentOb","shapeS","shapeE","releasePathsData","processShapes","_s","shapePaths","totalShapeLength","edges","newShapesData","addShapes","lastShapeInCollection","lastShape","pop","addPaths","newPaths","addSegment","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","PuckerAndBloatModifier","amount","processPath","centerPoint","pathLength","clonedPath","TransformPropertyFactory","defaultVector","applyToMatrix","mat","rz","ry","rx","px","py","pz","forceRender","_isDirty","precalculateMatrix","pre","appliedTransformations","autoOriented","v2","getValueAtTime","autoOrient","_addDynamicProperty","TransformProperty","getTransformProperty","RepeaterModifier","tr","so","eo","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","inv","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","unshift","resetElements","elements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","cont","hasReloaded","copies","ceil","group","ix","reloadShapes","elems","transformData","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","mProps","RoundCornersModifier","rd","currentV","currentI","currentO","closerV","distance","newPosPerc","getFontProperties","fontData","styles","fStyle","fWeight","styleName","toLowerCase","weight","FontManager","maxWaitingTime","emptyChar","size","combinedCharacters","surrogateModifiers","zeroWidthJoiner","trimFontOptions","font","familyArray","enabledFamilies","join","setUpNode","family","parentNode","fontFamily","node","position","left","top","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","offsetWidth","parent","checkLoadedFonts","loadedCount","loaded","fOrigin","monoCase","sansCase","removeChild","Date","now","checkLoadedFontsBinded","setIsLoadedBinded","createHelper","def","engine","helper","fontProps","tHelper","fFamily","textContent","fClass","tCanvasHelper","OffscreenCanvas","measure","text","getComputedTextLength","measureText","list","forEach","cache","fontArr","_pendingFonts","shouldLoadFont","loadedSelector","fPath","querySelectorAll","rel","sc","found","ch","getCharData","char","charCodeAt","console","warn","_warned","fontName","getFontByName","doubleSize","singleSize","fName","isModifier","firstCharCode","secondCharCode","sum","isZeroWidthJoiner","isCombinedCharacter","setIsLoaded","Font","typekitLoaded","fontPrototype","RenderableElement","initRenderable","isInRange","hidden","isTransparent","renderableComponents","addRenderableComponent","component","removeRenderableComponent","prepareRenderableFrame","num","checkLayerLimits","checkTransparency","finalTransform","mProp","renderConfig","hideOnTransparent","renderRenderable","sourceRectAtTime","getLayerSize","textData","MaskManagerInterface","MaskInterface","mask","_mask","_data","defineProperty","MaskManager","maskManager","_masksInterfaces","viewData","maskFunction","ExpressionPropertyInterface","defaultUnidimensionalValue","defaultMultidimensionalValue","completeProperty","expressionValue","property","getVelocityAtTime","numKeys","valueProp","assign","valueAtTime","speedAtTime","getSpeedAtTime","velocityAtTime","propertyGroup","UnidimensionalPropertyInterface","MultidimensionalPropertyInterface","arrValue","defaultGetter","TransformExpressionInterface","_thisFunction","rotation","xRotation","yRotation","xPosition","yPosition","zPosition","anchorPoint","opacity","_px","_py","_pz","_transformFactory","LayerExpressionInterface","getMatrix","toWorldMat","propMatrix","_elem","transformMat","toWorldVec","applyPoint","toWorld","fromWorldVec","invertPoint","fromWorld","hierarchy","fromComp","sampleImage","transformInterface","_registerMaskInterface","_thisLayerFunction","_registerEffectsInterface","effects","effect","shapeInterface","textInterface","toComp","anchorPointDescriptor","defineProperties","hasParent","layerInterface","anchor_point","active","startTime","source","inPoint","outPoint","_name","registerMaskInterface","registerEffectsInterface","propertyGroupFactory","interfaceFunction","parentPropertyGroup","PropertyInterface","propertyName","_propertyGroup","EffectsExpressionInterface","createEffectsInterface","effectsManager","effectElements","effectsData","ef","createGroupInterface","groupInterface","mn","len2","createValueInterface","numProperties","np","enabled","en","expressionProperty","setGroupProperty","CompExpressionInterface","layer","pixelAspect","compSize","frameDuration","displayStartTime","numLayers","ShapePathInterface","pathInterfaceFactory","view","propertyIndex","ShapeExpressionInterface","iterateElements","groupInterfaceFactory","fillInterfaceFactory","strokeInterfaceFactory","trimInterfaceFactory","ellipseInterfaceFactory","starInterfaceFactory","rectInterfaceFactory","roundedInterfaceFactory","repeaterInterfaceFactory","gradientFillInterfaceFactory","defaultInterfaceFactory","contentsInterfaceFactory","interfaces","_interfaceFunction","transformInterfaceFactory","cix","content","startPoint","endPoint","_dashPropertyGroup","dashOb","addPropertyToDashOb","dataProps","strokeWidth","dash","start","skewAxis","outerRadius","outerRoundness","innerRadius","innerRoundness","radius","parentGroupWrapper","TextExpressionInterface","_prevValue","_sourceText","sourceText","textProperty","stringValue","currentData","String","getBlendMode","blendModeEnums","mode","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","EffectsManager","effectItem","GroupEffect","eff","BaseElement","checkMasks","effectsInterface","shapesData","itemsData","setBlendMode","blendModeValue","bm","baseElement","layerElement","initBaseData","layerId","getType","FrameElement","prepareProperties","isVisible","_isParent","FootageInterface","outlineInterfaceFactory","currentPropertyName","currentProperty","getFootageData","searchProperty","propertyNameIndex","dataInterfaceFactory","outlineInterface","dataInterface","FootageElement","imageLoader","getBaseElement","AudioElement","_isPlaying","_canPlay","_currentTime","_volumeMultiplier","_previousVolume","_placeholder","lv","au","timeRemapped","totalVolume","volumeValue","BaseRenderer","checkLayers","buildItem","checkPendingElements","createItem","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","createFootage","buildAllItems","pInterface","progressiveLoad","buildElementParenting","parentName","addPendingElement","setAsParent","setHierarchy","pendingElements","pathValue","setupGlobalData","fontsContainer","animationItem","TransformElement","initTransform","_matMdf","_opMdf","ao","renderTransform","finalMat","globalToLocal","transforms","ptNew","mHelper","MaskElement","maskElement","solidPath","properties","count","currentMasks","rect","expansor","feMorph","maskType","maskRef","lastPath","filterID","expan","lastOperator","filterId","lastRadius","createLayerSolidPath","invRect","drawPath","maskedElement","getMaskProperty","isFirstFrame","getMaskelement","pathNodes","pathString","pathShapeValue","filtersFactory","createFilter","createAlphaToLuminanceFilter","filId","skipCoordinates","fil","feColorMatrix","featureSupport","registeredEffects","idPrefix","SVGEffects","filters","filterManager","Effect","countsAsEffect","SVGBaseElement","initRendererElement","createContainerElements","matteElement","transformedElement","_sizeChanged","layerElementParent","gg","masker","maskGroup","maskGrouper","feCTr","feFunc","alphaRect","ln","hd","cp","clipId","cpGroup","renderElement","destroyBaseElement","createRenderableComponents","renderableEffectsManager","setMatte","HierarchyElement","initHierarchy","checkParenting","RenderableDOMElement","_prototype","initElement","createContent","display","renderInnerContent","innerElem","IImageElement","sourceRect","pr","imagePreserveAspectRatio","ProcessedElement","IShapeElement","addShapeToModifiers","shapeModifiers","isShapeInAnimatedModifiers","isAnimatedWithShape","renderModifiers","shouldBreakProcess","searchProcessedElement","processedElements","addProcessedElement","lineCapEnum","lineJoinEnum","SVGShapeData","transformers","level","caches","lStr","lvl","SVGStyleData","pElem","msElem","DashProperty","dashStr","dashArray","dashoffset","SVGStrokeStyleData","styleOb","SVGFillStyleData","SVGNoStyleData","GradientProperty","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","comparePoints","diff","SVGGradientFillStyleData","initGradientData","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","gf","cst","opacityId","maskId","opFill","lc","lj","ml","of","ms","ost","SVGGradientStrokeStyleData","ShapeGroupData","prevViewData","gr","SVGTransformData","buildShapeString","_o","_i","shapeString","SVGElementsRenderer","_identityMatrix","_matrixHelper","createRenderFunction","renderFill","renderGradient","renderGradientStroke","renderStroke","renderPath","renderContentTransform","renderNoop","styleData","itemData","pathStringTransformed","redraw","lLen","iterations","styleElem","hasOpacity","attr1","attr2","cValues","oValues","ang","SVGShapeElement","stylesList","animatedContents","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","filterUniqueShapes","tempShapes","areAnimated","setShapesAsAnimated","createStyleElement","elementData","GradientConstructor","addToAnimatedContents","createGroupElement","createTransformElement","transformProperty","createShapeElement","ownTransformers","shapeProperty","setElementStyles","render","ownStyles","ownModifiers","currentTransform","modifier","processedPos","renderShape","animatedContent","LetterProps","sw","fc","update","updated","TextProperty","_frameId","keysIndex","canResize","minimumFontSize","ascent","boxWidth","defaultBoxWidth","justifyOffset","lh","lineWidths","ls","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","finalSize","finalText","finalLineHeight","copyData","completeTextData","obj","setCurrentData","searchKeyframes","getKeyframeValue","_finalValue","currentValue","currentIndex","textKeys","buildFinalText","charactersArray","charCode","shouldCombine","charAt","letters","newLineFlag","anchorGrouping","currentSize","currentPos","currentLine","lineWidth","maxLineWidth","trackingOffset","boxHeight","currentHeight","lastSpaceIndex","uncollapsedSpaces","currentChar","an","add","anIndexes","animatorJustifyOffset","extra","animators","animatorData","letterData","based","indexes","fh","fs","fb","rn","totalChars","currentInd","newInd","newData","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","TextSelectorProp","TextSelectorPropFactory","_currentTextLength","finalS","finalE","xe","ne","sm","getMult","easer","tot","smoothness","threshold","newCharsFlag","divisor","getTextSelectorProp","TextAnimatorDataProperty","animatorProps","defaultData","textAnimatorAnimatables","TextAnimatorProperty","renderType","_hasMaskedPath","_textData","_renderType","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","searchProperties","getMeasures","matrixHelper","renderedLettersCount","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","tLength","pi","yOff","firstLine","animatorSelector","letterValue","offf","xPathPos","yPathPos","initPathPos","initSegmentInd","initPointInd","elemOpacity","letterSw","letterSc","letterFc","letterM","letterP","defaultPropsArray","letterO","animatorFirstCharOffset","justifyOffsetMult","isNewLine","animatorOffset","rot","atan","ITextElement","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","emptyShapeData","SVGTextLottieElement","textSpans","singleShape","textContainer","buildTextContents","textArray","textContents","currentTextContent","fromCharCode","buildShapeData","shapeItem","usesGlyphs","tSpan","tElement","justify","span","glyph","cachedSpansLength","childSpan","glyphElement","SVGCompElement","_debug","textBox","bbox","renderedLetter","textSpan","ISolidElement","NullElement","SVGRendererBase","svgElement","viewBoxSize","viewBoxOnly","contentVisibility","className","focusable","preserveAspectRatio","destroyed","appendElementInPos","nextElement","insertBefore","ICompElement","setElements","getElements","destroyElements","supports3d","SVGRenderer","config","ariaLabel","title","titleElement","titleId","description","descElement","descId","filterSize","CVContextData","saved","cArrPos","cTr","cO","savedOp","duplicate","newLength","currentSavedOp","set","ShapeTransformManager","sequences","sequenceList","transform_key_count","addTransformSequence","sequence","processSequence","processSequences","getNewKey","CVEffects","CVMaskElement","hasMasks","canvasContext","beginPath","moveTo","lineTo","bezierCurveTo","save","clip","CVBaseElement","createElements","blendMode","globalCompositeOperation","hideElement","showElement","forceRealStack","ctxTransform","ctxOpacity","restore","CVShapeData","transformsManager","styledShapes","styledShape","trNodes","CVShapeElement","transformHelper","dashResetter","preTransforms","co","wi","da","do","addTransformToStyleList","removeTransformFromStyleList","closeStyles","shouldRender","ownTransforms","_shouldRender","renderShapeTransform","parentTransform","groupTransform","drawLayer","nodes","currentStyle","coOp","currentGlobalAlpha","strokeStyle","grd","lineCap","lineJoin","miterLimit","setLineDash","lineDashOffset","closePath","stroke","fill","isMain","renderGradientFill","renderStyledShape","shapeNodes","groupTransformMat","createLinearGradient","createRadialGradient","addColorStop","CVTextElement","currentRender","sWidth","fValue","hasFill","hasStroke","commands","pathArr","commandsCounter","lastFill","lastStroke","lastStrokeW","CVImageElement","imgW","imgH","imgRel","canvasRel","widthCrop","heightCrop","par","drawImage","CVSolidElement","CanvasRendererBase","clearCanvas","context","dpr","devicePixelRatio","contextData","cProps","trProps","globalAlpha","actionFlag","popped","containerStyle","transformOrigin","mozTransformOrigin","webkitTransformOrigin","transformCanvas","isDashed","elementWidth","elementHeight","offsetHeight","elementRel","animationRel","fillType","clearRect","CVCompElement","CanvasRenderer","Expressions","stackCount","registers","pushExpression","popExpression","releaseInstances","registerExpressionProperty","expression","seedRandom","global","chunks","digits","rngname","startdenom","significance","overflow","nodecrypto","seedrandom","seed","options","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","prng","int32","quick","S","pass","prng2","seed2","is_math_call","state","copy","keylen","me","t2","depth","result","typ","stringseed","smear","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","screen","initialize$2","BMMath2","ExpressionManager","Math2","window2","document2","XMLHttpRequest2","fetch","frames","$bm_isInstanceOfArray","isNumerable","tOfV","$bm_neg","tOfA","lenA","retArr","tOfB","lenB","sub","mul","mod","$bm_sum","$bm_sub","$bm_mul","$bm_div","$bm_mod","clamp","mm","radiansToDegrees","radians_to_degrees","degreesToRadians","degrees_to_radians","helperLengthArray","arr1","arr2","normalize","vec","rgbToHsl","hue2rgb","hslToRgb","linear","tMin","tMax","value1","value2","_tMin","rnd","rndm","createPath","inTangents","outTangents","arrPlaceholder","inVertexPoint","outVertexPoint","noOp","_value","initiateExpression","__preventDeadCodeRemoval","expressionHelpers","searchExpressions","_cachingAtTime","delta","speed","velocity","getStaticValueAtTime","addPropertyDecorator","loopOut","durationFlag","lastKeyFrame","cycleDuration","firstKeyFrame","ret","initV","endV","current","repeats","lastValue","nextLastValue","loopIn","firstValue","nextFirstValue","smooth","samples","endFrame","sampleFrequency","sampleValue","getTransformValueAtTime","_transformCachingAtTime","anchor","rotationZ","rotationY","rotationX","orientation","positionX","positionY","positionZ","getTransformStaticValueAtTime","propertyGetProp","getShapeValueAtTime","shapeValue","lastTime","ShapePropertyConstructorFunction","KeyframedShapePropertyConstructorFunction","ShapeExpressions","isClosed","pointOnPath","_segmentsLength","accumulatedLength","initIndex","endIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","unitVector","tangentOnPath","normalOnPath","propertyGetShapeProp","trims","initialize$1","addDecorator","calculateExpression","getExpressionValue","isKeyframed","hasExpressions","initialize"],"sources":["C:\\Users\\Asus\\Documents\\HealthDiagnoser-master\\node_modules\\src\\libs\\lottie.js"],"sourcesContent":["const lottie = /* @__PURE__ */ (() => {\n  if (\n    typeof navigator === 'undefined' ||\n    typeof document === 'undefined' ||\n    typeof CanvasRenderingContext2D === 'undefined'\n  )\n    return {}\n\n  const svgNS = 'http://www.w3.org/2000/svg'\n\n  let locationHref = ''\n  let _useWebWorker = false\n\n  const initialDefaultFrame = -999999\n\n  const setWebWorker = (flag) => {\n    _useWebWorker = !!flag\n  }\n  const getWebWorker = () => _useWebWorker\n\n  const setLocationHref = (value) => {\n    locationHref = value\n  }\n  const getLocationHref = () => locationHref\n\n  function createTag(type) {\n    // return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElement(type)\n  }\n\n  function extendPrototype(sources, destination) {\n    var i\n    var len = sources.length\n    var sourcePrototype\n    for (i = 0; i < len; i += 1) {\n      sourcePrototype = sources[i].prototype\n      for (var attr in sourcePrototype) {\n        if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr))\n          destination.prototype[attr] = sourcePrototype[attr]\n      }\n    }\n  }\n\n  function getDescriptor(object, prop) {\n    return Object.getOwnPropertyDescriptor(object, prop)\n  }\n\n  function createProxyFunction(prototype) {\n    function ProxyFunction() {}\n    ProxyFunction.prototype = prototype\n    return ProxyFunction\n  }\n\n  // import Howl from '../../3rd_party/howler';\n\n  const audioControllerFactory = (function () {\n    function AudioController(audioFactory) {\n      this.audios = []\n      this.audioFactory = audioFactory\n      this._volume = 1\n      this._isMuted = false\n    }\n\n    AudioController.prototype = {\n      addAudio: function (audio) {\n        this.audios.push(audio)\n      },\n      pause: function () {\n        var i\n        var len = this.audios.length\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].pause()\n        }\n      },\n      resume: function () {\n        var i\n        var len = this.audios.length\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].resume()\n        }\n      },\n      setRate: function (rateValue) {\n        var i\n        var len = this.audios.length\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].setRate(rateValue)\n        }\n      },\n      createAudio: function (assetPath) {\n        if (this.audioFactory) {\n          return this.audioFactory(assetPath)\n        }\n        if (window.Howl) {\n          return new window.Howl({\n            src: [assetPath],\n          })\n        }\n        return {\n          isPlaying: false,\n          play: function () {\n            this.isPlaying = true\n          },\n          seek: function () {\n            this.isPlaying = false\n          },\n          playing: function () {},\n          rate: function () {},\n          setVolume: function () {},\n        }\n      },\n      setAudioFactory: function (audioFactory) {\n        this.audioFactory = audioFactory\n      },\n      setVolume: function (value) {\n        this._volume = value\n        this._updateVolume()\n      },\n      mute: function () {\n        this._isMuted = true\n        this._updateVolume()\n      },\n      unmute: function () {\n        this._isMuted = false\n        this._updateVolume()\n      },\n      getVolume: function () {\n        return this._volume\n      },\n      _updateVolume: function () {\n        var i\n        var len = this.audios.length\n        for (i = 0; i < len; i += 1) {\n          this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1))\n        }\n      },\n    }\n\n    return function () {\n      return new AudioController()\n    }\n  })()\n\n  const createTypedArray = (function () {\n    function createRegularArray(type, len) {\n      var i = 0\n      var arr = []\n      var value\n      switch (type) {\n        case 'int16':\n        case 'uint8c':\n          value = 1\n          break\n        default:\n          value = 1.1\n          break\n      }\n      for (i = 0; i < len; i += 1) {\n        arr.push(value)\n      }\n      return arr\n    }\n    function createTypedArrayFactory(type, len) {\n      if (type === 'float32') {\n        return new Float32Array(len)\n      }\n      if (type === 'int16') {\n        return new Int16Array(len)\n      }\n      if (type === 'uint8c') {\n        return new Uint8ClampedArray(len)\n      }\n      return createRegularArray(type, len)\n    }\n    if (typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\n      return createTypedArrayFactory\n    }\n    return createRegularArray\n  })()\n\n  function createSizedArray(len) {\n    return Array.apply(null, { length: len })\n  }\n\n  let subframeEnabled = true\n  let expressionsPlugin = null\n  let idPrefix$1 = ''\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n  let _shouldRoundValues = false\n  const bmPow = Math.pow\n  const bmSqrt = Math.sqrt\n  const bmFloor = Math.floor\n  const bmMax = Math.max\n  const bmMin = Math.min\n\n  const BMMath = {}\n  ;(function () {\n    var propertyNames = [\n      'abs',\n      'acos',\n      'acosh',\n      'asin',\n      'asinh',\n      'atan',\n      'atanh',\n      'atan2',\n      'ceil',\n      'cbrt',\n      'expm1',\n      'clz32',\n      'cos',\n      'cosh',\n      'exp',\n      'floor',\n      'fround',\n      'hypot',\n      'imul',\n      'log',\n      'log1p',\n      'log2',\n      'log10',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sinh',\n      'sqrt',\n      'tan',\n      'tanh',\n      'trunc',\n      'E',\n      'LN10',\n      'LN2',\n      'LOG10E',\n      'LOG2E',\n      'PI',\n      'SQRT1_2',\n      'SQRT2',\n    ]\n    var i\n    var len = propertyNames.length\n    for (i = 0; i < len; i += 1) {\n      BMMath[propertyNames[i]] = Math[propertyNames[i]]\n    }\n  })()\n\n  function ProjectInterface$1() {\n    return {}\n  }\n  BMMath.random = Math.random\n  BMMath.abs = function (val) {\n    var tOfVal = typeof val\n    if (tOfVal === 'object' && val.length) {\n      var absArr = createSizedArray(val.length)\n      var i\n      var len = val.length\n      for (i = 0; i < len; i += 1) {\n        absArr[i] = Math.abs(val[i])\n      }\n      return absArr\n    }\n    return Math.abs(val)\n  }\n  let defaultCurveSegments = 150\n  const degToRads = Math.PI / 180\n  const roundCorner = 0.5519\n\n  function roundValues(flag) {\n    _shouldRoundValues = !!flag\n  }\n\n  function bmRnd(value) {\n    if (_shouldRoundValues) {\n      return Math.round(value)\n    }\n    return value\n  }\n\n  function styleDiv(element) {\n    element.style.position = 'absolute'\n    element.style.top = 0\n    element.style.left = 0\n    element.style.display = 'block'\n    element.style.transformOrigin = '0 0'\n    element.style.webkitTransformOrigin = '0 0'\n    element.style.backfaceVisibility = 'visible'\n    element.style.webkitBackfaceVisibility = 'visible'\n    element.style.transformStyle = 'preserve-3d'\n    element.style.webkitTransformStyle = 'preserve-3d'\n    element.style.mozTransformStyle = 'preserve-3d'\n  }\n\n  function BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {\n    this.type = type\n    this.currentTime = currentTime\n    this.totalTime = totalTime\n    this.direction = frameMultiplier < 0 ? -1 : 1\n  }\n\n  function BMCompleteEvent(type, frameMultiplier) {\n    this.type = type\n    this.direction = frameMultiplier < 0 ? -1 : 1\n  }\n\n  function BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {\n    this.type = type\n    this.currentLoop = currentLoop\n    this.totalLoops = totalLoops\n    this.direction = frameMultiplier < 0 ? -1 : 1\n  }\n\n  function BMSegmentStartEvent(type, firstFrame, totalFrames) {\n    this.type = type\n    this.firstFrame = firstFrame\n    this.totalFrames = totalFrames\n  }\n\n  function BMDestroyEvent(type, target) {\n    this.type = type\n    this.target = target\n  }\n\n  function BMRenderFrameErrorEvent(nativeError, currentTime) {\n    this.type = 'renderFrameError'\n    this.nativeError = nativeError\n    this.currentTime = currentTime\n  }\n\n  function BMConfigErrorEvent(nativeError) {\n    this.type = 'configError'\n    this.nativeError = nativeError\n  }\n\n  function BMAnimationConfigErrorEvent(type, nativeError) {\n    this.type = type\n    this.nativeError = nativeError\n  }\n\n  const createElementID = (function () {\n    var _count = 0\n    return function createID() {\n      _count += 1\n      return idPrefix$1 + '__lottie_element_' + _count\n    }\n  })()\n\n  function HSVtoRGB(h, s, v) {\n    var r\n    var g\n    var b\n    var i\n    var f\n    var p\n    var q\n    var t\n    i = Math.floor(h * 6)\n    f = h * 6 - i\n    p = v * (1 - s)\n    q = v * (1 - f * s)\n    t = v * (1 - (1 - f) * s)\n    switch (i % 6) {\n      case 0:\n        r = v\n        g = t\n        b = p\n        break\n      case 1:\n        r = q\n        g = v\n        b = p\n        break\n      case 2:\n        r = p\n        g = v\n        b = t\n        break\n      case 3:\n        r = p\n        g = q\n        b = v\n        break\n      case 4:\n        r = t\n        g = p\n        b = v\n        break\n      case 5:\n        r = v\n        g = p\n        b = q\n        break\n      default:\n        break\n    }\n    return [r, g, b]\n  }\n\n  function RGBtoHSV(r, g, b) {\n    var max = Math.max(r, g, b)\n    var min = Math.min(r, g, b)\n    var d = max - min\n    var h\n    var s = max === 0 ? 0 : d / max\n    var v = max / 255\n\n    switch (max) {\n      case min:\n        h = 0\n        break\n      case r:\n        h = g - b + d * (g < b ? 6 : 0)\n        h /= 6 * d\n        break\n      case g:\n        h = b - r + d * 2\n        h /= 6 * d\n        break\n      case b:\n        h = r - g + d * 4\n        h /= 6 * d\n        break\n      default:\n        break\n    }\n\n    return [h, s, v]\n  }\n\n  function addSaturationToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255)\n    hsv[1] += offset\n    if (hsv[1] > 1) {\n      hsv[1] = 1\n    } else if (hsv[1] <= 0) {\n      hsv[1] = 0\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2])\n  }\n\n  function addBrightnessToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255)\n    hsv[2] += offset\n    if (hsv[2] > 1) {\n      hsv[2] = 1\n    } else if (hsv[2] < 0) {\n      hsv[2] = 0\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2])\n  }\n\n  function addHueToRGB(color, offset) {\n    var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255)\n    hsv[0] += offset / 360\n    if (hsv[0] > 1) {\n      hsv[0] -= 1\n    } else if (hsv[0] < 0) {\n      hsv[0] += 1\n    }\n    return HSVtoRGB(hsv[0], hsv[1], hsv[2])\n  }\n\n  const rgbToHex = (function () {\n    var colorMap = []\n    var i\n    var hex\n    for (i = 0; i < 256; i += 1) {\n      hex = i.toString(16)\n      colorMap[i] = hex.length === 1 ? '0' + hex : hex\n    }\n\n    return function (r, g, b) {\n      if (r < 0) {\n        r = 0\n      }\n      if (g < 0) {\n        g = 0\n      }\n      if (b < 0) {\n        b = 0\n      }\n      return '#' + colorMap[r] + colorMap[g] + colorMap[b]\n    }\n  })()\n\n  const setSubframeEnabled = (flag) => {\n    subframeEnabled = !!flag\n  }\n  const getSubframeEnabled = () => subframeEnabled\n  const setExpressionsPlugin = (value) => {\n    expressionsPlugin = value\n  }\n  const getExpressionsPlugin = () => expressionsPlugin\n  const setDefaultCurveSegments = (value) => {\n    defaultCurveSegments = value\n  }\n  const getDefaultCurveSegments = () => defaultCurveSegments\n  const setIdPrefix = (value) => {\n    idPrefix$1 = value\n  }\n  const getIdPrefix = () => idPrefix$1\n\n  function createNS(type) {\n    // return {appendChild:function(){},setAttribute:function(){},style:{}}\n    return document.createElementNS(svgNS, type)\n  }\n\n  const dataManager = (function () {\n    var _counterId = 1\n    var processes = []\n    var workerFn\n    var workerInstance\n    var workerProxy = {\n      onmessage: function () {},\n      postMessage: function (path) {\n        workerFn({\n          data: path,\n        })\n      },\n    }\n    var _workerSelf = {\n      postMessage: function (data) {\n        workerProxy.onmessage({\n          data: data,\n        })\n      },\n    }\n    function createWorker(fn) {\n      if (window.Worker && window.Blob && getWebWorker()) {\n        var blob = new Blob(['var _workerSelf = self; self.onmessage = ', fn.toString()], { type: 'text/javascript' })\n        // var blob = new Blob(['self.onmessage = ', fn.toString()], { type: 'text/javascript' });\n        var url = URL.createObjectURL(blob)\n        return new Worker(url)\n      }\n      workerFn = fn\n      return workerProxy\n    }\n\n    function setupWorker() {\n      if (!workerInstance) {\n        workerInstance = createWorker(function workerStart(e) {\n          function dataFunctionManager() {\n            function completeLayers(layers, comps) {\n              var layerData\n              var i\n              var len = layers.length\n              var j\n              var jLen\n              var k\n              var kLen\n              for (i = 0; i < len; i += 1) {\n                layerData = layers[i]\n                if ('ks' in layerData && !layerData.completed) {\n                  layerData.completed = true\n                  if (layerData.tt) {\n                    layers[i - 1].td = layerData.tt\n                  }\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties\n                    jLen = maskProps.length\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k)\n                      } else {\n                        kLen = maskProps[j].pt.k.length\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0])\n                          }\n                          if (maskProps[j].pt.k[k].e) {\n                            convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0])\n                          }\n                        }\n                      }\n                    }\n                  }\n                  if (layerData.ty === 0) {\n                    layerData.layers = findCompLayers(layerData.refId, comps)\n                    completeLayers(layerData.layers, comps)\n                  } else if (layerData.ty === 4) {\n                    completeShapes(layerData.shapes)\n                  } else if (layerData.ty === 5) {\n                    completeText(layerData)\n                  }\n                }\n              }\n            }\n\n            function completeChars(chars, assets) {\n              if (chars) {\n                var i = 0\n                var len = chars.length\n                for (i = 0; i < len; i += 1) {\n                  if (chars[i].t === 1) {\n                    // var compData = findComp(chars[i].data.refId, assets);\n                    chars[i].data.layers = findCompLayers(chars[i].data.refId, assets)\n                    // chars[i].data.ip = 0;\n                    // chars[i].data.op = 99999;\n                    // chars[i].data.st = 0;\n                    // chars[i].data.sr = 1;\n                    // chars[i].w = compData.w;\n                    // chars[i].data.ks = {\n                    //   a: { k: [0, 0, 0], a: 0 },\n                    //   p: { k: [0, -compData.h, 0], a: 0 },\n                    //   r: { k: 0, a: 0 },\n                    //   s: { k: [100, 100], a: 0 },\n                    //   o: { k: 100, a: 0 },\n                    // };\n                    completeLayers(chars[i].data.layers, assets)\n                  }\n                }\n              }\n            }\n\n            function findComp(id, comps) {\n              var i = 0\n              var len = comps.length\n              while (i < len) {\n                if (comps[i].id === id) {\n                  return comps[i]\n                }\n                i += 1\n              }\n              return null\n            }\n\n            function findCompLayers(id, comps) {\n              var comp = findComp(id, comps)\n              if (comp) {\n                if (!comp.layers.__used) {\n                  comp.layers.__used = true\n                  return comp.layers\n                }\n                return JSON.parse(JSON.stringify(comp.layers))\n              }\n              return null\n            }\n\n            function completeShapes(arr) {\n              var i\n              var len = arr.length\n              var j\n              var jLen\n              for (i = len - 1; i >= 0; i -= 1) {\n                if (arr[i].ty === 'sh') {\n                  if (arr[i].ks.k.i) {\n                    convertPathsToAbsoluteValues(arr[i].ks.k)\n                  } else {\n                    jLen = arr[i].ks.k.length\n                    for (j = 0; j < jLen; j += 1) {\n                      if (arr[i].ks.k[j].s) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0])\n                      }\n                      if (arr[i].ks.k[j].e) {\n                        convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0])\n                      }\n                    }\n                  }\n                } else if (arr[i].ty === 'gr') {\n                  completeShapes(arr[i].it)\n                }\n              }\n            }\n\n            function convertPathsToAbsoluteValues(path) {\n              var i\n              var len = path.i.length\n              for (i = 0; i < len; i += 1) {\n                path.i[i][0] += path.v[i][0]\n                path.i[i][1] += path.v[i][1]\n                path.o[i][0] += path.v[i][0]\n                path.o[i][1] += path.v[i][1]\n              }\n            }\n\n            function checkVersion(minimum, animVersionString) {\n              var animVersion = animVersionString ? animVersionString.split('.') : [100, 100, 100]\n              if (minimum[0] > animVersion[0]) {\n                return true\n              }\n              if (animVersion[0] > minimum[0]) {\n                return false\n              }\n              if (minimum[1] > animVersion[1]) {\n                return true\n              }\n              if (animVersion[1] > minimum[1]) {\n                return false\n              }\n              if (minimum[2] > animVersion[2]) {\n                return true\n              }\n              if (animVersion[2] > minimum[2]) {\n                return false\n              }\n              return null\n            }\n\n            var checkText = (function () {\n              var minimumVersion = [4, 4, 14]\n\n              function updateTextLayer(textLayer) {\n                var documentData = textLayer.t.d\n                textLayer.t.d = {\n                  k: [\n                    {\n                      s: documentData,\n                      t: 0,\n                    },\n                  ],\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i\n                var len = layers.length\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i])\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers)\n                  if (animationData.assets) {\n                    var i\n                    var len = animationData.assets.length\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers)\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            var checkChars = (function () {\n              var minimumVersion = [4, 7, 99]\n              return function (animationData) {\n                if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\n                  var i\n                  var len = animationData.chars.length\n                  for (i = 0; i < len; i += 1) {\n                    var charData = animationData.chars[i]\n                    if (charData.data && charData.data.shapes) {\n                      completeShapes(charData.data.shapes)\n                      charData.data.ip = 0\n                      charData.data.op = 99999\n                      charData.data.st = 0\n                      charData.data.sr = 1\n                      charData.data.ks = {\n                        p: { k: [0, 0], a: 0 },\n                        s: { k: [100, 100], a: 0 },\n                        a: { k: [0, 0], a: 0 },\n                        r: { k: 0, a: 0 },\n                        o: { k: 100, a: 0 },\n                      }\n                      if (!animationData.chars[i].t) {\n                        charData.data.shapes.push({\n                          ty: 'no',\n                        })\n                        charData.data.shapes[0].it.push({\n                          p: { k: [0, 0], a: 0 },\n                          s: { k: [100, 100], a: 0 },\n                          a: { k: [0, 0], a: 0 },\n                          r: { k: 0, a: 0 },\n                          o: { k: 100, a: 0 },\n                          sk: { k: 0, a: 0 },\n                          sa: { k: 0, a: 0 },\n                          ty: 'tr',\n                        })\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            var checkPathProperties = (function () {\n              var minimumVersion = [5, 7, 15]\n\n              function updateTextLayer(textLayer) {\n                var pathData = textLayer.t.p\n                if (typeof pathData.a === 'number') {\n                  pathData.a = {\n                    a: 0,\n                    k: pathData.a,\n                  }\n                }\n                if (typeof pathData.p === 'number') {\n                  pathData.p = {\n                    a: 0,\n                    k: pathData.p,\n                  }\n                }\n                if (typeof pathData.r === 'number') {\n                  pathData.r = {\n                    a: 0,\n                    k: pathData.r,\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i\n                var len = layers.length\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 5) {\n                    updateTextLayer(layers[i])\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers)\n                  if (animationData.assets) {\n                    var i\n                    var len = animationData.assets.length\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers)\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            var checkColors = (function () {\n              var minimumVersion = [4, 1, 9]\n\n              function iterateShapes(shapes) {\n                var i\n                var len = shapes.length\n                var j\n                var jLen\n                for (i = 0; i < len; i += 1) {\n                  if (shapes[i].ty === 'gr') {\n                    iterateShapes(shapes[i].it)\n                  } else if (shapes[i].ty === 'fl' || shapes[i].ty === 'st') {\n                    if (shapes[i].c.k && shapes[i].c.k[0].i) {\n                      jLen = shapes[i].c.k.length\n                      for (j = 0; j < jLen; j += 1) {\n                        if (shapes[i].c.k[j].s) {\n                          shapes[i].c.k[j].s[0] /= 255\n                          shapes[i].c.k[j].s[1] /= 255\n                          shapes[i].c.k[j].s[2] /= 255\n                          shapes[i].c.k[j].s[3] /= 255\n                        }\n                        if (shapes[i].c.k[j].e) {\n                          shapes[i].c.k[j].e[0] /= 255\n                          shapes[i].c.k[j].e[1] /= 255\n                          shapes[i].c.k[j].e[2] /= 255\n                          shapes[i].c.k[j].e[3] /= 255\n                        }\n                      }\n                    } else {\n                      shapes[i].c.k[0] /= 255\n                      shapes[i].c.k[1] /= 255\n                      shapes[i].c.k[2] /= 255\n                      shapes[i].c.k[3] /= 255\n                    }\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var i\n                var len = layers.length\n                for (i = 0; i < len; i += 1) {\n                  if (layers[i].ty === 4) {\n                    iterateShapes(layers[i].shapes)\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers)\n                  if (animationData.assets) {\n                    var i\n                    var len = animationData.assets.length\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers)\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            var checkShapes = (function () {\n              var minimumVersion = [4, 4, 18]\n\n              function completeClosingShapes(arr) {\n                var i\n                var len = arr.length\n                var j\n                var jLen\n                for (i = len - 1; i >= 0; i -= 1) {\n                  if (arr[i].ty === 'sh') {\n                    if (arr[i].ks.k.i) {\n                      arr[i].ks.k.c = arr[i].closed\n                    } else {\n                      jLen = arr[i].ks.k.length\n                      for (j = 0; j < jLen; j += 1) {\n                        if (arr[i].ks.k[j].s) {\n                          arr[i].ks.k[j].s[0].c = arr[i].closed\n                        }\n                        if (arr[i].ks.k[j].e) {\n                          arr[i].ks.k[j].e[0].c = arr[i].closed\n                        }\n                      }\n                    }\n                  } else if (arr[i].ty === 'gr') {\n                    completeClosingShapes(arr[i].it)\n                  }\n                }\n              }\n\n              function iterateLayers(layers) {\n                var layerData\n                var i\n                var len = layers.length\n                var j\n                var jLen\n                var k\n                var kLen\n                for (i = 0; i < len; i += 1) {\n                  layerData = layers[i]\n                  if (layerData.hasMask) {\n                    var maskProps = layerData.masksProperties\n                    jLen = maskProps.length\n                    for (j = 0; j < jLen; j += 1) {\n                      if (maskProps[j].pt.k.i) {\n                        maskProps[j].pt.k.c = maskProps[j].cl\n                      } else {\n                        kLen = maskProps[j].pt.k.length\n                        for (k = 0; k < kLen; k += 1) {\n                          if (maskProps[j].pt.k[k].s) {\n                            maskProps[j].pt.k[k].s[0].c = maskProps[j].cl\n                          }\n                          if (maskProps[j].pt.k[k].e) {\n                            maskProps[j].pt.k[k].e[0].c = maskProps[j].cl\n                          }\n                        }\n                      }\n                    }\n                  }\n                  if (layerData.ty === 4) {\n                    completeClosingShapes(layerData.shapes)\n                  }\n                }\n              }\n\n              return function (animationData) {\n                if (checkVersion(minimumVersion, animationData.v)) {\n                  iterateLayers(animationData.layers)\n                  if (animationData.assets) {\n                    var i\n                    var len = animationData.assets.length\n                    for (i = 0; i < len; i += 1) {\n                      if (animationData.assets[i].layers) {\n                        iterateLayers(animationData.assets[i].layers)\n                      }\n                    }\n                  }\n                }\n              }\n            })()\n\n            function completeData(animationData) {\n              if (animationData.__complete) {\n                return\n              }\n              checkColors(animationData)\n              checkText(animationData)\n              checkChars(animationData)\n              checkPathProperties(animationData)\n              checkShapes(animationData)\n              completeLayers(animationData.layers, animationData.assets)\n              completeChars(animationData.chars, animationData.assets)\n              animationData.__complete = true\n            }\n\n            function completeText(data) {\n              if (data.t.a.length === 0 && !('m' in data.t.p)) {\n                // data.singleShape = true;\n              }\n            }\n\n            var moduleOb = {}\n            moduleOb.completeData = completeData\n            moduleOb.checkColors = checkColors\n            moduleOb.checkChars = checkChars\n            moduleOb.checkPathProperties = checkPathProperties\n            moduleOb.checkShapes = checkShapes\n            moduleOb.completeLayers = completeLayers\n\n            return moduleOb\n          }\n          if (!_workerSelf.dataManager) {\n            _workerSelf.dataManager = dataFunctionManager()\n          }\n\n          if (!_workerSelf.assetLoader) {\n            _workerSelf.assetLoader = (function () {\n              function formatResponse(xhr) {\n                // using typeof doubles the time of execution of this method,\n                // so if available, it's better to use the header to validate the type\n                var contentTypeHeader = xhr.getResponseHeader('content-type')\n                if (contentTypeHeader && xhr.responseType === 'json' && contentTypeHeader.indexOf('json') !== -1) {\n                  return xhr.response\n                }\n                if (xhr.response && typeof xhr.response === 'object') {\n                  return xhr.response\n                }\n                if (xhr.response && typeof xhr.response === 'string') {\n                  return JSON.parse(xhr.response)\n                }\n                if (xhr.responseText) {\n                  return JSON.parse(xhr.responseText)\n                }\n                return null\n              }\n\n              function loadAsset(path, fullPath, callback, errorCallback) {\n                var response\n                var xhr = new XMLHttpRequest()\n                // set responseType after calling open or IE will break.\n                try {\n                  // This crashes on Android WebView prior to KitKat\n                  xhr.responseType = 'json'\n                } catch (err) {} // eslint-disable-line no-empty\n                xhr.onreadystatechange = function () {\n                  if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                      response = formatResponse(xhr)\n                      callback(response)\n                    } else {\n                      try {\n                        response = formatResponse(xhr)\n                        callback(response)\n                      } catch (err) {\n                        if (errorCallback) {\n                          errorCallback(err)\n                        }\n                      }\n                    }\n                  }\n                }\n                try {\n                  xhr.open('GET', path, true)\n                } catch (error) {\n                  xhr.open('GET', fullPath + '/' + path, true)\n                }\n                xhr.send()\n              }\n              return {\n                load: loadAsset,\n              }\n            })()\n          }\n\n          if (e.data.type === 'loadAnimation') {\n            _workerSelf.assetLoader.load(\n              e.data.path,\n              e.data.fullPath,\n              function (data) {\n                _workerSelf.dataManager.completeData(data)\n                _workerSelf.postMessage({\n                  id: e.data.id,\n                  payload: data,\n                  status: 'success',\n                })\n              },\n              function () {\n                _workerSelf.postMessage({\n                  id: e.data.id,\n                  status: 'error',\n                })\n              },\n            )\n          } else if (e.data.type === 'complete') {\n            var animation = e.data.animation\n            _workerSelf.dataManager.completeData(animation)\n            _workerSelf.postMessage({\n              id: e.data.id,\n              payload: animation,\n              status: 'success',\n            })\n          } else if (e.data.type === 'loadData') {\n            _workerSelf.assetLoader.load(\n              e.data.path,\n              e.data.fullPath,\n              function (data) {\n                _workerSelf.postMessage({\n                  id: e.data.id,\n                  payload: data,\n                  status: 'success',\n                })\n              },\n              function () {\n                _workerSelf.postMessage({\n                  id: e.data.id,\n                  status: 'error',\n                })\n              },\n            )\n          }\n        })\n\n        workerInstance.onmessage = function (event) {\n          var data = event.data\n          var id = data.id\n          var process = processes[id]\n          processes[id] = null\n          if (data.status === 'success') {\n            process.onComplete(data.payload)\n          } else if (process.onError) {\n            process.onError()\n          }\n        }\n      }\n    }\n\n    function createProcess(onComplete, onError) {\n      _counterId += 1\n      var id = 'processId_' + _counterId\n      processes[id] = {\n        onComplete: onComplete,\n        onError: onError,\n      }\n      return id\n    }\n\n    function loadAnimation(path, onComplete, onError) {\n      setupWorker()\n      var processId = createProcess(onComplete, onError)\n      workerInstance.postMessage({\n        type: 'loadAnimation',\n        path: path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId,\n      })\n    }\n\n    function loadData(path, onComplete, onError) {\n      setupWorker()\n      var processId = createProcess(onComplete, onError)\n      workerInstance.postMessage({\n        type: 'loadData',\n        path: path,\n        fullPath: window.location.origin + window.location.pathname,\n        id: processId,\n      })\n    }\n\n    function completeAnimation(anim, onComplete, onError) {\n      setupWorker()\n      var processId = createProcess(onComplete, onError)\n      workerInstance.postMessage({\n        type: 'complete',\n        animation: anim,\n        id: processId,\n      })\n    }\n\n    return {\n      loadAnimation: loadAnimation,\n      loadData: loadData,\n      completeAnimation: completeAnimation,\n    }\n  })()\n\n  const ImagePreloader = (function () {\n    var proxyImage = (function () {\n      var canvas = createTag('canvas')\n      canvas.width = 1\n      canvas.height = 1\n      var ctx = canvas.getContext('2d')\n      ctx.fillStyle = 'rgba(0,0,0,0)'\n      ctx.fillRect(0, 0, 1, 1)\n      return canvas\n    })()\n\n    function imageLoaded() {\n      this.loadedAssets += 1\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null)\n        }\n      }\n    }\n    function footageLoaded() {\n      this.loadedFootagesCount += 1\n      if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\n        if (this.imagesLoadedCb) {\n          this.imagesLoadedCb(null)\n        }\n      }\n    }\n\n    function getAssetsPath(assetData, assetsPath, originalPath) {\n      var path = ''\n      if (assetData.e) {\n        path = assetData.p\n      } else if (assetsPath) {\n        var imagePath = assetData.p\n        if (imagePath.indexOf('images/') !== -1) {\n          imagePath = imagePath.split('/')[1]\n        }\n        path = assetsPath + imagePath\n      } else {\n        path = originalPath\n        path += assetData.u ? assetData.u : ''\n        path += assetData.p\n      }\n      return path\n    }\n\n    function testImageLoaded(img) {\n      var _count = 0\n      var intervalId = setInterval(\n        function () {\n          var box = img.getBBox()\n          if (box.width || _count > 500) {\n            this._imageLoaded()\n            clearInterval(intervalId)\n          }\n          _count += 1\n        }.bind(this),\n        50,\n      )\n    }\n\n    function createImageData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path)\n      var img = createNS('image')\n      if (isSafari) {\n        this.testImageLoaded(img)\n      } else {\n        img.addEventListener('load', this._imageLoaded, false)\n      }\n      img.addEventListener(\n        'error',\n        function () {\n          ob.img = proxyImage\n          this._imageLoaded()\n        }.bind(this),\n        false,\n      )\n      img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path)\n      if (this._elementHelper.append) {\n        this._elementHelper.append(img)\n      } else {\n        this._elementHelper.appendChild(img)\n      }\n      var ob = {\n        img: img,\n        assetData: assetData,\n      }\n      return ob\n    }\n\n    function createImgData(assetData) {\n      var path = getAssetsPath(assetData, this.assetsPath, this.path)\n      var img = createTag('img')\n      img.crossOrigin = 'anonymous'\n      img.addEventListener('load', this._imageLoaded, false)\n      img.addEventListener(\n        'error',\n        function () {\n          ob.img = proxyImage\n          this._imageLoaded()\n        }.bind(this),\n        false,\n      )\n      img.src = path\n      var ob = {\n        img: img,\n        assetData: assetData,\n      }\n      return ob\n    }\n\n    function createFootageData(data) {\n      var ob = {\n        assetData: data,\n      }\n      var path = getAssetsPath(data, this.assetsPath, this.path)\n      dataManager.loadData(\n        path,\n        function (footageData) {\n          ob.img = footageData\n          this._footageLoaded()\n        }.bind(this),\n        function () {\n          ob.img = {}\n          this._footageLoaded()\n        }.bind(this),\n      )\n      return ob\n    }\n\n    function loadAssets(assets, cb) {\n      this.imagesLoadedCb = cb\n      var i\n      var len = assets.length\n      for (i = 0; i < len; i += 1) {\n        if (!assets[i].layers) {\n          if (!assets[i].t || assets[i].t === 'seq') {\n            this.totalImages += 1\n            this.images.push(this._createImageData(assets[i]))\n          } else if (assets[i].t === 3) {\n            this.totalFootages += 1\n            this.images.push(this.createFootageData(assets[i]))\n          }\n        }\n      }\n    }\n\n    function setPath(path) {\n      this.path = path || ''\n    }\n\n    function setAssetsPath(path) {\n      this.assetsPath = path || ''\n    }\n\n    function getAsset(assetData) {\n      var i = 0\n      var len = this.images.length\n      while (i < len) {\n        if (this.images[i].assetData === assetData) {\n          return this.images[i].img\n        }\n        i += 1\n      }\n      return null\n    }\n\n    function destroy() {\n      this.imagesLoadedCb = null\n      this.images.length = 0\n    }\n\n    function loadedImages() {\n      return this.totalImages === this.loadedAssets\n    }\n\n    function loadedFootages() {\n      return this.totalFootages === this.loadedFootagesCount\n    }\n\n    function setCacheType(type, elementHelper) {\n      if (type === 'svg') {\n        this._elementHelper = elementHelper\n        this._createImageData = this.createImageData.bind(this)\n      } else {\n        this._createImageData = this.createImgData.bind(this)\n      }\n    }\n\n    function ImagePreloaderFactory() {\n      this._imageLoaded = imageLoaded.bind(this)\n      this._footageLoaded = footageLoaded.bind(this)\n      this.testImageLoaded = testImageLoaded.bind(this)\n      this.createFootageData = createFootageData.bind(this)\n      this.assetsPath = ''\n      this.path = ''\n      this.totalImages = 0\n      this.totalFootages = 0\n      this.loadedAssets = 0\n      this.loadedFootagesCount = 0\n      this.imagesLoadedCb = null\n      this.images = []\n    }\n\n    ImagePreloaderFactory.prototype = {\n      loadAssets: loadAssets,\n      setAssetsPath: setAssetsPath,\n      setPath: setPath,\n      loadedImages: loadedImages,\n      loadedFootages: loadedFootages,\n      destroy: destroy,\n      getAsset: getAsset,\n      createImgData: createImgData,\n      createImageData: createImageData,\n      imageLoaded: imageLoaded,\n      footageLoaded: footageLoaded,\n      setCacheType: setCacheType,\n    }\n\n    return ImagePreloaderFactory\n  })()\n\n  function BaseEvent() {}\n  BaseEvent.prototype = {\n    triggerEvent: function (eventName, args) {\n      if (this._cbs[eventName]) {\n        var callbacks = this._cbs[eventName]\n        for (var i = 0; i < callbacks.length; i += 1) {\n          callbacks[i](args)\n        }\n      }\n    },\n    addEventListener: function (eventName, callback) {\n      if (!this._cbs[eventName]) {\n        this._cbs[eventName] = []\n      }\n      this._cbs[eventName].push(callback)\n\n      return function () {\n        this.removeEventListener(eventName, callback)\n      }.bind(this)\n    },\n    removeEventListener: function (eventName, callback) {\n      if (!callback) {\n        this._cbs[eventName] = null\n      } else if (this._cbs[eventName]) {\n        var i = 0\n        var len = this._cbs[eventName].length\n        while (i < len) {\n          if (this._cbs[eventName][i] === callback) {\n            this._cbs[eventName].splice(i, 1)\n            i -= 1\n            len -= 1\n          }\n          i += 1\n        }\n        if (!this._cbs[eventName].length) {\n          this._cbs[eventName] = null\n        }\n      }\n    },\n  }\n\n  const markerParser = (function () {\n    function parsePayloadLines(payload) {\n      var lines = payload.split('\\r\\n')\n      var keys = {}\n      var line\n      var keysCount = 0\n      for (var i = 0; i < lines.length; i += 1) {\n        line = lines[i].split(':')\n        if (line.length === 2) {\n          keys[line[0]] = line[1].trim()\n          keysCount += 1\n        }\n      }\n      if (keysCount === 0) {\n        throw new Error()\n      }\n      return keys\n    }\n\n    return function (_markers) {\n      var markers = []\n      for (var i = 0; i < _markers.length; i += 1) {\n        var _marker = _markers[i]\n        var markerData = {\n          time: _marker.tm,\n          duration: _marker.dr,\n        }\n        try {\n          markerData.payload = JSON.parse(_markers[i].cm)\n        } catch (_) {\n          try {\n            markerData.payload = parsePayloadLines(_markers[i].cm)\n          } catch (__) {\n            markerData.payload = {\n              name: _markers[i].cm,\n            }\n          }\n        }\n        markers.push(markerData)\n      }\n      return markers\n    }\n  })()\n\n  const ProjectInterface = (function () {\n    function registerComposition(comp) {\n      this.compositions.push(comp)\n    }\n\n    return function () {\n      function _thisProjectFunction(name) {\n        var i = 0\n        var len = this.compositions.length\n        while (i < len) {\n          if (this.compositions[i].data && this.compositions[i].data.nm === name) {\n            if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\n              this.compositions[i].prepareFrame(this.currentFrame)\n            }\n            return this.compositions[i].compInterface\n          }\n          i += 1\n        }\n        return null\n      }\n\n      _thisProjectFunction.compositions = []\n      _thisProjectFunction.currentFrame = 0\n\n      _thisProjectFunction.registerComposition = registerComposition\n\n      return _thisProjectFunction\n    }\n  })()\n\n  const renderers = {}\n\n  const registerRenderer = (key, value) => {\n    renderers[key] = value\n  }\n\n  function getRenderer(key) {\n    return renderers[key]\n  }\n\n  const AnimationItem = function () {\n    this._cbs = []\n    this.name = ''\n    this.path = ''\n    this.isLoaded = false\n    this.currentFrame = 0\n    this.currentRawFrame = 0\n    this.firstFrame = 0\n    this.totalFrames = 0\n    this.frameRate = 0\n    this.frameMult = 0\n    this.playSpeed = 1\n    this.playDirection = 1\n    this.playCount = 0\n    this.animationData = {}\n    this.assets = []\n    this.isPaused = true\n    this.autoplay = false\n    this.loop = true\n    this.renderer = null\n    this.animationID = createElementID()\n    this.assetsPath = ''\n    this.timeCompleted = 0\n    this.segmentPos = 0\n    this.isSubframeEnabled = getSubframeEnabled()\n    this.segments = []\n    this._idle = true\n    this._completedLoop = false\n    this.projectInterface = ProjectInterface()\n    this.imagePreloader = new ImagePreloader()\n    this.audioController = audioControllerFactory()\n    this.markers = []\n    this.configAnimation = this.configAnimation.bind(this)\n    this.onSetupError = this.onSetupError.bind(this)\n    this.onSegmentComplete = this.onSegmentComplete.bind(this)\n    this.drawnFrameEvent = new BMEnterFrameEvent('drawnFrame', 0, 0, 0)\n  }\n\n  extendPrototype([BaseEvent], AnimationItem)\n\n  AnimationItem.prototype.setParams = function (params) {\n    if (params.wrapper || params.container) {\n      this.wrapper = params.wrapper || params.container\n    }\n    var animType = 'svg'\n    if (params.animType) {\n      animType = params.animType\n    } else if (params.renderer) {\n      animType = params.renderer\n    }\n    const RendererClass = getRenderer(animType)\n    this.renderer = new RendererClass(this, params.rendererSettings)\n    this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs)\n    this.renderer.setProjectInterface(this.projectInterface)\n    this.animType = animType\n    if (params.loop === '' || params.loop === null || params.loop === undefined || params.loop === true) {\n      this.loop = true\n    } else if (params.loop === false) {\n      this.loop = false\n    } else {\n      this.loop = parseInt(params.loop, 10)\n    }\n    this.autoplay = 'autoplay' in params ? params.autoplay : true\n    this.name = params.name ? params.name : ''\n    this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, 'autoloadSegments')\n      ? params.autoloadSegments\n      : true\n    this.assetsPath = params.assetsPath\n    this.initialSegment = params.initialSegment\n    if (params.audioFactory) {\n      this.audioController.setAudioFactory(params.audioFactory)\n    }\n    if (params.animationData) {\n      this.setupAnimation(params.animationData)\n    } else if (params.path) {\n      if (params.path.lastIndexOf('\\\\') !== -1) {\n        this.path = params.path.substr(0, params.path.lastIndexOf('\\\\') + 1)\n      } else {\n        this.path = params.path.substr(0, params.path.lastIndexOf('/') + 1)\n      }\n      this.fileName = params.path.substr(params.path.lastIndexOf('/') + 1)\n      this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf('.json'))\n      dataManager.loadAnimation(params.path, this.configAnimation, this.onSetupError)\n    }\n  }\n\n  AnimationItem.prototype.onSetupError = function () {\n    this.trigger('data_failed')\n  }\n\n  AnimationItem.prototype.setupAnimation = function (data) {\n    dataManager.completeAnimation(data, this.configAnimation)\n  }\n\n  AnimationItem.prototype.setData = function (wrapper, animationData) {\n    if (animationData) {\n      if (typeof animationData !== 'object') {\n        animationData = JSON.parse(animationData)\n      }\n    }\n    var params = {\n      wrapper: wrapper,\n      animationData: animationData,\n    }\n    var wrapperAttributes = wrapper.attributes\n\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-animation-path').value\n      : wrapperAttributes.getNamedItem('data-bm-path') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-path').value\n      : wrapperAttributes.getNamedItem('bm-path')\n      ? wrapperAttributes.getNamedItem('bm-path').value\n      : ''\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-anim-type').value\n      : wrapperAttributes.getNamedItem('data-bm-type') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-type').value\n      : wrapperAttributes.getNamedItem('bm-type') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('bm-type').value\n      : wrapperAttributes.getNamedItem('data-bm-renderer') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-renderer').value\n      : wrapperAttributes.getNamedItem('bm-renderer')\n      ? wrapperAttributes.getNamedItem('bm-renderer').value\n      : 'canvas'\n\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-anim-loop').value\n      : wrapperAttributes.getNamedItem('data-bm-loop') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-loop').value\n      : wrapperAttributes.getNamedItem('bm-loop')\n      ? wrapperAttributes.getNamedItem('bm-loop').value\n      : ''\n    if (loop === 'false') {\n      params.loop = false\n    } else if (loop === 'true') {\n      params.loop = true\n    } else if (loop !== '') {\n      params.loop = parseInt(loop, 10)\n    }\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-anim-autoplay').value\n      : wrapperAttributes.getNamedItem('data-bm-autoplay') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-autoplay').value\n      : wrapperAttributes.getNamedItem('bm-autoplay')\n      ? wrapperAttributes.getNamedItem('bm-autoplay').value\n      : true\n    params.autoplay = autoplay !== 'false'\n\n    params.name = wrapperAttributes.getNamedItem('data-name') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-name').value\n      : wrapperAttributes.getNamedItem('data-bm-name') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-name').value\n      : wrapperAttributes.getNamedItem('bm-name')\n      ? wrapperAttributes.getNamedItem('bm-name').value\n      : ''\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-anim-prerender').value\n      : wrapperAttributes.getNamedItem('data-bm-prerender') // eslint-disable-line no-nested-ternary\n      ? wrapperAttributes.getNamedItem('data-bm-prerender').value\n      : wrapperAttributes.getNamedItem('bm-prerender')\n      ? wrapperAttributes.getNamedItem('bm-prerender').value\n      : ''\n\n    if (prerender === 'false') {\n      params.prerender = false\n    }\n    this.setParams(params)\n  }\n\n  AnimationItem.prototype.includeLayers = function (data) {\n    if (data.op > this.animationData.op) {\n      this.animationData.op = data.op\n      this.totalFrames = Math.floor(data.op - this.animationData.ip)\n    }\n    var layers = this.animationData.layers\n    var i\n    var len = layers.length\n    var newLayers = data.layers\n    var j\n    var jLen = newLayers.length\n    for (j = 0; j < jLen; j += 1) {\n      i = 0\n      while (i < len) {\n        if (layers[i].id === newLayers[j].id) {\n          layers[i] = newLayers[j]\n          break\n        }\n        i += 1\n      }\n    }\n    if (data.chars || data.fonts) {\n      this.renderer.globalData.fontManager.addChars(data.chars)\n      this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs)\n    }\n    if (data.assets) {\n      len = data.assets.length\n      for (i = 0; i < len; i += 1) {\n        this.animationData.assets.push(data.assets[i])\n      }\n    }\n    this.animationData.__complete = false\n    dataManager.completeAnimation(this.animationData, this.onSegmentComplete)\n  }\n\n  AnimationItem.prototype.onSegmentComplete = function (data) {\n    this.animationData = data\n    var expressionsPlugin = getExpressionsPlugin()\n    if (expressionsPlugin) {\n      expressionsPlugin.initExpressions(this)\n    }\n    this.loadNextSegment()\n  }\n\n  AnimationItem.prototype.loadNextSegment = function () {\n    var segments = this.animationData.segments\n    if (!segments || segments.length === 0 || !this.autoloadSegments) {\n      this.trigger('data_ready')\n      this.timeCompleted = this.totalFrames\n      return\n    }\n    var segment = segments.shift()\n    this.timeCompleted = segment.time * this.frameRate\n    var segmentPath = this.path + this.fileName + '_' + this.segmentPos + '.json'\n    this.segmentPos += 1\n    dataManager.loadData(\n      segmentPath,\n      this.includeLayers.bind(this),\n      function () {\n        this.trigger('data_failed')\n      }.bind(this),\n    )\n  }\n\n  AnimationItem.prototype.loadSegments = function () {\n    var segments = this.animationData.segments\n    if (!segments) {\n      this.timeCompleted = this.totalFrames\n    }\n    this.loadNextSegment()\n  }\n\n  AnimationItem.prototype.imagesLoaded = function () {\n    this.trigger('loaded_images')\n    this.checkLoaded()\n  }\n\n  AnimationItem.prototype.preloadImages = function () {\n    this.imagePreloader.setAssetsPath(this.assetsPath)\n    this.imagePreloader.setPath(this.path)\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this))\n  }\n\n  AnimationItem.prototype.configAnimation = function (animData) {\n    if (!this.renderer) {\n      return\n    }\n    try {\n      this.animationData = animData\n      if (this.initialSegment) {\n        this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0])\n        this.firstFrame = Math.round(this.initialSegment[0])\n      } else {\n        this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip)\n        this.firstFrame = Math.round(this.animationData.ip)\n      }\n      this.renderer.configAnimation(animData)\n      if (!animData.assets) {\n        animData.assets = []\n      }\n\n      this.assets = this.animationData.assets\n      this.frameRate = this.animationData.fr\n      this.frameMult = this.animationData.fr / 1000\n      this.renderer.searchExtraCompositions(animData.assets)\n      this.markers = markerParser(animData.markers || [])\n      this.trigger('config_ready')\n      this.preloadImages()\n      this.loadSegments()\n      this.updaFrameModifier()\n      this.waitForFontsLoaded()\n      if (this.isPaused) {\n        this.audioController.pause()\n      }\n    } catch (error) {\n      this.triggerConfigError(error)\n    }\n  }\n\n  AnimationItem.prototype.waitForFontsLoaded = function () {\n    if (!this.renderer) {\n      return\n    }\n    if (this.renderer.globalData.fontManager.isLoaded) {\n      this.checkLoaded()\n    } else {\n      setTimeout(this.waitForFontsLoaded.bind(this), 20)\n    }\n  }\n\n  AnimationItem.prototype.checkLoaded = function () {\n    if (\n      !this.isLoaded &&\n      this.renderer.globalData.fontManager.isLoaded &&\n      (this.imagePreloader.loadedImages() || this.renderer.rendererType !== 'canvas') &&\n      this.imagePreloader.loadedFootages()\n    ) {\n      this.isLoaded = true\n      var expressionsPlugin = getExpressionsPlugin()\n      if (expressionsPlugin) {\n        expressionsPlugin.initExpressions(this)\n      }\n      this.renderer.initItems()\n      setTimeout(\n        function () {\n          this.trigger('DOMLoaded')\n        }.bind(this),\n        0,\n      )\n      this.gotoFrame()\n      if (this.autoplay) {\n        this.play()\n      }\n    }\n  }\n\n  AnimationItem.prototype.resize = function () {\n    this.renderer.updateContainerSize()\n  }\n\n  AnimationItem.prototype.setSubframe = function (flag) {\n    this.isSubframeEnabled = !!flag\n  }\n\n  AnimationItem.prototype.gotoFrame = function () {\n    this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame // eslint-disable-line no-bitwise\n\n    if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\n      this.currentFrame = this.timeCompleted\n    }\n    this.trigger('enterFrame')\n    this.renderFrame()\n    this.trigger('drawnFrame')\n  }\n\n  AnimationItem.prototype.renderFrame = function () {\n    if (this.isLoaded === false || !this.renderer) {\n      return\n    }\n    try {\n      this.renderer.renderFrame(this.currentFrame + this.firstFrame)\n    } catch (error) {\n      this.triggerRenderFrameError(error)\n    }\n  }\n\n  AnimationItem.prototype.play = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    if (this.isPaused === true) {\n      this.isPaused = false\n      this.trigger('_pause')\n      this.audioController.resume()\n      if (this._idle) {\n        this._idle = false\n        this.trigger('_active')\n      }\n    }\n  }\n\n  AnimationItem.prototype.pause = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    if (this.isPaused === false) {\n      this.isPaused = true\n      this.trigger('_play')\n      this._idle = true\n      this.trigger('_idle')\n      this.audioController.pause()\n    }\n  }\n\n  AnimationItem.prototype.togglePause = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    if (this.isPaused === true) {\n      this.play()\n    } else {\n      this.pause()\n    }\n  }\n\n  AnimationItem.prototype.stop = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    this.pause()\n    this.playCount = 0\n    this._completedLoop = false\n    this.setCurrentRawFrameValue(0)\n  }\n\n  AnimationItem.prototype.getMarkerData = function (markerName) {\n    var marker\n    for (var i = 0; i < this.markers.length; i += 1) {\n      marker = this.markers[i]\n      if (marker.payload && marker.payload.name === markerName) {\n        return marker\n      }\n    }\n    return null\n  }\n\n  AnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return\n    }\n    var numValue = Number(value)\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value)\n      if (marker) {\n        this.goToAndStop(marker.time, true)\n      }\n    } else if (isFrame) {\n      this.setCurrentRawFrameValue(value)\n    } else {\n      this.setCurrentRawFrameValue(value * this.frameModifier)\n    }\n    this.pause()\n  }\n\n  AnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\n    if (name && this.name !== name) {\n      return\n    }\n    var numValue = Number(value)\n    if (isNaN(numValue)) {\n      var marker = this.getMarkerData(value)\n      if (marker) {\n        if (!marker.duration) {\n          this.goToAndStop(marker.time, true)\n        } else {\n          this.playSegments([marker.time, marker.time + marker.duration], true)\n        }\n      }\n    } else {\n      this.goToAndStop(numValue, isFrame, name)\n    }\n    this.play()\n  }\n\n  AnimationItem.prototype.advanceTime = function (value) {\n    if (this.isPaused === true || this.isLoaded === false) {\n      return\n    }\n    var nextValue = this.currentRawFrame + value * this.frameModifier\n    var _isComplete = false\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\n      if (!this.loop || this.playCount === this.loop) {\n        if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {\n          _isComplete = true\n          nextValue = this.totalFrames - 1\n        }\n      } else if (nextValue >= this.totalFrames) {\n        this.playCount += 1\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\n          this.setCurrentRawFrameValue(nextValue % this.totalFrames)\n          this._completedLoop = true\n          this.trigger('loopComplete')\n        }\n      } else {\n        this.setCurrentRawFrameValue(nextValue)\n      }\n    } else if (nextValue < 0) {\n      if (!this.checkSegments(nextValue % this.totalFrames)) {\n        if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\n          // eslint-disable-line no-plusplus\n          this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames))\n          if (!this._completedLoop) {\n            this._completedLoop = true\n          } else {\n            this.trigger('loopComplete')\n          }\n        } else {\n          _isComplete = true\n          nextValue = 0\n        }\n      }\n    } else {\n      this.setCurrentRawFrameValue(nextValue)\n    }\n    if (_isComplete) {\n      this.setCurrentRawFrameValue(nextValue)\n      this.pause()\n      this.trigger('complete')\n    }\n  }\n\n  AnimationItem.prototype.adjustSegment = function (arr, offset) {\n    this.playCount = 0\n    if (arr[1] < arr[0]) {\n      if (this.frameModifier > 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed)\n        } else {\n          this.setDirection(-1)\n        }\n      }\n      this.totalFrames = arr[0] - arr[1]\n      this.timeCompleted = this.totalFrames\n      this.firstFrame = arr[1]\n      this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset)\n    } else if (arr[1] > arr[0]) {\n      if (this.frameModifier < 0) {\n        if (this.playSpeed < 0) {\n          this.setSpeed(-this.playSpeed)\n        } else {\n          this.setDirection(1)\n        }\n      }\n      this.totalFrames = arr[1] - arr[0]\n      this.timeCompleted = this.totalFrames\n      this.firstFrame = arr[0]\n      this.setCurrentRawFrameValue(0.001 + offset)\n    }\n    this.trigger('segmentStart')\n  }\n  AnimationItem.prototype.setSegment = function (init, end) {\n    var pendingFrame = -1\n    if (this.isPaused) {\n      if (this.currentRawFrame + this.firstFrame < init) {\n        pendingFrame = init\n      } else if (this.currentRawFrame + this.firstFrame > end) {\n        pendingFrame = end - init\n      }\n    }\n\n    this.firstFrame = init\n    this.totalFrames = end - init\n    this.timeCompleted = this.totalFrames\n    if (pendingFrame !== -1) {\n      this.goToAndStop(pendingFrame, true)\n    }\n  }\n\n  AnimationItem.prototype.playSegments = function (arr, forceFlag) {\n    if (forceFlag) {\n      this.segments.length = 0\n    }\n    if (typeof arr[0] === 'object') {\n      var i\n      var len = arr.length\n      for (i = 0; i < len; i += 1) {\n        this.segments.push(arr[i])\n      }\n    } else {\n      this.segments.push(arr)\n    }\n    if (this.segments.length && forceFlag) {\n      this.adjustSegment(this.segments.shift(), 0)\n    }\n    if (this.isPaused) {\n      this.play()\n    }\n  }\n\n  AnimationItem.prototype.resetSegments = function (forceFlag) {\n    this.segments.length = 0\n    this.segments.push([this.animationData.ip, this.animationData.op])\n    if (forceFlag) {\n      this.checkSegments(0)\n    }\n  }\n  AnimationItem.prototype.checkSegments = function (offset) {\n    if (this.segments.length) {\n      this.adjustSegment(this.segments.shift(), offset)\n      return true\n    }\n    return false\n  }\n\n  AnimationItem.prototype.destroy = function (name) {\n    if ((name && this.name !== name) || !this.renderer) {\n      return\n    }\n    this.renderer.destroy()\n    this.imagePreloader.destroy()\n    this.trigger('destroy')\n    this._cbs = null\n    this.onEnterFrame = null\n    this.onLoopComplete = null\n    this.onComplete = null\n    this.onSegmentStart = null\n    this.onDestroy = null\n    this.renderer = null\n    this.renderer = null\n    this.imagePreloader = null\n    this.projectInterface = null\n  }\n\n  AnimationItem.prototype.setCurrentRawFrameValue = function (value) {\n    this.currentRawFrame = value\n    this.gotoFrame()\n  }\n\n  AnimationItem.prototype.setSpeed = function (val) {\n    this.playSpeed = val\n    this.updaFrameModifier()\n  }\n\n  AnimationItem.prototype.setDirection = function (val) {\n    this.playDirection = val < 0 ? -1 : 1\n    this.updaFrameModifier()\n  }\n\n  AnimationItem.prototype.setVolume = function (val, name) {\n    if (name && this.name !== name) {\n      return\n    }\n    this.audioController.setVolume(val)\n  }\n\n  AnimationItem.prototype.getVolume = function () {\n    return this.audioController.getVolume()\n  }\n\n  AnimationItem.prototype.mute = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    this.audioController.mute()\n  }\n\n  AnimationItem.prototype.unmute = function (name) {\n    if (name && this.name !== name) {\n      return\n    }\n    this.audioController.unmute()\n  }\n\n  AnimationItem.prototype.updaFrameModifier = function () {\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection\n    this.audioController.setRate(this.playSpeed * this.playDirection)\n  }\n\n  AnimationItem.prototype.getPath = function () {\n    return this.path\n  }\n\n  AnimationItem.prototype.getAssetsPath = function (assetData) {\n    var path = ''\n    if (assetData.e) {\n      path = assetData.p\n    } else if (this.assetsPath) {\n      var imagePath = assetData.p\n      if (imagePath.indexOf('images/') !== -1) {\n        imagePath = imagePath.split('/')[1]\n      }\n      path = this.assetsPath + imagePath\n    } else {\n      path = this.path\n      path += assetData.u ? assetData.u : ''\n      path += assetData.p\n    }\n    return path\n  }\n\n  AnimationItem.prototype.getAssetData = function (id) {\n    var i = 0\n    var len = this.assets.length\n    while (i < len) {\n      if (id === this.assets[i].id) {\n        return this.assets[i]\n      }\n      i += 1\n    }\n    return null\n  }\n\n  AnimationItem.prototype.hide = function () {\n    this.renderer.hide()\n  }\n\n  AnimationItem.prototype.show = function () {\n    this.renderer.show()\n  }\n\n  AnimationItem.prototype.getDuration = function (isFrame) {\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate\n  }\n\n  AnimationItem.prototype.updateDocumentData = function (path, documentData, index) {\n    try {\n      var element = this.renderer.getElementByPath(path)\n      element.updateDocumentData(documentData, index)\n    } catch (error) {\n      // TODO: decide how to handle catch case\n    }\n  }\n\n  AnimationItem.prototype.trigger = function (name) {\n    if (this._cbs && this._cbs[name]) {\n      switch (name) {\n        case 'enterFrame':\n          this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier))\n          break\n        case 'drawnFrame':\n          this.drawnFrameEvent.currentTime = this.currentFrame\n          this.drawnFrameEvent.totalTime = this.totalFrames\n          this.drawnFrameEvent.direction = this.frameModifier\n          this.triggerEvent(name, this.drawnFrameEvent)\n          break\n        case 'loopComplete':\n          this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult))\n          break\n        case 'complete':\n          this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult))\n          break\n        case 'segmentStart':\n          this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames))\n          break\n        case 'destroy':\n          this.triggerEvent(name, new BMDestroyEvent(name, this))\n          break\n        default:\n          this.triggerEvent(name)\n      }\n    }\n    if (name === 'enterFrame' && this.onEnterFrame) {\n      this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult))\n    }\n    if (name === 'loopComplete' && this.onLoopComplete) {\n      this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult))\n    }\n    if (name === 'complete' && this.onComplete) {\n      this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult))\n    }\n    if (name === 'segmentStart' && this.onSegmentStart) {\n      this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames))\n    }\n    if (name === 'destroy' && this.onDestroy) {\n      this.onDestroy.call(this, new BMDestroyEvent(name, this))\n    }\n  }\n\n  AnimationItem.prototype.triggerRenderFrameError = function (nativeError) {\n    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame)\n    this.triggerEvent('error', error)\n\n    if (this.onError) {\n      this.onError.call(this, error)\n    }\n  }\n\n  AnimationItem.prototype.triggerConfigError = function (nativeError) {\n    var error = new BMConfigErrorEvent(nativeError, this.currentFrame)\n    this.triggerEvent('error', error)\n\n    if (this.onError) {\n      this.onError.call(this, error)\n    }\n  }\n\n  const animationManager = (function () {\n    var moduleOb = {}\n    var registeredAnimations = []\n    var initTime = 0\n    var len = 0\n    var playingAnimationsNum = 0\n    var _stopped = true\n    var _isFrozen = false\n\n    function removeElement(ev) {\n      var i = 0\n      var animItem = ev.target\n      while (i < len) {\n        if (registeredAnimations[i].animation === animItem) {\n          registeredAnimations.splice(i, 1)\n          i -= 1\n          len -= 1\n          if (!animItem.isPaused) {\n            subtractPlayingCount()\n          }\n        }\n        i += 1\n      }\n    }\n\n    function registerAnimation(element, animationData) {\n      if (!element) {\n        return null\n      }\n      var i = 0\n      while (i < len) {\n        if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {\n          return registeredAnimations[i].animation\n        }\n        i += 1\n      }\n      var animItem = new AnimationItem()\n      setupAnimation(animItem, element)\n      animItem.setData(element, animationData)\n      return animItem\n    }\n\n    function getRegisteredAnimations() {\n      var i\n      var lenAnims = registeredAnimations.length\n      var animations = []\n      for (i = 0; i < lenAnims; i += 1) {\n        animations.push(registeredAnimations[i].animation)\n      }\n      return animations\n    }\n\n    function addPlayingCount() {\n      playingAnimationsNum += 1\n      activate()\n    }\n\n    function subtractPlayingCount() {\n      playingAnimationsNum -= 1\n    }\n\n    function setupAnimation(animItem, element) {\n      animItem.addEventListener('destroy', removeElement)\n      animItem.addEventListener('_active', addPlayingCount)\n      animItem.addEventListener('_idle', subtractPlayingCount)\n      registeredAnimations.push({ elem: element, animation: animItem })\n      len += 1\n    }\n\n    function loadAnimation(params) {\n      var animItem = new AnimationItem()\n      setupAnimation(animItem, null)\n      animItem.setParams(params)\n      return animItem\n    }\n\n    function setSpeed(val, animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setSpeed(val, animation)\n      }\n    }\n\n    function setDirection(val, animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setDirection(val, animation)\n      }\n    }\n\n    function play(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.play(animation)\n      }\n    }\n    function resume(nowTime) {\n      var elapsedTime = nowTime - initTime\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.advanceTime(elapsedTime)\n      }\n      initTime = nowTime\n      if (playingAnimationsNum && !_isFrozen) {\n        window.requestAnimationFrame(resume)\n      } else {\n        _stopped = true\n      }\n    }\n\n    function first(nowTime) {\n      initTime = nowTime\n      window.requestAnimationFrame(resume)\n    }\n\n    function pause(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.pause(animation)\n      }\n    }\n\n    function goToAndStop(value, isFrame, animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.goToAndStop(value, isFrame, animation)\n      }\n    }\n\n    function stop(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.stop(animation)\n      }\n    }\n\n    function togglePause(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.togglePause(animation)\n      }\n    }\n\n    function destroy(animation) {\n      var i\n      for (i = len - 1; i >= 0; i -= 1) {\n        registeredAnimations[i].animation.destroy(animation)\n      }\n    }\n\n    function searchAnimations(animationData, standalone, renderer) {\n      var animElements = [].concat(\n        [].slice.call(document.getElementsByClassName('lottie')),\n        [].slice.call(document.getElementsByClassName('bodymovin')),\n      )\n      var i\n      var lenAnims = animElements.length\n      for (i = 0; i < lenAnims; i += 1) {\n        if (renderer) {\n          animElements[i].setAttribute('data-bm-type', renderer)\n        }\n        registerAnimation(animElements[i], animationData)\n      }\n      if (standalone && lenAnims === 0) {\n        if (!renderer) {\n          renderer = 'svg'\n        }\n        var body = document.getElementsByTagName('body')[0]\n        body.innerText = ''\n        var div = createTag('div')\n        div.style.width = '100%'\n        div.style.height = '100%'\n        div.setAttribute('data-bm-type', renderer)\n        body.appendChild(div)\n        registerAnimation(div, animationData)\n      }\n    }\n\n    function resize() {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.resize()\n      }\n    }\n\n    function activate() {\n      if (!_isFrozen && playingAnimationsNum) {\n        if (_stopped) {\n          window.requestAnimationFrame(first)\n          _stopped = false\n        }\n      }\n    }\n\n    function freeze() {\n      _isFrozen = true\n    }\n\n    function unfreeze() {\n      _isFrozen = false\n      activate()\n    }\n\n    function setVolume(val, animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.setVolume(val, animation)\n      }\n    }\n\n    function mute(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.mute(animation)\n      }\n    }\n\n    function unmute(animation) {\n      var i\n      for (i = 0; i < len; i += 1) {\n        registeredAnimations[i].animation.unmute(animation)\n      }\n    }\n\n    moduleOb.registerAnimation = registerAnimation\n    moduleOb.loadAnimation = loadAnimation\n    moduleOb.setSpeed = setSpeed\n    moduleOb.setDirection = setDirection\n    moduleOb.play = play\n    moduleOb.pause = pause\n    moduleOb.stop = stop\n    moduleOb.togglePause = togglePause\n    moduleOb.searchAnimations = searchAnimations\n    moduleOb.resize = resize\n    // moduleOb.start = start;\n    moduleOb.goToAndStop = goToAndStop\n    moduleOb.destroy = destroy\n    moduleOb.freeze = freeze\n    moduleOb.unfreeze = unfreeze\n    moduleOb.setVolume = setVolume\n    moduleOb.mute = mute\n    moduleOb.unmute = unmute\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations\n    return moduleOb\n  })()\n\n  /* eslint-disable */\n  const BezierFactory = (function () {\n    /**\n     * BezierEasing - use bezier curve for transition easing function\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n     *\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\n     * Usage:\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\n     *\n     */\n\n    var ob = {}\n    ob.getBezierEasing = getBezierEasing\n    var beziers = {}\n\n    function getBezierEasing(a, b, c, d, nm) {\n      var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\\./g, 'p')\n      if (beziers[str]) {\n        return beziers[str]\n      }\n      var bezEasing = new BezierEasing([a, b, c, d])\n      beziers[str] = bezEasing\n      return bezEasing\n    }\n\n    // These values are established by empiricism with tests (tradeoff: performance VS precision)\n    var NEWTON_ITERATIONS = 4\n    var NEWTON_MIN_SLOPE = 0.001\n    var SUBDIVISION_PRECISION = 0.0000001\n    var SUBDIVISION_MAX_ITERATIONS = 10\n\n    var kSplineTableSize = 11\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0)\n\n    var float32ArraySupported = typeof Float32Array === 'function'\n\n    function A(aA1, aA2) {\n      return 1.0 - 3.0 * aA2 + 3.0 * aA1\n    }\n    function B(aA1, aA2) {\n      return 3.0 * aA2 - 6.0 * aA1\n    }\n    function C(aA1) {\n      return 3.0 * aA1\n    }\n\n    // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n    function calcBezier(aT, aA1, aA2) {\n      return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT\n    }\n\n    // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n    function getSlope(aT, aA1, aA2) {\n      return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1)\n    }\n\n    function binarySubdivide(aX, aA, aB, mX1, mX2) {\n      var currentX,\n        currentT,\n        i = 0\n      do {\n        currentT = aA + (aB - aA) / 2.0\n        currentX = calcBezier(currentT, mX1, mX2) - aX\n        if (currentX > 0.0) {\n          aB = currentT\n        } else {\n          aA = currentT\n        }\n      } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS)\n      return currentT\n    }\n\n    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n      for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2)\n        if (currentSlope === 0.0) return aGuessT\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX\n        aGuessT -= currentX / currentSlope\n      }\n      return aGuessT\n    }\n\n    /**\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\n     */\n    function BezierEasing(points) {\n      this._p = points\n      this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize)\n      this._precomputed = false\n\n      this.get = this.get.bind(this)\n    }\n\n    BezierEasing.prototype = {\n      get: function (x) {\n        var mX1 = this._p[0],\n          mY1 = this._p[1],\n          mX2 = this._p[2],\n          mY2 = this._p[3]\n        if (!this._precomputed) this._precompute()\n        if (mX1 === mY1 && mX2 === mY2) return x // linear\n        // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n        if (x === 0) return 0\n        if (x === 1) return 1\n        return calcBezier(this._getTForX(x), mY1, mY2)\n      },\n\n      // Private part\n\n      _precompute: function () {\n        var mX1 = this._p[0],\n          mY1 = this._p[1],\n          mX2 = this._p[2],\n          mY2 = this._p[3]\n        this._precomputed = true\n        if (mX1 !== mY1 || mX2 !== mY2) {\n          this._calcSampleValues()\n        }\n      },\n\n      _calcSampleValues: function () {\n        var mX1 = this._p[0],\n          mX2 = this._p[2]\n        for (var i = 0; i < kSplineTableSize; ++i) {\n          this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2)\n        }\n      },\n\n      /**\n       * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\n       */\n      _getTForX: function (aX) {\n        var mX1 = this._p[0],\n          mX2 = this._p[2],\n          mSampleValues = this._mSampleValues\n\n        var intervalStart = 0.0\n        var currentSample = 1\n        var lastSample = kSplineTableSize - 1\n\n        for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n          intervalStart += kSampleStepSize\n        }\n        --currentSample\n\n        // Interpolate to provide an initial guess for t\n        var dist =\n          (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample])\n        var guessForT = intervalStart + dist * kSampleStepSize\n\n        var initialSlope = getSlope(guessForT, mX1, mX2)\n        if (initialSlope >= NEWTON_MIN_SLOPE) {\n          return newtonRaphsonIterate(aX, guessForT, mX1, mX2)\n        }\n        if (initialSlope === 0.0) {\n          return guessForT\n        }\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2)\n      },\n    }\n\n    return ob\n  })()\n\n  const pooling = (function () {\n    function double(arr) {\n      return arr.concat(createSizedArray(arr.length))\n    }\n\n    return {\n      double: double,\n    }\n  })()\n\n  const poolFactory = (function () {\n    return function (initialLength, _create, _release) {\n      var _length = 0\n      var _maxLength = initialLength\n      var pool = createSizedArray(_maxLength)\n\n      var ob = {\n        newElement: newElement,\n        release: release,\n      }\n\n      function newElement() {\n        var element\n        if (_length) {\n          _length -= 1\n          element = pool[_length]\n        } else {\n          element = _create()\n        }\n        return element\n      }\n\n      function release(element) {\n        if (_length === _maxLength) {\n          pool = pooling.double(pool)\n          _maxLength *= 2\n        }\n        if (_release) {\n          _release(element)\n        }\n        pool[_length] = element\n        _length += 1\n      }\n\n      return ob\n    }\n  })()\n\n  const bezierLengthPool = (function () {\n    function create() {\n      return {\n        addedLength: 0,\n        percents: createTypedArray('float32', getDefaultCurveSegments()),\n        lengths: createTypedArray('float32', getDefaultCurveSegments()),\n      }\n    }\n    return poolFactory(8, create)\n  })()\n\n  const segmentsLengthPool = (function () {\n    function create() {\n      return {\n        lengths: [],\n        totalLength: 0,\n      }\n    }\n\n    function release(element) {\n      var i\n      var len = element.lengths.length\n      for (i = 0; i < len; i += 1) {\n        bezierLengthPool.release(element.lengths[i])\n      }\n      element.lengths.length = 0\n    }\n\n    return poolFactory(8, create, release)\n  })()\n\n  function bezFunction() {\n    var math = Math\n\n    function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\n      var det1 = x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1\n      return det1 > -0.001 && det1 < 0.001\n    }\n\n    function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\n      if (z1 === 0 && z2 === 0 && z3 === 0) {\n        return pointOnLine2D(x1, y1, x2, y2, x3, y3)\n      }\n      var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2))\n      var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2))\n      var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2))\n      var diffDist\n      if (dist1 > dist2) {\n        if (dist1 > dist3) {\n          diffDist = dist1 - dist2 - dist3\n        } else {\n          diffDist = dist3 - dist2 - dist1\n        }\n      } else if (dist3 > dist2) {\n        diffDist = dist3 - dist2 - dist1\n      } else {\n        diffDist = dist2 - dist1 - dist3\n      }\n      return diffDist > -0.0001 && diffDist < 0.0001\n    }\n\n    var getBezierLength = (function () {\n      return function (pt1, pt2, pt3, pt4) {\n        var curveSegments = getDefaultCurveSegments()\n        var k\n        var i\n        var len\n        var ptCoord\n        var perc\n        var addedLength = 0\n        var ptDistance\n        var point = []\n        var lastPoint = []\n        var lengthData = bezierLengthPool.newElement()\n        len = pt3.length\n        for (k = 0; k < curveSegments; k += 1) {\n          perc = k / (curveSegments - 1)\n          ptDistance = 0\n          for (i = 0; i < len; i += 1) {\n            ptCoord =\n              bmPow(1 - perc, 3) * pt1[i] +\n              3 * bmPow(1 - perc, 2) * perc * pt3[i] +\n              3 * (1 - perc) * bmPow(perc, 2) * pt4[i] +\n              bmPow(perc, 3) * pt2[i]\n            point[i] = ptCoord\n            if (lastPoint[i] !== null) {\n              ptDistance += bmPow(point[i] - lastPoint[i], 2)\n            }\n            lastPoint[i] = point[i]\n          }\n          if (ptDistance) {\n            ptDistance = bmSqrt(ptDistance)\n            addedLength += ptDistance\n          }\n          lengthData.percents[k] = perc\n          lengthData.lengths[k] = addedLength\n        }\n        lengthData.addedLength = addedLength\n        return lengthData\n      }\n    })()\n\n    function getSegmentsLength(shapeData) {\n      var segmentsLength = segmentsLengthPool.newElement()\n      var closed = shapeData.c\n      var pathV = shapeData.v\n      var pathO = shapeData.o\n      var pathI = shapeData.i\n      var i\n      var len = shapeData._length\n      var lengths = segmentsLength.lengths\n      var totalLength = 0\n      for (i = 0; i < len - 1; i += 1) {\n        lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1])\n        totalLength += lengths[i].addedLength\n      }\n      if (closed && len) {\n        lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0])\n        totalLength += lengths[i].addedLength\n      }\n      segmentsLength.totalLength = totalLength\n      return segmentsLength\n    }\n\n    function BezierData(length) {\n      this.segmentLength = 0\n      this.points = new Array(length)\n    }\n\n    function PointData(partial, point) {\n      this.partialLength = partial\n      this.point = point\n    }\n\n    var buildBezierData = (function () {\n      var storedData = {}\n\n      return function (pt1, pt2, pt3, pt4) {\n        var bezierName = (\n          pt1[0] +\n          '_' +\n          pt1[1] +\n          '_' +\n          pt2[0] +\n          '_' +\n          pt2[1] +\n          '_' +\n          pt3[0] +\n          '_' +\n          pt3[1] +\n          '_' +\n          pt4[0] +\n          '_' +\n          pt4[1]\n        ).replace(/\\./g, 'p')\n        if (!storedData[bezierName]) {\n          var curveSegments = getDefaultCurveSegments()\n          var k\n          var i\n          var len\n          var ptCoord\n          var perc\n          var addedLength = 0\n          var ptDistance\n          var point\n          var lastPoint = null\n          if (\n            pt1.length === 2 &&\n            (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) &&\n            pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) &&\n            pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])\n          ) {\n            curveSegments = 2\n          }\n          var bezierData = new BezierData(curveSegments)\n          len = pt3.length\n          for (k = 0; k < curveSegments; k += 1) {\n            point = createSizedArray(len)\n            perc = k / (curveSegments - 1)\n            ptDistance = 0\n            for (i = 0; i < len; i += 1) {\n              ptCoord =\n                bmPow(1 - perc, 3) * pt1[i] +\n                3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) +\n                3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) +\n                bmPow(perc, 3) * pt2[i]\n              point[i] = ptCoord\n              if (lastPoint !== null) {\n                ptDistance += bmPow(point[i] - lastPoint[i], 2)\n              }\n            }\n            ptDistance = bmSqrt(ptDistance)\n            addedLength += ptDistance\n            bezierData.points[k] = new PointData(ptDistance, point)\n            lastPoint = point\n          }\n          bezierData.segmentLength = addedLength\n          storedData[bezierName] = bezierData\n        }\n        return storedData[bezierName]\n      }\n    })()\n\n    function getDistancePerc(perc, bezierData) {\n      var percents = bezierData.percents\n      var lengths = bezierData.lengths\n      var len = percents.length\n      var initPos = bmFloor((len - 1) * perc)\n      var lengthPos = perc * bezierData.addedLength\n      var lPerc = 0\n      if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {\n        return percents[initPos]\n      }\n      var dir = lengths[initPos] > lengthPos ? -1 : 1\n      var flag = true\n      while (flag) {\n        if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {\n          lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos])\n          flag = false\n        } else {\n          initPos += dir\n        }\n        if (initPos < 0 || initPos >= len - 1) {\n          // FIX for TypedArrays that don't store floating point values with enough accuracy\n          if (initPos === len - 1) {\n            return percents[initPos]\n          }\n          flag = false\n        }\n      }\n      return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc\n    }\n\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\n      var t1 = getDistancePerc(percent, bezierData)\n      var u1 = 1 - t1\n      var ptX =\n        math.round(\n          (u1 * u1 * u1 * pt1[0] +\n            (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] +\n            (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] +\n            t1 * t1 * t1 * pt2[0]) *\n            1000,\n        ) / 1000\n      var ptY =\n        math.round(\n          (u1 * u1 * u1 * pt1[1] +\n            (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] +\n            (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] +\n            t1 * t1 * t1 * pt2[1]) *\n            1000,\n        ) / 1000\n      return [ptX, ptY]\n    }\n\n    var bezierSegmentPoints = createTypedArray('float32', 8)\n\n    function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\n      if (startPerc < 0) {\n        startPerc = 0\n      } else if (startPerc > 1) {\n        startPerc = 1\n      }\n      var t0 = getDistancePerc(startPerc, bezierData)\n      endPerc = endPerc > 1 ? 1 : endPerc\n      var t1 = getDistancePerc(endPerc, bezierData)\n      var i\n      var len = pt1.length\n      var u0 = 1 - t0\n      var u1 = 1 - t1\n      var u0u0u0 = u0 * u0 * u0\n      var t0u0u0_3 = t0 * u0 * u0 * 3 // eslint-disable-line camelcase\n      var t0t0u0_3 = t0 * t0 * u0 * 3 // eslint-disable-line camelcase\n      var t0t0t0 = t0 * t0 * t0\n      //\n      var u0u0u1 = u0 * u0 * u1\n      var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1 // eslint-disable-line camelcase\n      var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1 // eslint-disable-line camelcase\n      var t0t0t1 = t0 * t0 * t1\n      //\n      var u0u1u1 = u0 * u1 * u1\n      var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1 // eslint-disable-line camelcase\n      var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1 // eslint-disable-line camelcase\n      var t0t1t1 = t0 * t1 * t1\n      //\n      var u1u1u1 = u1 * u1 * u1\n      var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1 // eslint-disable-line camelcase\n      var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1 // eslint-disable-line camelcase\n      var t1t1t1 = t1 * t1 * t1\n      for (i = 0; i < len; i += 1) {\n        bezierSegmentPoints[i * 4] =\n          math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000 // eslint-disable-line camelcase\n        bezierSegmentPoints[i * 4 + 1] =\n          math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000 // eslint-disable-line camelcase\n        bezierSegmentPoints[i * 4 + 2] =\n          math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000 // eslint-disable-line camelcase\n        bezierSegmentPoints[i * 4 + 3] =\n          math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000 // eslint-disable-line camelcase\n      }\n\n      return bezierSegmentPoints\n    }\n\n    return {\n      getSegmentsLength: getSegmentsLength,\n      getNewSegment: getNewSegment,\n      getPointInSegment: getPointInSegment,\n      buildBezierData: buildBezierData,\n      pointOnLine2D: pointOnLine2D,\n      pointOnLine3D: pointOnLine3D,\n    }\n  }\n\n  const bez = bezFunction()\n\n  const PropertyFactory = (function () {\n    var initFrame = initialDefaultFrame\n    var mathAbs = Math.abs\n\n    function interpolateValue(frameNum, caching) {\n      var offsetTime = this.offsetTime\n      var newValue\n      if (this.propType === 'multidimensional') {\n        newValue = createTypedArray('float32', this.pv.length)\n      }\n      var iterationIndex = caching.lastIndex\n      var i = iterationIndex\n      var len = this.keyframes.length - 1\n      var flag = true\n      var keyData\n      var nextKeyData\n      var keyframeMetadata\n\n      while (flag) {\n        keyData = this.keyframes[i]\n        nextKeyData = this.keyframes[i + 1]\n        if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {\n          if (keyData.h) {\n            keyData = nextKeyData\n          }\n          iterationIndex = 0\n          break\n        }\n        if (nextKeyData.t - offsetTime > frameNum) {\n          iterationIndex = i\n          break\n        }\n        if (i < len - 1) {\n          i += 1\n        } else {\n          iterationIndex = 0\n          flag = false\n        }\n      }\n      keyframeMetadata = this.keyframesMetadata[i] || {}\n\n      var k\n      var kLen\n      var perc\n      var jLen\n      var j\n      var fnc\n      var nextKeyTime = nextKeyData.t - offsetTime\n      var keyTime = keyData.t - offsetTime\n      var endValue\n      if (keyData.to) {\n        if (!keyframeMetadata.bezierData) {\n          keyframeMetadata.bezierData = bez.buildBezierData(\n            keyData.s,\n            nextKeyData.s || keyData.e,\n            keyData.to,\n            keyData.ti,\n          )\n        }\n        var bezierData = keyframeMetadata.bezierData\n        if (frameNum >= nextKeyTime || frameNum < keyTime) {\n          var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0\n          kLen = bezierData.points[ind].point.length\n          for (k = 0; k < kLen; k += 1) {\n            newValue[k] = bezierData.points[ind].point[k]\n          }\n          // caching._lastKeyframeIndex = -1;\n        } else {\n          if (keyframeMetadata.__fnct) {\n            fnc = keyframeMetadata.__fnct\n          } else {\n            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get\n            keyframeMetadata.__fnct = fnc\n          }\n          perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime))\n          var distanceInLine = bezierData.segmentLength * perc\n\n          var segmentPerc\n          var addedLength =\n            caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastAddedLength : 0\n          j = caching.lastFrame < frameNum && caching._lastKeyframeIndex === i ? caching._lastPoint : 0\n          flag = true\n          jLen = bezierData.points.length\n          while (flag) {\n            addedLength += bezierData.points[j].partialLength\n            if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\n              kLen = bezierData.points[j].point.length\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] = bezierData.points[j].point[k]\n              }\n              break\n            } else if (\n              distanceInLine >= addedLength &&\n              distanceInLine < addedLength + bezierData.points[j + 1].partialLength\n            ) {\n              segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength\n              kLen = bezierData.points[j].point.length\n              for (k = 0; k < kLen; k += 1) {\n                newValue[k] =\n                  bezierData.points[j].point[k] +\n                  (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc\n              }\n              break\n            }\n            if (j < jLen - 1) {\n              j += 1\n            } else {\n              flag = false\n            }\n          }\n          caching._lastPoint = j\n          caching._lastAddedLength = addedLength - bezierData.points[j].partialLength\n          caching._lastKeyframeIndex = i\n        }\n      } else {\n        var outX\n        var outY\n        var inX\n        var inY\n        var keyValue\n        len = keyData.s.length\n        endValue = nextKeyData.s || keyData.e\n        if (this.sh && keyData.h !== 1) {\n          if (frameNum >= nextKeyTime) {\n            newValue[0] = endValue[0]\n            newValue[1] = endValue[1]\n            newValue[2] = endValue[2]\n          } else if (frameNum <= keyTime) {\n            newValue[0] = keyData.s[0]\n            newValue[1] = keyData.s[1]\n            newValue[2] = keyData.s[2]\n          } else {\n            var quatStart = createQuaternion(keyData.s)\n            var quatEnd = createQuaternion(endValue)\n            var time = (frameNum - keyTime) / (nextKeyTime - keyTime)\n            quaternionToEuler(newValue, slerp(quatStart, quatEnd, time))\n          }\n        } else {\n          for (i = 0; i < len; i += 1) {\n            if (keyData.h !== 1) {\n              if (frameNum >= nextKeyTime) {\n                perc = 1\n              } else if (frameNum < keyTime) {\n                perc = 0\n              } else {\n                if (keyData.o.x.constructor === Array) {\n                  if (!keyframeMetadata.__fnct) {\n                    keyframeMetadata.__fnct = []\n                  }\n                  if (!keyframeMetadata.__fnct[i]) {\n                    outX = keyData.o.x[i] === undefined ? keyData.o.x[0] : keyData.o.x[i]\n                    outY = keyData.o.y[i] === undefined ? keyData.o.y[0] : keyData.o.y[i]\n                    inX = keyData.i.x[i] === undefined ? keyData.i.x[0] : keyData.i.x[i]\n                    inY = keyData.i.y[i] === undefined ? keyData.i.y[0] : keyData.i.y[i]\n                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get\n                    keyframeMetadata.__fnct[i] = fnc\n                  } else {\n                    fnc = keyframeMetadata.__fnct[i]\n                  }\n                } else if (!keyframeMetadata.__fnct) {\n                  outX = keyData.o.x\n                  outY = keyData.o.y\n                  inX = keyData.i.x\n                  inY = keyData.i.y\n                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get\n                  keyData.keyframeMetadata = fnc\n                } else {\n                  fnc = keyframeMetadata.__fnct\n                }\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime))\n              }\n            }\n\n            endValue = nextKeyData.s || keyData.e\n            keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc\n\n            if (this.propType === 'multidimensional') {\n              newValue[i] = keyValue\n            } else {\n              newValue = keyValue\n            }\n          }\n        }\n      }\n      caching.lastIndex = iterationIndex\n      return newValue\n    }\n\n    // based on @Toji's https://github.com/toji/gl-matrix/\n    function slerp(a, b, t) {\n      var out = []\n      var ax = a[0]\n      var ay = a[1]\n      var az = a[2]\n      var aw = a[3]\n      var bx = b[0]\n      var by = b[1]\n      var bz = b[2]\n      var bw = b[3]\n\n      var omega\n      var cosom\n      var sinom\n      var scale0\n      var scale1\n\n      cosom = ax * bx + ay * by + az * bz + aw * bw\n      if (cosom < 0.0) {\n        cosom = -cosom\n        bx = -bx\n        by = -by\n        bz = -bz\n        bw = -bw\n      }\n      if (1.0 - cosom > 0.000001) {\n        omega = Math.acos(cosom)\n        sinom = Math.sin(omega)\n        scale0 = Math.sin((1.0 - t) * omega) / sinom\n        scale1 = Math.sin(t * omega) / sinom\n      } else {\n        scale0 = 1.0 - t\n        scale1 = t\n      }\n      out[0] = scale0 * ax + scale1 * bx\n      out[1] = scale0 * ay + scale1 * by\n      out[2] = scale0 * az + scale1 * bz\n      out[3] = scale0 * aw + scale1 * bw\n\n      return out\n    }\n\n    function quaternionToEuler(out, quat) {\n      var qx = quat[0]\n      var qy = quat[1]\n      var qz = quat[2]\n      var qw = quat[3]\n      var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz)\n      var attitude = Math.asin(2 * qx * qy + 2 * qz * qw)\n      var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz)\n      out[0] = heading / degToRads\n      out[1] = attitude / degToRads\n      out[2] = bank / degToRads\n    }\n\n    function createQuaternion(values) {\n      var heading = values[0] * degToRads\n      var attitude = values[1] * degToRads\n      var bank = values[2] * degToRads\n      var c1 = Math.cos(heading / 2)\n      var c2 = Math.cos(attitude / 2)\n      var c3 = Math.cos(bank / 2)\n      var s1 = Math.sin(heading / 2)\n      var s2 = Math.sin(attitude / 2)\n      var s3 = Math.sin(bank / 2)\n      var w = c1 * c2 * c3 - s1 * s2 * s3\n      var x = s1 * s2 * c3 + c1 * c2 * s3\n      var y = s1 * c2 * c3 + c1 * s2 * s3\n      var z = c1 * s2 * c3 - s1 * c2 * s3\n\n      return [x, y, z, w]\n    }\n\n    function getValueAtCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime\n      var initTime = this.keyframes[0].t - this.offsetTime\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime\n      if (\n        !(\n          frameNum === this._caching.lastFrame ||\n          (this._caching.lastFrame !== initFrame &&\n            ((this._caching.lastFrame >= endTime && frameNum >= endTime) ||\n              (this._caching.lastFrame < initTime && frameNum < initTime)))\n        )\n      ) {\n        if (this._caching.lastFrame >= frameNum) {\n          this._caching._lastKeyframeIndex = -1\n          this._caching.lastIndex = 0\n        }\n\n        var renderResult = this.interpolateValue(frameNum, this._caching)\n        this.pv = renderResult\n      }\n      this._caching.lastFrame = frameNum\n      return this.pv\n    }\n\n    function setVValue(val) {\n      var multipliedValue\n      if (this.propType === 'unidimensional') {\n        multipliedValue = val * this.mult\n        if (mathAbs(this.v - multipliedValue) > 0.00001) {\n          this.v = multipliedValue\n          this._mdf = true\n        }\n      } else {\n        var i = 0\n        var len = this.v.length\n        while (i < len) {\n          multipliedValue = val[i] * this.mult\n          if (mathAbs(this.v[i] - multipliedValue) > 0.00001) {\n            this.v[i] = multipliedValue\n            this._mdf = true\n          }\n          i += 1\n        }\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\n        return\n      }\n      if (this.lock) {\n        this.setVValue(this.pv)\n        return\n      }\n      this.lock = true\n      this._mdf = this._isFirstFrame\n      var i\n      var len = this.effectsSequence.length\n      var finalValue = this.kf ? this.pv : this.data.k\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue)\n      }\n      this.setVValue(finalValue)\n      this._isFirstFrame = false\n      this.lock = false\n      this.frameId = this.elem.globalData.frameId\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction)\n      this.container.addDynamicProperty(this)\n    }\n\n    function ValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional'\n      this.mult = mult || 1\n      this.data = data\n      this.v = mult ? data.k * mult : data.k\n      this.pv = data.k\n      this._mdf = false\n      this.elem = elem\n      this.container = container\n      this.comp = elem.comp\n      this.k = false\n      this.kf = false\n      this.vel = 0\n      this.effectsSequence = []\n      this._isFirstFrame = true\n      this.getValue = processEffectsSequence\n      this.setVValue = setVValue\n      this.addEffect = addEffect\n    }\n\n    function MultiDimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional'\n      this.mult = mult || 1\n      this.data = data\n      this._mdf = false\n      this.elem = elem\n      this.container = container\n      this.comp = elem.comp\n      this.k = false\n      this.kf = false\n      this.frameId = -1\n      var i\n      var len = data.k.length\n      this.v = createTypedArray('float32', len)\n      this.pv = createTypedArray('float32', len)\n      this.vel = createTypedArray('float32', len)\n      for (i = 0; i < len; i += 1) {\n        this.v[i] = data.k[i] * this.mult\n        this.pv[i] = data.k[i]\n      }\n      this._isFirstFrame = true\n      this.effectsSequence = []\n      this.getValue = processEffectsSequence\n      this.setVValue = setVValue\n      this.addEffect = addEffect\n    }\n\n    function KeyframedValueProperty(elem, data, mult, container) {\n      this.propType = 'unidimensional'\n      this.keyframes = data.k\n      this.keyframesMetadata = []\n      this.offsetTime = elem.data.st\n      this.frameId = -1\n      this._caching = {\n        lastFrame: initFrame,\n        lastIndex: 0,\n        value: 0,\n        _lastKeyframeIndex: -1,\n      }\n      this.k = true\n      this.kf = true\n      this.data = data\n      this.mult = mult || 1\n      this.elem = elem\n      this.container = container\n      this.comp = elem.comp\n      this.v = initFrame\n      this.pv = initFrame\n      this._isFirstFrame = true\n      this.getValue = processEffectsSequence\n      this.setVValue = setVValue\n      this.interpolateValue = interpolateValue\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)]\n      this.addEffect = addEffect\n    }\n\n    function KeyframedMultidimensionalProperty(elem, data, mult, container) {\n      this.propType = 'multidimensional'\n      var i\n      var len = data.k.length\n      var s\n      var e\n      var to\n      var ti\n      for (i = 0; i < len - 1; i += 1) {\n        if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {\n          s = data.k[i].s\n          e = data.k[i + 1].s\n          to = data.k[i].to\n          ti = data.k[i].ti\n          if (\n            (s.length === 2 &&\n              !(s[0] === e[0] && s[1] === e[1]) &&\n              bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) &&\n              bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1])) ||\n            (s.length === 3 &&\n              !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) &&\n              bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) &&\n              bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2]))\n          ) {\n            data.k[i].to = null\n            data.k[i].ti = null\n          }\n          if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\n            if (s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\n              data.k[i].to = null\n              data.k[i].ti = null\n            }\n          }\n        }\n      }\n      this.effectsSequence = [getValueAtCurrentTime.bind(this)]\n      this.data = data\n      this.keyframes = data.k\n      this.keyframesMetadata = []\n      this.offsetTime = elem.data.st\n      this.k = true\n      this.kf = true\n      this._isFirstFrame = true\n      this.mult = mult || 1\n      this.elem = elem\n      this.container = container\n      this.comp = elem.comp\n      this.getValue = processEffectsSequence\n      this.setVValue = setVValue\n      this.interpolateValue = interpolateValue\n      this.frameId = -1\n      var arrLen = data.k[0].s.length\n      this.v = createTypedArray('float32', arrLen)\n      this.pv = createTypedArray('float32', arrLen)\n      for (i = 0; i < arrLen; i += 1) {\n        this.v[i] = initFrame\n        this.pv[i] = initFrame\n      }\n      this._caching = { lastFrame: initFrame, lastIndex: 0, value: createTypedArray('float32', arrLen) }\n      this.addEffect = addEffect\n    }\n\n    function getProp(elem, data, type, mult, container) {\n      var p\n      if (!data.k.length) {\n        p = new ValueProperty(elem, data, mult, container)\n      } else if (typeof data.k[0] === 'number') {\n        p = new MultiDimensionalProperty(elem, data, mult, container)\n      } else {\n        switch (type) {\n          case 0:\n            p = new KeyframedValueProperty(elem, data, mult, container)\n            break\n          case 1:\n            p = new KeyframedMultidimensionalProperty(elem, data, mult, container)\n            break\n          default:\n            break\n        }\n      }\n      if (p.effectsSequence.length) {\n        container.addDynamicProperty(p)\n      }\n      return p\n    }\n\n    var ob = {\n      getProp: getProp,\n    }\n    return ob\n  })()\n\n  function DynamicPropertyContainer() {}\n  DynamicPropertyContainer.prototype = {\n    addDynamicProperty: function (prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop)\n        this.container.addDynamicProperty(this)\n        this._isAnimated = true\n      }\n    },\n    iterateDynamicProperties: function () {\n      this._mdf = false\n      var i\n      var len = this.dynamicProperties.length\n      for (i = 0; i < len; i += 1) {\n        this.dynamicProperties[i].getValue()\n        if (this.dynamicProperties[i]._mdf) {\n          this._mdf = true\n        }\n      }\n    },\n    initDynamicPropertyContainer: function (container) {\n      this.container = container\n      this.dynamicProperties = []\n      this._mdf = false\n      this._isAnimated = false\n    },\n  }\n\n  const pointPool = (function () {\n    function create() {\n      return createTypedArray('float32', 2)\n    }\n    return poolFactory(8, create)\n  })()\n\n  function ShapePath() {\n    this.c = false\n    this._length = 0\n    this._maxLength = 8\n    this.v = createSizedArray(this._maxLength)\n    this.o = createSizedArray(this._maxLength)\n    this.i = createSizedArray(this._maxLength)\n  }\n\n  ShapePath.prototype.setPathData = function (closed, len) {\n    this.c = closed\n    this.setLength(len)\n    var i = 0\n    while (i < len) {\n      this.v[i] = pointPool.newElement()\n      this.o[i] = pointPool.newElement()\n      this.i[i] = pointPool.newElement()\n      i += 1\n    }\n  }\n\n  ShapePath.prototype.setLength = function (len) {\n    while (this._maxLength < len) {\n      this.doubleArrayLength()\n    }\n    this._length = len\n  }\n\n  ShapePath.prototype.doubleArrayLength = function () {\n    this.v = this.v.concat(createSizedArray(this._maxLength))\n    this.i = this.i.concat(createSizedArray(this._maxLength))\n    this.o = this.o.concat(createSizedArray(this._maxLength))\n    this._maxLength *= 2\n  }\n\n  ShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\n    var arr\n    this._length = Math.max(this._length, pos + 1)\n    if (this._length >= this._maxLength) {\n      this.doubleArrayLength()\n    }\n    switch (type) {\n      case 'v':\n        arr = this.v\n        break\n      case 'i':\n        arr = this.i\n        break\n      case 'o':\n        arr = this.o\n        break\n      default:\n        arr = []\n        break\n    }\n    if (!arr[pos] || (arr[pos] && !replace)) {\n      arr[pos] = pointPool.newElement()\n    }\n    arr[pos][0] = x\n    arr[pos][1] = y\n  }\n\n  ShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\n    this.setXYAt(vX, vY, 'v', pos, replace)\n    this.setXYAt(oX, oY, 'o', pos, replace)\n    this.setXYAt(iX, iY, 'i', pos, replace)\n  }\n\n  ShapePath.prototype.reverse = function () {\n    var newPath = new ShapePath()\n    newPath.setPathData(this.c, this._length)\n    var vertices = this.v\n    var outPoints = this.o\n    var inPoints = this.i\n    var init = 0\n    if (this.c) {\n      newPath.setTripleAt(\n        vertices[0][0],\n        vertices[0][1],\n        inPoints[0][0],\n        inPoints[0][1],\n        outPoints[0][0],\n        outPoints[0][1],\n        0,\n        false,\n      )\n      init = 1\n    }\n    var cnt = this._length - 1\n    var len = this._length\n\n    var i\n    for (i = init; i < len; i += 1) {\n      newPath.setTripleAt(\n        vertices[cnt][0],\n        vertices[cnt][1],\n        inPoints[cnt][0],\n        inPoints[cnt][1],\n        outPoints[cnt][0],\n        outPoints[cnt][1],\n        i,\n        false,\n      )\n      cnt -= 1\n    }\n    return newPath\n  }\n\n  const shapePool = (function () {\n    function create() {\n      return new ShapePath()\n    }\n\n    function release(shapePath) {\n      var len = shapePath._length\n      var i\n      for (i = 0; i < len; i += 1) {\n        pointPool.release(shapePath.v[i])\n        pointPool.release(shapePath.i[i])\n        pointPool.release(shapePath.o[i])\n        shapePath.v[i] = null\n        shapePath.i[i] = null\n        shapePath.o[i] = null\n      }\n      shapePath._length = 0\n      shapePath.c = false\n    }\n\n    function clone(shape) {\n      var cloned = factory.newElement()\n      var i\n      var len = shape._length === undefined ? shape.v.length : shape._length\n      cloned.setLength(len)\n      cloned.c = shape.c\n\n      for (i = 0; i < len; i += 1) {\n        cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i)\n      }\n      return cloned\n    }\n\n    var factory = poolFactory(4, create, release)\n    factory.clone = clone\n\n    return factory\n  })()\n\n  function ShapeCollection() {\n    this._length = 0\n    this._maxLength = 4\n    this.shapes = createSizedArray(this._maxLength)\n  }\n\n  ShapeCollection.prototype.addShape = function (shapeData) {\n    if (this._length === this._maxLength) {\n      this.shapes = this.shapes.concat(createSizedArray(this._maxLength))\n      this._maxLength *= 2\n    }\n    this.shapes[this._length] = shapeData\n    this._length += 1\n  }\n\n  ShapeCollection.prototype.releaseShapes = function () {\n    var i\n    for (i = 0; i < this._length; i += 1) {\n      shapePool.release(this.shapes[i])\n    }\n    this._length = 0\n  }\n\n  const shapeCollectionPool = (function () {\n    var ob = {\n      newShapeCollection: newShapeCollection,\n      release: release,\n    }\n\n    var _length = 0\n    var _maxLength = 4\n    var pool = createSizedArray(_maxLength)\n\n    function newShapeCollection() {\n      var shapeCollection\n      if (_length) {\n        _length -= 1\n        shapeCollection = pool[_length]\n      } else {\n        shapeCollection = new ShapeCollection()\n      }\n      return shapeCollection\n    }\n\n    function release(shapeCollection) {\n      var i\n      var len = shapeCollection._length\n      for (i = 0; i < len; i += 1) {\n        shapePool.release(shapeCollection.shapes[i])\n      }\n      shapeCollection._length = 0\n\n      if (_length === _maxLength) {\n        pool = pooling.double(pool)\n        _maxLength *= 2\n      }\n      pool[_length] = shapeCollection\n      _length += 1\n    }\n\n    return ob\n  })()\n\n  const ShapePropertyFactory = (function () {\n    var initFrame = -999999\n\n    function interpolateShape(frameNum, previousValue, caching) {\n      var iterationIndex = caching.lastIndex\n      var keyPropS\n      var keyPropE\n      var isHold\n      var j\n      var k\n      var jLen\n      var kLen\n      var perc\n      var vertexValue\n      var kf = this.keyframes\n      if (frameNum < kf[0].t - this.offsetTime) {\n        keyPropS = kf[0].s[0]\n        isHold = true\n        iterationIndex = 0\n      } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {\n        keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0]\n        /* if(kf[kf.length - 1].s){\n                keyPropS = kf[kf.length - 1].s[0];\n            }else{\n                keyPropS = kf[kf.length - 2].e[0];\n            } */\n        isHold = true\n      } else {\n        var i = iterationIndex\n        var len = kf.length - 1\n        var flag = true\n        var keyData\n        var nextKeyData\n        var keyframeMetadata\n        while (flag) {\n          keyData = kf[i]\n          nextKeyData = kf[i + 1]\n          if (nextKeyData.t - this.offsetTime > frameNum) {\n            break\n          }\n          if (i < len - 1) {\n            i += 1\n          } else {\n            flag = false\n          }\n        }\n        keyframeMetadata = this.keyframesMetadata[i] || {}\n        isHold = keyData.h === 1\n        iterationIndex = i\n        if (!isHold) {\n          if (frameNum >= nextKeyData.t - this.offsetTime) {\n            perc = 1\n          } else if (frameNum < keyData.t - this.offsetTime) {\n            perc = 0\n          } else {\n            var fnc\n            if (keyframeMetadata.__fnct) {\n              fnc = keyframeMetadata.__fnct\n            } else {\n              fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get\n              keyframeMetadata.__fnct = fnc\n            }\n            perc = fnc(\n              (frameNum - (keyData.t - this.offsetTime)) /\n                (nextKeyData.t - this.offsetTime - (keyData.t - this.offsetTime)),\n            )\n          }\n          keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0]\n        }\n        keyPropS = keyData.s[0]\n      }\n      jLen = previousValue._length\n      kLen = keyPropS.i[0].length\n      caching.lastIndex = iterationIndex\n\n      for (j = 0; j < jLen; j += 1) {\n        for (k = 0; k < kLen; k += 1) {\n          vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc\n          previousValue.i[j][k] = vertexValue\n          vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc\n          previousValue.o[j][k] = vertexValue\n          vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc\n          previousValue.v[j][k] = vertexValue\n        }\n      }\n    }\n\n    function interpolateShapeCurrentTime() {\n      var frameNum = this.comp.renderedFrame - this.offsetTime\n      var initTime = this.keyframes[0].t - this.offsetTime\n      var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime\n      var lastFrame = this._caching.lastFrame\n      if (\n        !(\n          lastFrame !== initFrame &&\n          ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime))\n        )\n      ) {\n        /// /\n        this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0\n        this.interpolateShape(frameNum, this.pv, this._caching)\n        /// /\n      }\n      this._caching.lastFrame = frameNum\n      return this.pv\n    }\n\n    function resetShape() {\n      this.paths = this.localShapeCollection\n    }\n\n    function shapesEqual(shape1, shape2) {\n      if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\n        return false\n      }\n      var i\n      var len = shape1._length\n      for (i = 0; i < len; i += 1) {\n        if (\n          shape1.v[i][0] !== shape2.v[i][0] ||\n          shape1.v[i][1] !== shape2.v[i][1] ||\n          shape1.o[i][0] !== shape2.o[i][0] ||\n          shape1.o[i][1] !== shape2.o[i][1] ||\n          shape1.i[i][0] !== shape2.i[i][0] ||\n          shape1.i[i][1] !== shape2.i[i][1]\n        ) {\n          return false\n        }\n      }\n      return true\n    }\n\n    function setVValue(newPath) {\n      if (!shapesEqual(this.v, newPath)) {\n        this.v = shapePool.clone(newPath)\n        this.localShapeCollection.releaseShapes()\n        this.localShapeCollection.addShape(this.v)\n        this._mdf = true\n        this.paths = this.localShapeCollection\n      }\n    }\n\n    function processEffectsSequence() {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return\n      }\n      if (!this.effectsSequence.length) {\n        this._mdf = false\n        return\n      }\n      if (this.lock) {\n        this.setVValue(this.pv)\n        return\n      }\n      this.lock = true\n      this._mdf = false\n      var finalValue\n      if (this.kf) {\n        finalValue = this.pv\n      } else if (this.data.ks) {\n        finalValue = this.data.ks.k\n      } else {\n        finalValue = this.data.pt.k\n      }\n      var i\n      var len = this.effectsSequence.length\n      for (i = 0; i < len; i += 1) {\n        finalValue = this.effectsSequence[i](finalValue)\n      }\n      this.setVValue(finalValue)\n      this.lock = false\n      this.frameId = this.elem.globalData.frameId\n    }\n\n    function ShapeProperty(elem, data, type) {\n      this.propType = 'shape'\n      this.comp = elem.comp\n      this.container = elem\n      this.elem = elem\n      this.data = data\n      this.k = false\n      this.kf = false\n      this._mdf = false\n      var pathData = type === 3 ? data.pt.k : data.ks.k\n      this.v = shapePool.clone(pathData)\n      this.pv = shapePool.clone(this.v)\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n      this.paths = this.localShapeCollection\n      this.paths.addShape(this.v)\n      this.reset = resetShape\n      this.effectsSequence = []\n    }\n\n    function addEffect(effectFunction) {\n      this.effectsSequence.push(effectFunction)\n      this.container.addDynamicProperty(this)\n    }\n\n    ShapeProperty.prototype.interpolateShape = interpolateShape\n    ShapeProperty.prototype.getValue = processEffectsSequence\n    ShapeProperty.prototype.setVValue = setVValue\n    ShapeProperty.prototype.addEffect = addEffect\n\n    function KeyframedShapeProperty(elem, data, type) {\n      this.propType = 'shape'\n      this.comp = elem.comp\n      this.elem = elem\n      this.container = elem\n      this.offsetTime = elem.data.st\n      this.keyframes = type === 3 ? data.pt.k : data.ks.k\n      this.keyframesMetadata = []\n      this.k = true\n      this.kf = true\n      var len = this.keyframes[0].s[0].i.length\n      this.v = shapePool.newElement()\n      this.v.setPathData(this.keyframes[0].s[0].c, len)\n      this.pv = shapePool.clone(this.v)\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n      this.paths = this.localShapeCollection\n      this.paths.addShape(this.v)\n      this.lastFrame = initFrame\n      this.reset = resetShape\n      this._caching = { lastFrame: initFrame, lastIndex: 0 }\n      this.effectsSequence = [interpolateShapeCurrentTime.bind(this)]\n    }\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape\n    KeyframedShapeProperty.prototype.setVValue = setVValue\n    KeyframedShapeProperty.prototype.addEffect = addEffect\n\n    var EllShapeProperty = (function () {\n      var cPoint = roundCorner\n\n      function EllShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement()\n        this.v.setPathData(true, 4)\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n        this.paths = this.localShapeCollection\n        this.localShapeCollection.addShape(this.v)\n        this.d = data.d\n        this.elem = elem\n        this.comp = elem.comp\n        this.frameId = -1\n        this.initDynamicPropertyContainer(elem)\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this)\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this)\n        if (this.dynamicProperties.length) {\n          this.k = true\n        } else {\n          this.k = false\n          this.convertEllToPath()\n        }\n      }\n\n      EllShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return\n          }\n          this.frameId = this.elem.globalData.frameId\n          this.iterateDynamicProperties()\n\n          if (this._mdf) {\n            this.convertEllToPath()\n          }\n        },\n        convertEllToPath: function () {\n          var p0 = this.p.v[0]\n          var p1 = this.p.v[1]\n          var s0 = this.s.v[0] / 2\n          var s1 = this.s.v[1] / 2\n          var _cw = this.d !== 3\n          var _v = this.v\n          _v.v[0][0] = p0\n          _v.v[0][1] = p1 - s1\n          _v.v[1][0] = _cw ? p0 + s0 : p0 - s0\n          _v.v[1][1] = p1\n          _v.v[2][0] = p0\n          _v.v[2][1] = p1 + s1\n          _v.v[3][0] = _cw ? p0 - s0 : p0 + s0\n          _v.v[3][1] = p1\n          _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint\n          _v.i[0][1] = p1 - s1\n          _v.i[1][0] = _cw ? p0 + s0 : p0 - s0\n          _v.i[1][1] = p1 - s1 * cPoint\n          _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint\n          _v.i[2][1] = p1 + s1\n          _v.i[3][0] = _cw ? p0 - s0 : p0 + s0\n          _v.i[3][1] = p1 + s1 * cPoint\n          _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint\n          _v.o[0][1] = p1 - s1\n          _v.o[1][0] = _cw ? p0 + s0 : p0 - s0\n          _v.o[1][1] = p1 + s1 * cPoint\n          _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint\n          _v.o[2][1] = p1 + s1\n          _v.o[3][0] = _cw ? p0 - s0 : p0 + s0\n          _v.o[3][1] = p1 - s1 * cPoint\n        },\n      }\n\n      extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory)\n\n      return EllShapePropertyFactory\n    })()\n\n    var StarShapeProperty = (function () {\n      function StarShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement()\n        this.v.setPathData(true, 0)\n        this.elem = elem\n        this.comp = elem.comp\n        this.data = data\n        this.frameId = -1\n        this.d = data.d\n        this.initDynamicPropertyContainer(elem)\n        if (data.sy === 1) {\n          this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this)\n          this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this)\n          this.convertToPath = this.convertStarToPath\n        } else {\n          this.convertToPath = this.convertPolygonToPath\n        }\n        this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this)\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this)\n        this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this)\n        this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this)\n        this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this)\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n        this.localShapeCollection.addShape(this.v)\n        this.paths = this.localShapeCollection\n        if (this.dynamicProperties.length) {\n          this.k = true\n        } else {\n          this.k = false\n          this.convertToPath()\n        }\n      }\n\n      StarShapePropertyFactory.prototype = {\n        reset: resetShape,\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return\n          }\n          this.frameId = this.elem.globalData.frameId\n          this.iterateDynamicProperties()\n          if (this._mdf) {\n            this.convertToPath()\n          }\n        },\n        convertStarToPath: function () {\n          var numPts = Math.floor(this.pt.v) * 2\n          var angle = (Math.PI * 2) / numPts\n          /* this.v.v.length = numPts;\n                this.v.i.length = numPts;\n                this.v.o.length = numPts; */\n          var longFlag = true\n          var longRad = this.or.v\n          var shortRad = this.ir.v\n          var longRound = this.os.v\n          var shortRound = this.is.v\n          var longPerimSegment = (2 * Math.PI * longRad) / (numPts * 2)\n          var shortPerimSegment = (2 * Math.PI * shortRad) / (numPts * 2)\n          var i\n          var rad\n          var roundness\n          var perimSegment\n          var currentAng = -Math.PI / 2\n          currentAng += this.r.v\n          var dir = this.data.d === 3 ? -1 : 1\n          this.v._length = 0\n          for (i = 0; i < numPts; i += 1) {\n            rad = longFlag ? longRad : shortRad\n            roundness = longFlag ? longRound : shortRound\n            perimSegment = longFlag ? longPerimSegment : shortPerimSegment\n            var x = rad * Math.cos(currentAng)\n            var y = rad * Math.sin(currentAng)\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y)\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y)\n            x += +this.p.v[0]\n            y += +this.p.v[1]\n            this.v.setTripleAt(\n              x,\n              y,\n              x - ox * perimSegment * roundness * dir,\n              y - oy * perimSegment * roundness * dir,\n              x + ox * perimSegment * roundness * dir,\n              y + oy * perimSegment * roundness * dir,\n              i,\n              true,\n            )\n\n            /* this.v.v[i] = [x,y];\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\n                    this.v._length = numPts; */\n            longFlag = !longFlag\n            currentAng += angle * dir\n          }\n        },\n        convertPolygonToPath: function () {\n          var numPts = Math.floor(this.pt.v)\n          var angle = (Math.PI * 2) / numPts\n          var rad = this.or.v\n          var roundness = this.os.v\n          var perimSegment = (2 * Math.PI * rad) / (numPts * 4)\n          var i\n          var currentAng = -Math.PI * 0.5\n          var dir = this.data.d === 3 ? -1 : 1\n          currentAng += this.r.v\n          this.v._length = 0\n          for (i = 0; i < numPts; i += 1) {\n            var x = rad * Math.cos(currentAng)\n            var y = rad * Math.sin(currentAng)\n            var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y)\n            var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y)\n            x += +this.p.v[0]\n            y += +this.p.v[1]\n            this.v.setTripleAt(\n              x,\n              y,\n              x - ox * perimSegment * roundness * dir,\n              y - oy * perimSegment * roundness * dir,\n              x + ox * perimSegment * roundness * dir,\n              y + oy * perimSegment * roundness * dir,\n              i,\n              true,\n            )\n            currentAng += angle * dir\n          }\n          this.paths.length = 0\n          this.paths[0] = this.v\n        },\n      }\n      extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory)\n\n      return StarShapePropertyFactory\n    })()\n\n    var RectShapeProperty = (function () {\n      function RectShapePropertyFactory(elem, data) {\n        this.v = shapePool.newElement()\n        this.v.c = true\n        this.localShapeCollection = shapeCollectionPool.newShapeCollection()\n        this.localShapeCollection.addShape(this.v)\n        this.paths = this.localShapeCollection\n        this.elem = elem\n        this.comp = elem.comp\n        this.frameId = -1\n        this.d = data.d\n        this.initDynamicPropertyContainer(elem)\n        this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this)\n        this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this)\n        this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this)\n        if (this.dynamicProperties.length) {\n          this.k = true\n        } else {\n          this.k = false\n          this.convertRectToPath()\n        }\n      }\n\n      RectShapePropertyFactory.prototype = {\n        convertRectToPath: function () {\n          var p0 = this.p.v[0]\n          var p1 = this.p.v[1]\n          var v0 = this.s.v[0] / 2\n          var v1 = this.s.v[1] / 2\n          var round = bmMin(v0, v1, this.r.v)\n          var cPoint = round * (1 - roundCorner)\n          this.v._length = 0\n\n          if (this.d === 2 || this.d === 1) {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true)\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true)\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true)\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true)\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true)\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true)\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true)\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true)\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2)\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3)\n            }\n          } else {\n            this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true)\n            if (round !== 0) {\n              this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true)\n              this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true)\n              this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true)\n              this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true)\n              this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true)\n              this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true)\n              this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true)\n            } else {\n              this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true)\n              this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true)\n              this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true)\n            }\n          }\n        },\n        getValue: function () {\n          if (this.elem.globalData.frameId === this.frameId) {\n            return\n          }\n          this.frameId = this.elem.globalData.frameId\n          this.iterateDynamicProperties()\n          if (this._mdf) {\n            this.convertRectToPath()\n          }\n        },\n        reset: resetShape,\n      }\n      extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory)\n\n      return RectShapePropertyFactory\n    })()\n\n    function getShapeProp(elem, data, type) {\n      var prop\n      if (type === 3 || type === 4) {\n        var dataProp = type === 3 ? data.pt : data.ks\n        var keys = dataProp.k\n        if (keys.length) {\n          prop = new KeyframedShapeProperty(elem, data, type)\n        } else {\n          prop = new ShapeProperty(elem, data, type)\n        }\n      } else if (type === 5) {\n        prop = new RectShapeProperty(elem, data)\n      } else if (type === 6) {\n        prop = new EllShapeProperty(elem, data)\n      } else if (type === 7) {\n        prop = new StarShapeProperty(elem, data)\n      }\n      if (prop.k) {\n        elem.addDynamicProperty(prop)\n      }\n      return prop\n    }\n\n    function getConstructorFunction() {\n      return ShapeProperty\n    }\n\n    function getKeyframedConstructorFunction() {\n      return KeyframedShapeProperty\n    }\n\n    var ob = {}\n    ob.getShapeProp = getShapeProp\n    ob.getConstructorFunction = getConstructorFunction\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction\n    return ob\n  })()\n\n  /*!\n Transformation Matrix v2.0\n (c) Epistemex 2014-2015\n www.epistemex.com\n By Ken Fyrstenberg\n Contributions by leeoniya.\n License: MIT, header required.\n */\n\n  /**\n   * 2D transformation matrix object initialized with identity matrix.\n   *\n   * The matrix can synchronize a canvas context by supplying the context\n   * as an argument, or later apply current absolute transform to an\n   * existing context.\n   *\n   * All values are handled as floating point values.\n   *\n   * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\n   * @prop {number} a - scale x\n   * @prop {number} b - shear y\n   * @prop {number} c - shear x\n   * @prop {number} d - scale y\n   * @prop {number} e - translate x\n   * @prop {number} f - translate y\n   * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\n   * @constructor\n   */\n\n  const Matrix = (function () {\n    var _cos = Math.cos\n    var _sin = Math.sin\n    var _tan = Math.tan\n    var _rnd = Math.round\n\n    function reset() {\n      this.props[0] = 1\n      this.props[1] = 0\n      this.props[2] = 0\n      this.props[3] = 0\n      this.props[4] = 0\n      this.props[5] = 1\n      this.props[6] = 0\n      this.props[7] = 0\n      this.props[8] = 0\n      this.props[9] = 0\n      this.props[10] = 1\n      this.props[11] = 0\n      this.props[12] = 0\n      this.props[13] = 0\n      this.props[14] = 0\n      this.props[15] = 1\n      return this\n    }\n\n    function rotate(angle) {\n      if (angle === 0) {\n        return this\n      }\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n    }\n\n    function rotateX(angle) {\n      if (angle === 0) {\n        return this\n      }\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1)\n    }\n\n    function rotateY(angle) {\n      if (angle === 0) {\n        return this\n      }\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1)\n    }\n\n    function rotateZ(angle) {\n      if (angle === 0) {\n        return this\n      }\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n    }\n\n    function shear(sx, sy) {\n      return this._t(1, sy, sx, 1, 0, 0)\n    }\n\n    function skew(ax, ay) {\n      return this.shear(_tan(ax), _tan(ay))\n    }\n\n    function skewFromAxis(ax, angle) {\n      var mCos = _cos(angle)\n      var mSin = _sin(angle)\n      return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n        ._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n        ._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\n      // return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\n    }\n\n    function scale(sx, sy, sz) {\n      if (!sz && sz !== 0) {\n        sz = 1\n      }\n      if (sx === 1 && sy === 1 && sz === 1) {\n        return this\n      }\n      return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1)\n    }\n\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\n      this.props[0] = a\n      this.props[1] = b\n      this.props[2] = c\n      this.props[3] = d\n      this.props[4] = e\n      this.props[5] = f\n      this.props[6] = g\n      this.props[7] = h\n      this.props[8] = i\n      this.props[9] = j\n      this.props[10] = k\n      this.props[11] = l\n      this.props[12] = m\n      this.props[13] = n\n      this.props[14] = o\n      this.props[15] = p\n      return this\n    }\n\n    function translate(tx, ty, tz) {\n      tz = tz || 0\n      if (tx !== 0 || ty !== 0 || tz !== 0) {\n        return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1)\n      }\n      return this\n    }\n\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\n      var _p = this.props\n\n      if (\n        a2 === 1 &&\n        b2 === 0 &&\n        c2 === 0 &&\n        d2 === 0 &&\n        e2 === 0 &&\n        f2 === 1 &&\n        g2 === 0 &&\n        h2 === 0 &&\n        i2 === 0 &&\n        j2 === 0 &&\n        k2 === 1 &&\n        l2 === 0\n      ) {\n        // NOTE: commenting this condition because TurboFan deoptimizes code when present\n        // if(m2 !== 0 || n2 !== 0 || o2 !== 0){\n        _p[12] = _p[12] * a2 + _p[15] * m2\n        _p[13] = _p[13] * f2 + _p[15] * n2\n        _p[14] = _p[14] * k2 + _p[15] * o2\n        _p[15] *= p2\n        // }\n        this._identityCalculated = false\n        return this\n      }\n\n      var a1 = _p[0]\n      var b1 = _p[1]\n      var c1 = _p[2]\n      var d1 = _p[3]\n      var e1 = _p[4]\n      var f1 = _p[5]\n      var g1 = _p[6]\n      var h1 = _p[7]\n      var i1 = _p[8]\n      var j1 = _p[9]\n      var k1 = _p[10]\n      var l1 = _p[11]\n      var m1 = _p[12]\n      var n1 = _p[13]\n      var o1 = _p[14]\n      var p1 = _p[15]\n\n      /* matrix order (canvas compatible):\n       * ace\n       * bdf\n       * 001\n       */\n      _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2\n      _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2\n      _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2\n      _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2\n\n      _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2\n      _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2\n      _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2\n      _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2\n\n      _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2\n      _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2\n      _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2\n      _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2\n\n      _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2\n      _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2\n      _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2\n      _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2\n\n      this._identityCalculated = false\n      return this\n    }\n\n    function isIdentity() {\n      if (!this._identityCalculated) {\n        this._identity = !(\n          this.props[0] !== 1 ||\n          this.props[1] !== 0 ||\n          this.props[2] !== 0 ||\n          this.props[3] !== 0 ||\n          this.props[4] !== 0 ||\n          this.props[5] !== 1 ||\n          this.props[6] !== 0 ||\n          this.props[7] !== 0 ||\n          this.props[8] !== 0 ||\n          this.props[9] !== 0 ||\n          this.props[10] !== 1 ||\n          this.props[11] !== 0 ||\n          this.props[12] !== 0 ||\n          this.props[13] !== 0 ||\n          this.props[14] !== 0 ||\n          this.props[15] !== 1\n        )\n        this._identityCalculated = true\n      }\n      return this._identity\n    }\n\n    function equals(matr) {\n      var i = 0\n      while (i < 16) {\n        if (matr.props[i] !== this.props[i]) {\n          return false\n        }\n        i += 1\n      }\n      return true\n    }\n\n    function clone(matr) {\n      var i\n      for (i = 0; i < 16; i += 1) {\n        matr.props[i] = this.props[i]\n      }\n      return matr\n    }\n\n    function cloneFromProps(props) {\n      var i\n      for (i = 0; i < 16; i += 1) {\n        this.props[i] = props[i]\n      }\n    }\n\n    function applyToPoint(x, y, z) {\n      return {\n        x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n        y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n        z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14],\n      }\n      /* return {\n         x: x * me.a + y * me.c + me.e,\n         y: x * me.b + y * me.d + me.f\n         }; */\n    }\n    function applyToX(x, y, z) {\n      return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12]\n    }\n    function applyToY(x, y, z) {\n      return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13]\n    }\n    function applyToZ(x, y, z) {\n      return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\n    }\n\n    function getInverseMatrix() {\n      var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4]\n      var a = this.props[5] / determinant\n      var b = -this.props[1] / determinant\n      var c = -this.props[4] / determinant\n      var d = this.props[0] / determinant\n      var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant\n      var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant\n      var inverseMatrix = new Matrix()\n      inverseMatrix.props[0] = a\n      inverseMatrix.props[1] = b\n      inverseMatrix.props[4] = c\n      inverseMatrix.props[5] = d\n      inverseMatrix.props[12] = e\n      inverseMatrix.props[13] = f\n      return inverseMatrix\n    }\n\n    function inversePoint(pt) {\n      var inverseMatrix = this.getInverseMatrix()\n      return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0)\n    }\n\n    function inversePoints(pts) {\n      var i\n      var len = pts.length\n      var retPts = []\n      for (i = 0; i < len; i += 1) {\n        retPts[i] = inversePoint(pts[i])\n      }\n      return retPts\n    }\n\n    function applyToTriplePoints(pt1, pt2, pt3) {\n      var arr = createTypedArray('float32', 6)\n      if (this.isIdentity()) {\n        arr[0] = pt1[0]\n        arr[1] = pt1[1]\n        arr[2] = pt2[0]\n        arr[3] = pt2[1]\n        arr[4] = pt3[0]\n        arr[5] = pt3[1]\n      } else {\n        var p0 = this.props[0]\n        var p1 = this.props[1]\n        var p4 = this.props[4]\n        var p5 = this.props[5]\n        var p12 = this.props[12]\n        var p13 = this.props[13]\n        arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12\n        arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13\n        arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12\n        arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13\n        arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12\n        arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13\n      }\n      return arr\n    }\n\n    function applyToPointArray(x, y, z) {\n      var arr\n      if (this.isIdentity()) {\n        arr = [x, y, z]\n      } else {\n        arr = [\n          x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\n          x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\n          x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14],\n        ]\n      }\n      return arr\n    }\n\n    function applyToPointStringified(x, y) {\n      if (this.isIdentity()) {\n        return x + ',' + y\n      }\n      var _p = this.props\n      return (\n        Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 +\n        ',' +\n        Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100\n      )\n    }\n\n    function toCSS() {\n      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n      /* if(this.isIdentity()) {\n            return '';\n        } */\n      var i = 0\n      var props = this.props\n      var cssValue = 'matrix3d('\n      var v = 10000\n      while (i < 16) {\n        cssValue += _rnd(props[i] * v) / v\n        cssValue += i === 15 ? ')' : ','\n        i += 1\n      }\n      return cssValue\n    }\n\n    function roundMatrixProperty(val) {\n      var v = 10000\n      if ((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\n        return _rnd(val * v) / v\n      }\n      return val\n    }\n\n    function to2dCSS() {\n      // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\n      /* if(this.isIdentity()) {\n            return '';\n        } */\n      var props = this.props\n      var _a = roundMatrixProperty(props[0])\n      var _b = roundMatrixProperty(props[1])\n      var _c = roundMatrixProperty(props[4])\n      var _d = roundMatrixProperty(props[5])\n      var _e = roundMatrixProperty(props[12])\n      var _f = roundMatrixProperty(props[13])\n      return 'matrix(' + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + ')'\n    }\n\n    return function () {\n      this.reset = reset\n      this.rotate = rotate\n      this.rotateX = rotateX\n      this.rotateY = rotateY\n      this.rotateZ = rotateZ\n      this.skew = skew\n      this.skewFromAxis = skewFromAxis\n      this.shear = shear\n      this.scale = scale\n      this.setTransform = setTransform\n      this.translate = translate\n      this.transform = transform\n      this.applyToPoint = applyToPoint\n      this.applyToX = applyToX\n      this.applyToY = applyToY\n      this.applyToZ = applyToZ\n      this.applyToPointArray = applyToPointArray\n      this.applyToTriplePoints = applyToTriplePoints\n      this.applyToPointStringified = applyToPointStringified\n      this.toCSS = toCSS\n      this.to2dCSS = to2dCSS\n      this.clone = clone\n      this.cloneFromProps = cloneFromProps\n      this.equals = equals\n      this.inversePoints = inversePoints\n      this.inversePoint = inversePoint\n      this.getInverseMatrix = getInverseMatrix\n      this._t = this.transform\n      this.isIdentity = isIdentity\n      this._identity = true\n      this._identityCalculated = false\n\n      this.props = createTypedArray('float32', 16)\n      this.reset()\n    }\n  })()\n\n  const lottie = {}\n  var standalone = '__[STANDALONE]__'\n  var animationData = '__[ANIMATIONDATA]__'\n  var renderer = ''\n\n  function setLocation(href) {\n    setLocationHref(href)\n  }\n\n  function searchAnimations() {\n    if (standalone === true) {\n      animationManager.searchAnimations(animationData, standalone, renderer)\n    } else {\n      animationManager.searchAnimations()\n    }\n  }\n\n  function setSubframeRendering(flag) {\n    setSubframeEnabled(flag)\n  }\n\n  function setPrefix(prefix) {\n    setIdPrefix(prefix)\n  }\n\n  function loadAnimation(params) {\n    if (standalone === true) {\n      params.animationData = JSON.parse(animationData)\n    }\n    return animationManager.loadAnimation(params)\n  }\n\n  function setQuality(value) {\n    if (typeof value === 'string') {\n      switch (value) {\n        case 'high':\n          setDefaultCurveSegments(200)\n          break\n        default:\n        case 'medium':\n          setDefaultCurveSegments(50)\n          break\n        case 'low':\n          setDefaultCurveSegments(10)\n          break\n      }\n    } else if (!isNaN(value) && value > 1) {\n      setDefaultCurveSegments(value)\n    }\n    if (getDefaultCurveSegments() >= 50) {\n      roundValues(false)\n    } else {\n      roundValues(true)\n    }\n  }\n\n  function inBrowser() {\n    return typeof navigator !== 'undefined'\n  }\n\n  function installPlugin(type, plugin) {\n    if (type === 'expressions') {\n      setExpressionsPlugin(plugin)\n    }\n  }\n\n  function getFactory(name) {\n    switch (name) {\n      case 'propertyFactory':\n        return PropertyFactory\n      case 'shapePropertyFactory':\n        return ShapePropertyFactory\n      case 'matrix':\n        return Matrix\n      default:\n        return null\n    }\n  }\n\n  lottie.play = animationManager.play\n  lottie.pause = animationManager.pause\n  lottie.setLocationHref = setLocation\n  lottie.togglePause = animationManager.togglePause\n  lottie.setSpeed = animationManager.setSpeed\n  lottie.setDirection = animationManager.setDirection\n  lottie.stop = animationManager.stop\n  lottie.searchAnimations = searchAnimations\n  lottie.registerAnimation = animationManager.registerAnimation\n  lottie.loadAnimation = loadAnimation\n  lottie.setSubframeRendering = setSubframeRendering\n  lottie.resize = animationManager.resize\n  // lottie.start = start;\n  lottie.goToAndStop = animationManager.goToAndStop\n  lottie.destroy = animationManager.destroy\n  lottie.setQuality = setQuality\n  lottie.inBrowser = inBrowser\n  lottie.installPlugin = installPlugin\n  lottie.freeze = animationManager.freeze\n  lottie.unfreeze = animationManager.unfreeze\n  lottie.setVolume = animationManager.setVolume\n  lottie.mute = animationManager.mute\n  lottie.unmute = animationManager.unmute\n  lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations\n  lottie.useWebWorker = setWebWorker\n  lottie.setIDPrefix = setPrefix\n  lottie.__getFactory = getFactory\n  lottie.version = '[[BM_VERSION]]'\n\n  function checkReady() {\n    if (document.readyState === 'complete') {\n      clearInterval(readyStateCheckInterval)\n      searchAnimations()\n    }\n  }\n\n  function getQueryVariable(variable) {\n    var vars = queryString.split('&')\n    for (var i = 0; i < vars.length; i += 1) {\n      var pair = vars[i].split('=')\n      if (decodeURIComponent(pair[0]) == variable) {\n        // eslint-disable-line eqeqeq\n        return decodeURIComponent(pair[1])\n      }\n    }\n    return null\n  }\n  var queryString = ''\n  if (standalone) {\n    var scripts = document.getElementsByTagName('script')\n    var index = scripts.length - 1\n    var myScript = scripts[index] || {\n      src: '',\n    }\n    queryString = myScript.src ? myScript.src.replace(/^[^\\?]+\\??/, '') : '' // eslint-disable-line no-useless-escape\n    renderer = getQueryVariable('renderer')\n  }\n  var readyStateCheckInterval = setInterval(checkReady, 100)\n\n  // this adds bodymovin to the window object for backwards compatibility\n  try {\n    if (\n      !(typeof exports === 'object' && typeof module !== 'undefined') &&\n      !(typeof define === 'function' && define.amd) // eslint-disable-line no-undef\n    ) {\n      window.bodymovin = lottie\n    }\n  } catch (err) {\n    //\n  }\n\n  const ShapeModifiers = (function () {\n    var ob = {}\n    var modifiers = {}\n    ob.registerModifier = registerModifier\n    ob.getModifier = getModifier\n\n    function registerModifier(nm, factory) {\n      if (!modifiers[nm]) {\n        modifiers[nm] = factory\n      }\n    }\n\n    function getModifier(nm, elem, data) {\n      return new modifiers[nm](elem, data)\n    }\n\n    return ob\n  })()\n\n  function ShapeModifier() {}\n  ShapeModifier.prototype.initModifierProperties = function () {}\n  ShapeModifier.prototype.addShapeToModifier = function () {}\n  ShapeModifier.prototype.addShape = function (data) {\n    if (!this.closed) {\n      // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.\n      data.sh.container.addDynamicProperty(data.sh)\n      var shapeData = { shape: data.sh, data: data, localShapeCollection: shapeCollectionPool.newShapeCollection() }\n      this.shapes.push(shapeData)\n      this.addShapeToModifier(shapeData)\n      if (this._isAnimated) {\n        data.setAsAnimated()\n      }\n    }\n  }\n  ShapeModifier.prototype.init = function (elem, data) {\n    this.shapes = []\n    this.elem = elem\n    this.initDynamicPropertyContainer(elem)\n    this.initModifierProperties(elem, data)\n    this.frameId = initialDefaultFrame\n    this.closed = false\n    this.k = false\n    if (this.dynamicProperties.length) {\n      this.k = true\n    } else {\n      this.getValue(true)\n    }\n  }\n  ShapeModifier.prototype.processKeys = function () {\n    if (this.elem.globalData.frameId === this.frameId) {\n      return\n    }\n    this.frameId = this.elem.globalData.frameId\n    this.iterateDynamicProperties()\n  }\n\n  extendPrototype([DynamicPropertyContainer], ShapeModifier)\n\n  function TrimModifier() {}\n  extendPrototype([ShapeModifier], TrimModifier)\n  TrimModifier.prototype.initModifierProperties = function (elem, data) {\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this)\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this)\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this)\n    this.sValue = 0\n    this.eValue = 0\n    this.getValue = this.processKeys\n    this.m = data.m\n    this._isAnimated =\n      !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length\n  }\n\n  TrimModifier.prototype.addShapeToModifier = function (shapeData) {\n    shapeData.pathsData = []\n  }\n\n  TrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\n    var segments = []\n    if (e <= 1) {\n      segments.push({\n        s: s,\n        e: e,\n      })\n    } else if (s >= 1) {\n      segments.push({\n        s: s - 1,\n        e: e - 1,\n      })\n    } else {\n      segments.push({\n        s: s,\n        e: 1,\n      })\n      segments.push({\n        s: 0,\n        e: e - 1,\n      })\n    }\n    var shapeSegments = []\n    var i\n    var len = segments.length\n    var segmentOb\n    for (i = 0; i < len; i += 1) {\n      segmentOb = segments[i]\n      if (\n        !(\n          segmentOb.e * totalModifierLength < addedLength ||\n          segmentOb.s * totalModifierLength > addedLength + shapeLength\n        )\n      ) {\n        var shapeS\n        var shapeE\n        if (segmentOb.s * totalModifierLength <= addedLength) {\n          shapeS = 0\n        } else {\n          shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength\n        }\n        if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\n          shapeE = 1\n        } else {\n          shapeE = (segmentOb.e * totalModifierLength - addedLength) / shapeLength\n        }\n        shapeSegments.push([shapeS, shapeE])\n      }\n    }\n    if (!shapeSegments.length) {\n      shapeSegments.push([0, 0])\n    }\n    return shapeSegments\n  }\n\n  TrimModifier.prototype.releasePathsData = function (pathsData) {\n    var i\n    var len = pathsData.length\n    for (i = 0; i < len; i += 1) {\n      segmentsLengthPool.release(pathsData[i])\n    }\n    pathsData.length = 0\n    return pathsData\n  }\n\n  TrimModifier.prototype.processShapes = function (_isFirstFrame) {\n    var s\n    var e\n    if (this._mdf || _isFirstFrame) {\n      var o = (this.o.v % 360) / 360\n      if (o < 0) {\n        o += 1\n      }\n      if (this.s.v > 1) {\n        s = 1 + o\n      } else if (this.s.v < 0) {\n        s = 0 + o\n      } else {\n        s = this.s.v + o\n      }\n      if (this.e.v > 1) {\n        e = 1 + o\n      } else if (this.e.v < 0) {\n        e = 0 + o\n      } else {\n        e = this.e.v + o\n      }\n\n      if (s > e) {\n        var _s = s\n        s = e\n        e = _s\n      }\n      s = Math.round(s * 10000) * 0.0001\n      e = Math.round(e * 10000) * 0.0001\n      this.sValue = s\n      this.eValue = e\n    } else {\n      s = this.sValue\n      e = this.eValue\n    }\n    var shapePaths\n    var i\n    var len = this.shapes.length\n    var j\n    var jLen\n    var pathsData\n    var pathData\n    var totalShapeLength\n    var totalModifierLength = 0\n\n    if (e === s) {\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].localShapeCollection.releaseShapes()\n        this.shapes[i].shape._mdf = true\n        this.shapes[i].shape.paths = this.shapes[i].localShapeCollection\n        if (this._mdf) {\n          this.shapes[i].pathsData.length = 0\n        }\n      }\n    } else if (!((e === 1 && s === 0) || (e === 0 && s === 1))) {\n      var segments = []\n      var shapeData\n      var localShapeCollection\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]\n        // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\n        if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\n          shapeData.shape.paths = shapeData.localShapeCollection\n        } else {\n          shapePaths = shapeData.shape.paths\n          jLen = shapePaths._length\n          totalShapeLength = 0\n          if (!shapeData.shape._mdf && shapeData.pathsData.length) {\n            totalShapeLength = shapeData.totalShapeLength\n          } else {\n            pathsData = this.releasePathsData(shapeData.pathsData)\n            for (j = 0; j < jLen; j += 1) {\n              pathData = bez.getSegmentsLength(shapePaths.shapes[j])\n              pathsData.push(pathData)\n              totalShapeLength += pathData.totalLength\n            }\n            shapeData.totalShapeLength = totalShapeLength\n            shapeData.pathsData = pathsData\n          }\n\n          totalModifierLength += totalShapeLength\n          shapeData.shape._mdf = true\n        }\n      }\n      var shapeS = s\n      var shapeE = e\n      var addedLength = 0\n      var edges\n      for (i = len - 1; i >= 0; i -= 1) {\n        shapeData = this.shapes[i]\n        if (shapeData.shape._mdf) {\n          localShapeCollection = shapeData.localShapeCollection\n          localShapeCollection.releaseShapes()\n          // if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\n          if (this.m === 2 && len > 1) {\n            edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength)\n            addedLength += shapeData.totalShapeLength\n          } else {\n            edges = [[shapeS, shapeE]]\n          }\n          jLen = edges.length\n          for (j = 0; j < jLen; j += 1) {\n            shapeS = edges[j][0]\n            shapeE = edges[j][1]\n            segments.length = 0\n            if (shapeE <= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength * shapeE,\n              })\n            } else if (shapeS >= 1) {\n              segments.push({\n                s: shapeData.totalShapeLength * (shapeS - 1),\n                e: shapeData.totalShapeLength * (shapeE - 1),\n              })\n            } else {\n              segments.push({\n                s: shapeData.totalShapeLength * shapeS,\n                e: shapeData.totalShapeLength,\n              })\n              segments.push({\n                s: 0,\n                e: shapeData.totalShapeLength * (shapeE - 1),\n              })\n            }\n            var newShapesData = this.addShapes(shapeData, segments[0])\n            if (segments[0].s !== segments[0].e) {\n              if (segments.length > 1) {\n                var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1]\n                if (lastShapeInCollection.c) {\n                  var lastShape = newShapesData.pop()\n                  this.addPaths(newShapesData, localShapeCollection)\n                  newShapesData = this.addShapes(shapeData, segments[1], lastShape)\n                } else {\n                  this.addPaths(newShapesData, localShapeCollection)\n                  newShapesData = this.addShapes(shapeData, segments[1])\n                }\n              }\n              this.addPaths(newShapesData, localShapeCollection)\n            }\n          }\n          shapeData.shape.paths = localShapeCollection\n        }\n      }\n    } else if (this._mdf) {\n      for (i = 0; i < len; i += 1) {\n        // Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\n        // Don't remove this even if it's losing cached info.\n        this.shapes[i].pathsData.length = 0\n        this.shapes[i].shape._mdf = true\n      }\n    }\n  }\n\n  TrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\n    var i\n    var len = newPaths.length\n    for (i = 0; i < len; i += 1) {\n      localShapeCollection.addShape(newPaths[i])\n    }\n  }\n\n  TrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos)\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1)\n    if (newShape) {\n      shapePath.setXYAt(pt1[0], pt1[1], 'v', pos)\n    }\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1)\n  }\n\n  TrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {\n    shapePath.setXYAt(points[1], points[5], 'o', pos)\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1)\n    if (newShape) {\n      shapePath.setXYAt(points[0], points[4], 'v', pos)\n    }\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1)\n  }\n\n  TrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\n    var pathsData = shapeData.pathsData\n    var shapePaths = shapeData.shape.paths.shapes\n    var i\n    var len = shapeData.shape.paths._length\n    var j\n    var jLen\n    var addedLength = 0\n    var currentLengthData\n    var segmentCount\n    var lengths\n    var segment\n    var shapes = []\n    var initPos\n    var newShape = true\n    if (!shapePath) {\n      shapePath = shapePool.newElement()\n      segmentCount = 0\n      initPos = 0\n    } else {\n      segmentCount = shapePath._length\n      initPos = shapePath._length\n    }\n    shapes.push(shapePath)\n    for (i = 0; i < len; i += 1) {\n      lengths = pathsData[i].lengths\n      shapePath.c = shapePaths[i].c\n      jLen = shapePaths[i].c ? lengths.length : lengths.length + 1\n      for (j = 1; j < jLen; j += 1) {\n        currentLengthData = lengths[j - 1]\n        if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\n          addedLength += currentLengthData.addedLength\n          shapePath.c = false\n        } else if (addedLength > shapeSegment.e) {\n          shapePath.c = false\n          break\n        } else {\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\n            this.addSegment(\n              shapePaths[i].v[j - 1],\n              shapePaths[i].o[j - 1],\n              shapePaths[i].i[j],\n              shapePaths[i].v[j],\n              shapePath,\n              segmentCount,\n              newShape,\n            )\n            newShape = false\n          } else {\n            segment = bez.getNewSegment(\n              shapePaths[i].v[j - 1],\n              shapePaths[i].v[j],\n              shapePaths[i].o[j - 1],\n              shapePaths[i].i[j],\n              (shapeSegment.s - addedLength) / currentLengthData.addedLength,\n              (shapeSegment.e - addedLength) / currentLengthData.addedLength,\n              lengths[j - 1],\n            )\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape)\n            // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n            newShape = false\n            shapePath.c = false\n          }\n          addedLength += currentLengthData.addedLength\n          segmentCount += 1\n        }\n      }\n      if (shapePaths[i].c && lengths.length) {\n        currentLengthData = lengths[j - 1]\n        if (addedLength <= shapeSegment.e) {\n          var segmentLength = lengths[j - 1].addedLength\n          if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\n            this.addSegment(\n              shapePaths[i].v[j - 1],\n              shapePaths[i].o[j - 1],\n              shapePaths[i].i[0],\n              shapePaths[i].v[0],\n              shapePath,\n              segmentCount,\n              newShape,\n            )\n            newShape = false\n          } else {\n            segment = bez.getNewSegment(\n              shapePaths[i].v[j - 1],\n              shapePaths[i].v[0],\n              shapePaths[i].o[j - 1],\n              shapePaths[i].i[0],\n              (shapeSegment.s - addedLength) / segmentLength,\n              (shapeSegment.e - addedLength) / segmentLength,\n              lengths[j - 1],\n            )\n            this.addSegmentFromArray(segment, shapePath, segmentCount, newShape)\n            // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\n            newShape = false\n            shapePath.c = false\n          }\n        } else {\n          shapePath.c = false\n        }\n        addedLength += currentLengthData.addedLength\n        segmentCount += 1\n      }\n      if (shapePath._length) {\n        shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos)\n        shapePath.setXYAt(\n          shapePath.v[shapePath._length - 1][0],\n          shapePath.v[shapePath._length - 1][1],\n          'o',\n          shapePath._length - 1,\n        )\n      }\n      if (addedLength > shapeSegment.e) {\n        break\n      }\n      if (i < len - 1) {\n        shapePath = shapePool.newElement()\n        newShape = true\n        shapes.push(shapePath)\n        segmentCount = 0\n      }\n    }\n    return shapes\n  }\n\n  function PuckerAndBloatModifier() {}\n  extendPrototype([ShapeModifier], PuckerAndBloatModifier)\n  PuckerAndBloatModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys\n    this.amount = PropertyFactory.getProp(elem, data.a, 0, null, this)\n    this._isAnimated = !!this.amount.effectsSequence.length\n  }\n\n  PuckerAndBloatModifier.prototype.processPath = function (path, amount) {\n    var percent = amount / 100\n    var centerPoint = [0, 0]\n    var pathLength = path._length\n    var i = 0\n    for (i = 0; i < pathLength; i += 1) {\n      centerPoint[0] += path.v[i][0]\n      centerPoint[1] += path.v[i][1]\n    }\n    centerPoint[0] /= pathLength\n    centerPoint[1] /= pathLength\n    var clonedPath = shapePool.newElement()\n    clonedPath.c = path.c\n    var vX\n    var vY\n    var oX\n    var oY\n    var iX\n    var iY\n    for (i = 0; i < pathLength; i += 1) {\n      vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent\n      vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent\n      oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent\n      oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent\n      iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent\n      iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent\n      clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i)\n    }\n    return clonedPath\n  }\n\n  PuckerAndBloatModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths\n    var i\n    var len = this.shapes.length\n    var j\n    var jLen\n    var amount = this.amount.v\n\n    if (amount !== 0) {\n      var shapeData\n      var localShapeCollection\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]\n        localShapeCollection = shapeData.localShapeCollection\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes()\n          shapeData.shape._mdf = true\n          shapePaths = shapeData.shape.paths.shapes\n          jLen = shapeData.shape.paths._length\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], amount))\n          }\n        }\n        shapeData.shape.paths = shapeData.localShapeCollection\n      }\n    }\n    if (!this.dynamicProperties.length) {\n      this._mdf = false\n    }\n  }\n\n  const TransformPropertyFactory = (function () {\n    var defaultVector = [0, 0]\n\n    function applyToMatrix(mat) {\n      var _mdf = this._mdf\n      this.iterateDynamicProperties()\n      this._mdf = this._mdf || _mdf\n      if (this.a) {\n        mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2])\n      }\n      if (this.s) {\n        mat.scale(this.s.v[0], this.s.v[1], this.s.v[2])\n      }\n      if (this.sk) {\n        mat.skewFromAxis(-this.sk.v, this.sa.v)\n      }\n      if (this.r) {\n        mat.rotate(-this.r.v)\n      } else {\n        mat\n          .rotateZ(-this.rz.v)\n          .rotateY(this.ry.v)\n          .rotateX(this.rx.v)\n          .rotateZ(-this.or.v[2])\n          .rotateY(this.or.v[1])\n          .rotateX(this.or.v[0])\n      }\n      if (this.data.p.s) {\n        if (this.data.p.z) {\n          mat.translate(this.px.v, this.py.v, -this.pz.v)\n        } else {\n          mat.translate(this.px.v, this.py.v, 0)\n        }\n      } else {\n        mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2])\n      }\n    }\n    function processKeys(forceRender) {\n      if (this.elem.globalData.frameId === this.frameId) {\n        return\n      }\n      if (this._isDirty) {\n        this.precalculateMatrix()\n        this._isDirty = false\n      }\n\n      this.iterateDynamicProperties()\n\n      if (this._mdf || forceRender) {\n        var frameRate\n        this.v.cloneFromProps(this.pre.props)\n        if (this.appliedTransformations < 1) {\n          this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2])\n        }\n        if (this.appliedTransformations < 2) {\n          this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2])\n        }\n        if (this.sk && this.appliedTransformations < 3) {\n          this.v.skewFromAxis(-this.sk.v, this.sa.v)\n        }\n        if (this.r && this.appliedTransformations < 4) {\n          this.v.rotate(-this.r.v)\n        } else if (!this.r && this.appliedTransformations < 4) {\n          this.v\n            .rotateZ(-this.rz.v)\n            .rotateY(this.ry.v)\n            .rotateX(this.rx.v)\n            .rotateZ(-this.or.v[2])\n            .rotateY(this.or.v[1])\n            .rotateX(this.or.v[0])\n        }\n        if (this.autoOriented) {\n          var v1\n          var v2\n          frameRate = this.elem.globalData.frameRate\n          if (this.p && this.p.keyframes && this.p.getValueAtTime) {\n            if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\n              v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0)\n              v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0)\n            } else if (\n              this.p._caching.lastFrame + this.p.offsetTime >=\n              this.p.keyframes[this.p.keyframes.length - 1].t\n            ) {\n              v1 = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / frameRate, 0)\n              v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0)\n            } else {\n              v1 = this.p.pv\n              v2 = this.p.getValueAtTime(\n                (this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate,\n                this.p.offsetTime,\n              )\n            }\n          } else if (\n            this.px &&\n            this.px.keyframes &&\n            this.py.keyframes &&\n            this.px.getValueAtTime &&\n            this.py.getValueAtTime\n          ) {\n            v1 = []\n            v2 = []\n            var px = this.px\n            var py = this.py\n            if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {\n              v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0)\n              v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0)\n              v2[0] = px.getValueAtTime(px.keyframes[0].t / frameRate, 0)\n              v2[1] = py.getValueAtTime(py.keyframes[0].t / frameRate, 0)\n            } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\n              v1[0] = px.getValueAtTime(px.keyframes[px.keyframes.length - 1].t / frameRate, 0)\n              v1[1] = py.getValueAtTime(py.keyframes[py.keyframes.length - 1].t / frameRate, 0)\n              v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0)\n              v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0)\n            } else {\n              v1 = [px.pv, py.pv]\n              v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime)\n              v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime)\n            }\n          } else {\n            v2 = defaultVector\n            v1 = v2\n          }\n          this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]))\n        }\n        if (this.data.p && this.data.p.s) {\n          if (this.data.p.z) {\n            this.v.translate(this.px.v, this.py.v, -this.pz.v)\n          } else {\n            this.v.translate(this.px.v, this.py.v, 0)\n          }\n        } else {\n          this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2])\n        }\n      }\n      this.frameId = this.elem.globalData.frameId\n    }\n\n    function precalculateMatrix() {\n      if (!this.a.k) {\n        this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2])\n        this.appliedTransformations = 1\n      } else {\n        return\n      }\n      if (!this.s.effectsSequence.length) {\n        this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2])\n        this.appliedTransformations = 2\n      } else {\n        return\n      }\n      if (this.sk) {\n        if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\n          this.pre.skewFromAxis(-this.sk.v, this.sa.v)\n          this.appliedTransformations = 3\n        } else {\n          return\n        }\n      }\n      if (this.r) {\n        if (!this.r.effectsSequence.length) {\n          this.pre.rotate(-this.r.v)\n          this.appliedTransformations = 4\n        }\n      } else if (\n        !this.rz.effectsSequence.length &&\n        !this.ry.effectsSequence.length &&\n        !this.rx.effectsSequence.length &&\n        !this.or.effectsSequence.length\n      ) {\n        this.pre\n          .rotateZ(-this.rz.v)\n          .rotateY(this.ry.v)\n          .rotateX(this.rx.v)\n          .rotateZ(-this.or.v[2])\n          .rotateY(this.or.v[1])\n          .rotateX(this.or.v[0])\n        this.appliedTransformations = 4\n      }\n    }\n\n    function autoOrient() {\n      //\n      // var prevP = this.getValueAtTime();\n    }\n\n    function addDynamicProperty(prop) {\n      this._addDynamicProperty(prop)\n      this.elem.addDynamicProperty(prop)\n      this._isDirty = true\n    }\n\n    function TransformProperty(elem, data, container) {\n      this.elem = elem\n      this.frameId = -1\n      this.propType = 'transform'\n      this.data = data\n      this.v = new Matrix()\n      // Precalculated matrix with non animated properties\n      this.pre = new Matrix()\n      this.appliedTransformations = 0\n      this.initDynamicPropertyContainer(container || elem)\n      if (data.p && data.p.s) {\n        this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this)\n        this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this)\n        if (data.p.z) {\n          this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this)\n        }\n      } else {\n        this.p = PropertyFactory.getProp(elem, data.p || { k: [0, 0, 0] }, 1, 0, this)\n      }\n      if (data.rx) {\n        this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this)\n        this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this)\n        this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this)\n        if (data.or.k[0].ti) {\n          var i\n          var len = data.or.k.length\n          for (i = 0; i < len; i += 1) {\n            data.or.k[i].to = null\n            data.or.k[i].ti = null\n          }\n        }\n        this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this)\n        // sh Indicates it needs to be capped between -180 and 180\n        this.or.sh = true\n      } else {\n        this.r = PropertyFactory.getProp(elem, data.r || { k: 0 }, 0, degToRads, this)\n      }\n      if (data.sk) {\n        this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this)\n        this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this)\n      }\n      this.a = PropertyFactory.getProp(elem, data.a || { k: [0, 0, 0] }, 1, 0, this)\n      this.s = PropertyFactory.getProp(elem, data.s || { k: [100, 100, 100] }, 1, 0.01, this)\n      // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\n      if (data.o) {\n        this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem)\n      } else {\n        this.o = { _mdf: false, v: 1 }\n      }\n      this._isDirty = true\n      if (!this.dynamicProperties.length) {\n        this.getValue(true)\n      }\n    }\n\n    TransformProperty.prototype = {\n      applyToMatrix: applyToMatrix,\n      getValue: processKeys,\n      precalculateMatrix: precalculateMatrix,\n      autoOrient: autoOrient,\n    }\n\n    extendPrototype([DynamicPropertyContainer], TransformProperty)\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty\n\n    function getTransformProperty(elem, data, container) {\n      return new TransformProperty(elem, data, container)\n    }\n\n    return {\n      getTransformProperty: getTransformProperty,\n    }\n  })()\n\n  function RepeaterModifier() {}\n  extendPrototype([ShapeModifier], RepeaterModifier)\n\n  RepeaterModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys\n    this.c = PropertyFactory.getProp(elem, data.c, 0, null, this)\n    this.o = PropertyFactory.getProp(elem, data.o, 0, null, this)\n    this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this)\n    this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this)\n    this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this)\n    this.data = data\n    if (!this.dynamicProperties.length) {\n      this.getValue(true)\n    }\n    this._isAnimated = !!this.dynamicProperties.length\n    this.pMatrix = new Matrix()\n    this.rMatrix = new Matrix()\n    this.sMatrix = new Matrix()\n    this.tMatrix = new Matrix()\n    this.matrix = new Matrix()\n  }\n\n  RepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {\n    var dir = inv ? -1 : 1\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc)\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc)\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2])\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2])\n    rMatrix.rotate(-transform.r.v * dir * perc)\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2])\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2])\n    sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY)\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2])\n  }\n\n  RepeaterModifier.prototype.init = function (elem, arr, pos, elemsData) {\n    this.elem = elem\n    this.arr = arr\n    this.pos = pos\n    this.elemsData = elemsData\n    this._currentCopies = 0\n    this._elements = []\n    this._groups = []\n    this.frameId = -1\n    this.initDynamicPropertyContainer(elem)\n    this.initModifierProperties(elem, arr[pos])\n    while (pos > 0) {\n      pos -= 1\n      // this._elements.unshift(arr.splice(pos,1)[0]);\n      this._elements.unshift(arr[pos])\n    }\n    if (this.dynamicProperties.length) {\n      this.k = true\n    } else {\n      this.getValue(true)\n    }\n  }\n\n  RepeaterModifier.prototype.resetElements = function (elements) {\n    var i\n    var len = elements.length\n    for (i = 0; i < len; i += 1) {\n      elements[i]._processed = false\n      if (elements[i].ty === 'gr') {\n        this.resetElements(elements[i].it)\n      }\n    }\n  }\n\n  RepeaterModifier.prototype.cloneElements = function (elements) {\n    var newElements = JSON.parse(JSON.stringify(elements))\n    this.resetElements(newElements)\n    return newElements\n  }\n\n  RepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\n    var i\n    var len = elements.length\n    for (i = 0; i < len; i += 1) {\n      elements[i]._render = renderFlag\n      if (elements[i].ty === 'gr') {\n        this.changeGroupRender(elements[i].it, renderFlag)\n      }\n    }\n  }\n\n  RepeaterModifier.prototype.processShapes = function (_isFirstFrame) {\n    var items\n    var itemsTransform\n    var i\n    var dir\n    var cont\n    var hasReloaded = false\n    if (this._mdf || _isFirstFrame) {\n      var copies = Math.ceil(this.c.v)\n      if (this._groups.length < copies) {\n        while (this._groups.length < copies) {\n          var group = {\n            it: this.cloneElements(this._elements),\n            ty: 'gr',\n          }\n          group.it.push({\n            a: { a: 0, ix: 1, k: [0, 0] },\n            nm: 'Transform',\n            o: { a: 0, ix: 7, k: 100 },\n            p: { a: 0, ix: 2, k: [0, 0] },\n            r: {\n              a: 1,\n              ix: 6,\n              k: [\n                { s: 0, e: 0, t: 0 },\n                { s: 0, e: 0, t: 1 },\n              ],\n            },\n            s: { a: 0, ix: 3, k: [100, 100] },\n            sa: { a: 0, ix: 5, k: 0 },\n            sk: { a: 0, ix: 4, k: 0 },\n            ty: 'tr',\n          })\n\n          this.arr.splice(0, 0, group)\n          this._groups.splice(0, 0, group)\n          this._currentCopies += 1\n        }\n        this.elem.reloadShapes()\n        hasReloaded = true\n      }\n      cont = 0\n      var renderFlag\n      for (i = 0; i <= this._groups.length - 1; i += 1) {\n        renderFlag = cont < copies\n        this._groups[i]._render = renderFlag\n        this.changeGroupRender(this._groups[i].it, renderFlag)\n        if (!renderFlag) {\n          var elems = this.elemsData[i].it\n          var transformData = elems[elems.length - 1]\n          if (transformData.transform.op.v !== 0) {\n            transformData.transform.op._mdf = true\n            transformData.transform.op.v = 0\n          } else {\n            transformData.transform.op._mdf = false\n          }\n        }\n        cont += 1\n      }\n\n      this._currentCopies = copies\n      /// /\n\n      var offset = this.o.v\n      var offsetModulo = offset % 1\n      var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset)\n      var pProps = this.pMatrix.props\n      var rProps = this.rMatrix.props\n      var sProps = this.sMatrix.props\n      this.pMatrix.reset()\n      this.rMatrix.reset()\n      this.sMatrix.reset()\n      this.tMatrix.reset()\n      this.matrix.reset()\n      var iteration = 0\n\n      if (offset > 0) {\n        while (iteration < roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false)\n          iteration += 1\n        }\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false)\n          iteration += offsetModulo\n        }\n      } else if (offset < 0) {\n        while (iteration > roundOffset) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true)\n          iteration -= 1\n        }\n        if (offsetModulo) {\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true)\n          iteration -= offsetModulo\n        }\n      }\n      i = this.data.m === 1 ? 0 : this._currentCopies - 1\n      dir = this.data.m === 1 ? 1 : -1\n      cont = this._currentCopies\n      var j\n      var jLen\n      while (cont) {\n        items = this.elemsData[i].it\n        itemsTransform = items[items.length - 1].transform.mProps.v.props\n        jLen = itemsTransform.length\n        items[items.length - 1].transform.mProps._mdf = true\n        items[items.length - 1].transform.op._mdf = true\n        items[items.length - 1].transform.op.v =\n          this._currentCopies === 1 ? this.so.v : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1))\n\n        if (iteration !== 0) {\n          if ((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)) {\n            this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false)\n          }\n          this.matrix.transform(\n            rProps[0],\n            rProps[1],\n            rProps[2],\n            rProps[3],\n            rProps[4],\n            rProps[5],\n            rProps[6],\n            rProps[7],\n            rProps[8],\n            rProps[9],\n            rProps[10],\n            rProps[11],\n            rProps[12],\n            rProps[13],\n            rProps[14],\n            rProps[15],\n          )\n          this.matrix.transform(\n            sProps[0],\n            sProps[1],\n            sProps[2],\n            sProps[3],\n            sProps[4],\n            sProps[5],\n            sProps[6],\n            sProps[7],\n            sProps[8],\n            sProps[9],\n            sProps[10],\n            sProps[11],\n            sProps[12],\n            sProps[13],\n            sProps[14],\n            sProps[15],\n          )\n          this.matrix.transform(\n            pProps[0],\n            pProps[1],\n            pProps[2],\n            pProps[3],\n            pProps[4],\n            pProps[5],\n            pProps[6],\n            pProps[7],\n            pProps[8],\n            pProps[9],\n            pProps[10],\n            pProps[11],\n            pProps[12],\n            pProps[13],\n            pProps[14],\n            pProps[15],\n          )\n\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j]\n          }\n          this.matrix.reset()\n        } else {\n          this.matrix.reset()\n          for (j = 0; j < jLen; j += 1) {\n            itemsTransform[j] = this.matrix.props[j]\n          }\n        }\n        iteration += 1\n        cont -= 1\n        i += dir\n      }\n    } else {\n      cont = this._currentCopies\n      i = 0\n      dir = 1\n      while (cont) {\n        items = this.elemsData[i].it\n        itemsTransform = items[items.length - 1].transform.mProps.v.props\n        items[items.length - 1].transform.mProps._mdf = false\n        items[items.length - 1].transform.op._mdf = false\n        cont -= 1\n        i += dir\n      }\n    }\n    return hasReloaded\n  }\n\n  RepeaterModifier.prototype.addShape = function () {}\n\n  function RoundCornersModifier() {}\n  extendPrototype([ShapeModifier], RoundCornersModifier)\n  RoundCornersModifier.prototype.initModifierProperties = function (elem, data) {\n    this.getValue = this.processKeys\n    this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this)\n    this._isAnimated = !!this.rd.effectsSequence.length\n  }\n\n  RoundCornersModifier.prototype.processPath = function (path, round) {\n    var clonedPath = shapePool.newElement()\n    clonedPath.c = path.c\n    var i\n    var len = path._length\n    var currentV\n    var currentI\n    var currentO\n    var closerV\n    var distance\n    var newPosPerc\n    var index = 0\n    var vX\n    var vY\n    var oX\n    var oY\n    var iX\n    var iY\n    for (i = 0; i < len; i += 1) {\n      currentV = path.v[i]\n      currentO = path.o[i]\n      currentI = path.i[i]\n      if (\n        currentV[0] === currentO[0] &&\n        currentV[1] === currentO[1] &&\n        currentV[0] === currentI[0] &&\n        currentV[1] === currentI[1]\n      ) {\n        if ((i === 0 || i === len - 1) && !path.c) {\n          clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index)\n          /* clonedPath.v[index] = currentV;\n                clonedPath.o[index] = currentO;\n                clonedPath.i[index] = currentI; */\n          index += 1\n        } else {\n          if (i === 0) {\n            closerV = path.v[len - 1]\n          } else {\n            closerV = path.v[i - 1]\n          }\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2))\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0\n          iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc\n          vX = iX\n          iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc\n          vY = iY\n          oX = vX - (vX - currentV[0]) * roundCorner\n          oY = vY - (vY - currentV[1]) * roundCorner\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index)\n          index += 1\n\n          if (i === len - 1) {\n            closerV = path.v[0]\n          } else {\n            closerV = path.v[i + 1]\n          }\n          distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2))\n          newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0\n          oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc\n          vX = oX\n          oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc\n          vY = oY\n          iX = vX - (vX - currentV[0]) * roundCorner\n          iY = vY - (vY - currentV[1]) * roundCorner\n          clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index)\n          index += 1\n        }\n      } else {\n        clonedPath.setTripleAt(\n          path.v[i][0],\n          path.v[i][1],\n          path.o[i][0],\n          path.o[i][1],\n          path.i[i][0],\n          path.i[i][1],\n          index,\n        )\n        index += 1\n      }\n    }\n    return clonedPath\n  }\n\n  RoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {\n    var shapePaths\n    var i\n    var len = this.shapes.length\n    var j\n    var jLen\n    var rd = this.rd.v\n\n    if (rd !== 0) {\n      var shapeData\n      var localShapeCollection\n      for (i = 0; i < len; i += 1) {\n        shapeData = this.shapes[i]\n        localShapeCollection = shapeData.localShapeCollection\n        if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\n          localShapeCollection.releaseShapes()\n          shapeData.shape._mdf = true\n          shapePaths = shapeData.shape.paths.shapes\n          jLen = shapeData.shape.paths._length\n          for (j = 0; j < jLen; j += 1) {\n            localShapeCollection.addShape(this.processPath(shapePaths[j], rd))\n          }\n        }\n        shapeData.shape.paths = shapeData.localShapeCollection\n      }\n    }\n    if (!this.dynamicProperties.length) {\n      this._mdf = false\n    }\n  }\n\n  function getFontProperties(fontData) {\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : []\n\n    var fWeight = 'normal'\n    var fStyle = 'normal'\n    var len = styles.length\n    var styleName\n    for (var i = 0; i < len; i += 1) {\n      styleName = styles[i].toLowerCase()\n      switch (styleName) {\n        case 'italic':\n          fStyle = 'italic'\n          break\n        case 'bold':\n          fWeight = '700'\n          break\n        case 'black':\n          fWeight = '900'\n          break\n        case 'medium':\n          fWeight = '500'\n          break\n        case 'regular':\n        case 'normal':\n          fWeight = '400'\n          break\n        case 'light':\n        case 'thin':\n          fWeight = '200'\n          break\n        default:\n          break\n      }\n    }\n\n    return {\n      style: fStyle,\n      weight: fontData.fWeight || fWeight,\n    }\n  }\n\n  const FontManager = (function () {\n    var maxWaitingTime = 5000\n    var emptyChar = {\n      w: 0,\n      size: 0,\n      shapes: [],\n      data: {\n        shapes: [],\n      },\n    }\n    var combinedCharacters = []\n    // Hindi characters\n    combinedCharacters = combinedCharacters.concat([\n      2304,\n      2305,\n      2306,\n      2307,\n      2362,\n      2363,\n      2364,\n      2364,\n      2366,\n      2367,\n      2368,\n      2369,\n      2370,\n      2371,\n      2372,\n      2373,\n      2374,\n      2375,\n      2376,\n      2377,\n      2378,\n      2379,\n      2380,\n      2381,\n      2382,\n      2383,\n      2387,\n      2388,\n      2389,\n      2390,\n      2391,\n      2402,\n      2403,\n    ])\n\n    var surrogateModifiers = ['d83cdffb', 'd83cdffc', 'd83cdffd', 'd83cdffe', 'd83cdfff']\n\n    var zeroWidthJoiner = [65039, 8205]\n\n    function trimFontOptions(font) {\n      var familyArray = font.split(',')\n      var i\n      var len = familyArray.length\n      var enabledFamilies = []\n      for (i = 0; i < len; i += 1) {\n        if (familyArray[i] !== 'sans-serif' && familyArray[i] !== 'monospace') {\n          enabledFamilies.push(familyArray[i])\n        }\n      }\n      return enabledFamilies.join(',')\n    }\n\n    function setUpNode(font, family) {\n      var parentNode = createTag('span')\n      // Node is invisible to screen readers.\n      parentNode.setAttribute('aria-hidden', true)\n      parentNode.style.fontFamily = family\n      var node = createTag('span')\n      // Characters that vary significantly among different fonts\n      node.innerText = 'giItT1WQy@!-/#'\n      // Visible - so we can measure it - but not on the screen\n      parentNode.style.position = 'absolute'\n      parentNode.style.left = '-10000px'\n      parentNode.style.top = '-10000px'\n      // Large font size makes even subtle changes obvious\n      parentNode.style.fontSize = '300px'\n      // Reset any font properties\n      parentNode.style.fontVariant = 'normal'\n      parentNode.style.fontStyle = 'normal'\n      parentNode.style.fontWeight = 'normal'\n      parentNode.style.letterSpacing = '0'\n      parentNode.appendChild(node)\n      document.body.appendChild(parentNode)\n\n      // Remember width with no applied web font\n      var width = node.offsetWidth\n      node.style.fontFamily = trimFontOptions(font) + ', ' + family\n      return { node: node, w: width, parent: parentNode }\n    }\n\n    function checkLoadedFonts() {\n      var i\n      var len = this.fonts.length\n      var node\n      var w\n      var loadedCount = len\n      for (i = 0; i < len; i += 1) {\n        if (this.fonts[i].loaded) {\n          loadedCount -= 1\n        } else if (this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0) {\n          this.fonts[i].loaded = true\n        } else {\n          node = this.fonts[i].monoCase.node\n          w = this.fonts[i].monoCase.w\n          if (node.offsetWidth !== w) {\n            loadedCount -= 1\n            this.fonts[i].loaded = true\n          } else {\n            node = this.fonts[i].sansCase.node\n            w = this.fonts[i].sansCase.w\n            if (node.offsetWidth !== w) {\n              loadedCount -= 1\n              this.fonts[i].loaded = true\n            }\n          }\n          if (this.fonts[i].loaded) {\n            this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent)\n            this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent)\n          }\n        }\n      }\n\n      if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\n        setTimeout(this.checkLoadedFontsBinded, 20)\n      } else {\n        setTimeout(this.setIsLoadedBinded, 10)\n      }\n    }\n\n    function createHelper(fontData, def) {\n      var engine = document.body && def ? 'svg' : 'canvas'\n      var helper\n      var fontProps = getFontProperties(fontData)\n      if (engine === 'svg') {\n        var tHelper = createNS('text')\n        tHelper.style.fontSize = '100px'\n        // tHelper.style.fontFamily = fontData.fFamily;\n        tHelper.setAttribute('font-family', fontData.fFamily)\n        tHelper.setAttribute('font-style', fontProps.style)\n        tHelper.setAttribute('font-weight', fontProps.weight)\n        tHelper.textContent = '1'\n        if (fontData.fClass) {\n          tHelper.style.fontFamily = 'inherit'\n          tHelper.setAttribute('class', fontData.fClass)\n        } else {\n          tHelper.style.fontFamily = fontData.fFamily\n        }\n        def.appendChild(tHelper)\n        helper = tHelper\n      } else {\n        var tCanvasHelper = new OffscreenCanvas(500, 500).getContext('2d')\n        tCanvasHelper.font = fontProps.style + ' ' + fontProps.weight + ' 100px ' + fontData.fFamily\n        helper = tCanvasHelper\n      }\n      function measure(text) {\n        if (engine === 'svg') {\n          helper.textContent = text\n          return helper.getComputedTextLength()\n        }\n        return helper.measureText(text).width\n      }\n      return {\n        measureText: measure,\n      }\n    }\n\n    function addFonts(fontData, defs) {\n      if (!fontData) {\n        this.isLoaded = true\n        return\n      }\n      if (this.chars) {\n        this.isLoaded = true\n        this.fonts = fontData.list\n        return\n      }\n      if (!document.body) {\n        this.isLoaded = true\n        fontData.list.forEach((data) => {\n          data.helper = createHelper(data)\n          data.cache = {}\n        })\n        this.fonts = fontData.list\n        return\n      }\n\n      var fontArr = fontData.list\n      var i\n      var len = fontArr.length\n      var _pendingFonts = len\n      for (i = 0; i < len; i += 1) {\n        var shouldLoadFont = true\n        var loadedSelector\n        var j\n        fontArr[i].loaded = false\n        fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, 'monospace')\n        fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, 'sans-serif')\n        if (!fontArr[i].fPath) {\n          fontArr[i].loaded = true\n          _pendingFonts -= 1\n        } else if (fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3) {\n          loadedSelector = document.querySelectorAll(\n            'style[f-forigin=\"p\"][f-family=\"' +\n              fontArr[i].fFamily +\n              '\"], style[f-origin=\"3\"][f-family=\"' +\n              fontArr[i].fFamily +\n              '\"]',\n          )\n\n          if (loadedSelector.length > 0) {\n            shouldLoadFont = false\n          }\n\n          if (shouldLoadFont) {\n            var s = createTag('style')\n            s.setAttribute('f-forigin', fontArr[i].fOrigin)\n            s.setAttribute('f-origin', fontArr[i].origin)\n            s.setAttribute('f-family', fontArr[i].fFamily)\n            s.type = 'text/css'\n            s.innerText =\n              '@font-face {font-family: ' +\n              fontArr[i].fFamily +\n              \"; font-style: normal; src: url('\" +\n              fontArr[i].fPath +\n              \"');}\"\n            defs.appendChild(s)\n          }\n        } else if (fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1) {\n          loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]')\n\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\n              // Font is already loaded\n              shouldLoadFont = false\n            }\n          }\n\n          if (shouldLoadFont) {\n            var l = createTag('link')\n            l.setAttribute('f-forigin', fontArr[i].fOrigin)\n            l.setAttribute('f-origin', fontArr[i].origin)\n            l.type = 'text/css'\n            l.rel = 'stylesheet'\n            l.href = fontArr[i].fPath\n            document.body.appendChild(l)\n          }\n        } else if (fontArr[i].fOrigin === 't' || fontArr[i].origin === 2) {\n          loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]')\n\n          for (j = 0; j < loadedSelector.length; j += 1) {\n            if (fontArr[i].fPath === loadedSelector[j].src) {\n              // Font is already loaded\n              shouldLoadFont = false\n            }\n          }\n\n          if (shouldLoadFont) {\n            var sc = createTag('link')\n            sc.setAttribute('f-forigin', fontArr[i].fOrigin)\n            sc.setAttribute('f-origin', fontArr[i].origin)\n            sc.setAttribute('rel', 'stylesheet')\n            sc.setAttribute('href', fontArr[i].fPath)\n            defs.appendChild(sc)\n          }\n        }\n        fontArr[i].helper = createHelper(fontArr[i], defs)\n        fontArr[i].cache = {}\n        this.fonts.push(fontArr[i])\n      }\n      if (_pendingFonts === 0) {\n        this.isLoaded = true\n      } else {\n        // On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\n        // Adding this timeout seems to fix it\n        setTimeout(this.checkLoadedFonts.bind(this), 100)\n      }\n    }\n\n    function addChars(chars) {\n      if (!chars) {\n        return\n      }\n      if (!this.chars) {\n        this.chars = []\n      }\n      var i\n      var len = chars.length\n      var j\n      var jLen = this.chars.length\n      var found\n      for (i = 0; i < len; i += 1) {\n        j = 0\n        found = false\n        while (j < jLen) {\n          if (\n            this.chars[j].style === chars[i].style &&\n            this.chars[j].fFamily === chars[i].fFamily &&\n            this.chars[j].ch === chars[i].ch\n          ) {\n            found = true\n          }\n          j += 1\n        }\n        if (!found) {\n          this.chars.push(chars[i])\n          jLen += 1\n        }\n      }\n    }\n\n    function getCharData(char, style, font) {\n      var i = 0\n      var len = this.chars.length\n      while (i < len) {\n        if (this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font) {\n          return this.chars[i]\n        }\n        i += 1\n      }\n      if (\n        ((typeof char === 'string' && char.charCodeAt(0) !== 13) || !char) &&\n        console &&\n        console.warn && // eslint-disable-line no-console\n        !this._warned\n      ) {\n        this._warned = true\n        console.warn('Missing character from exported characters list: ', char, style, font) // eslint-disable-line no-console\n      }\n      return emptyChar\n    }\n\n    function measureText(char, fontName, size) {\n      var fontData = this.getFontByName(fontName)\n      var index = char.charCodeAt(0)\n      if (!fontData.cache[index + 1]) {\n        var tHelper = fontData.helper\n        if (char === ' ') {\n          var doubleSize = tHelper.measureText('|' + char + '|')\n          var singleSize = tHelper.measureText('||')\n          fontData.cache[index + 1] = (doubleSize - singleSize) / 100\n        } else {\n          fontData.cache[index + 1] = tHelper.measureText(char) / 100\n        }\n      }\n      return fontData.cache[index + 1] * size\n    }\n\n    function getFontByName(name) {\n      var i = 0\n      var len = this.fonts.length\n      while (i < len) {\n        if (this.fonts[i].fName === name) {\n          return this.fonts[i]\n        }\n        i += 1\n      }\n      return this.fonts[0]\n    }\n\n    function isModifier(firstCharCode, secondCharCode) {\n      var sum = firstCharCode.toString(16) + secondCharCode.toString(16)\n      return surrogateModifiers.indexOf(sum) !== -1\n    }\n\n    function isZeroWidthJoiner(firstCharCode, secondCharCode) {\n      if (!secondCharCode) {\n        return firstCharCode === zeroWidthJoiner[1]\n      }\n      return firstCharCode === zeroWidthJoiner[0] && secondCharCode === zeroWidthJoiner[1]\n    }\n\n    function isCombinedCharacter(char) {\n      return combinedCharacters.indexOf(char) !== -1\n    }\n\n    function setIsLoaded() {\n      this.isLoaded = true\n    }\n\n    var Font = function () {\n      this.fonts = []\n      this.chars = null\n      this.typekitLoaded = 0\n      this.isLoaded = false\n      this._warned = false\n      this.initTime = Date.now()\n      this.setIsLoadedBinded = this.setIsLoaded.bind(this)\n      this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this)\n    }\n    Font.isModifier = isModifier\n    Font.isZeroWidthJoiner = isZeroWidthJoiner\n    Font.isCombinedCharacter = isCombinedCharacter\n\n    var fontPrototype = {\n      addChars: addChars,\n      addFonts: addFonts,\n      getCharData: getCharData,\n      getFontByName: getFontByName,\n      measureText: measureText,\n      checkLoadedFonts: checkLoadedFonts,\n      setIsLoaded: setIsLoaded,\n    }\n\n    Font.prototype = fontPrototype\n\n    return Font\n  })()\n\n  function RenderableElement() {}\n\n  RenderableElement.prototype = {\n    initRenderable: function () {\n      // layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\n      this.isInRange = false\n      // layer's display state\n      this.hidden = false\n      // If layer's transparency equals 0, it can be hidden\n      this.isTransparent = false\n      // list of animated components\n      this.renderableComponents = []\n    },\n    addRenderableComponent: function (component) {\n      if (this.renderableComponents.indexOf(component) === -1) {\n        this.renderableComponents.push(component)\n      }\n    },\n    removeRenderableComponent: function (component) {\n      if (this.renderableComponents.indexOf(component) !== -1) {\n        this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1)\n      }\n    },\n    prepareRenderableFrame: function (num) {\n      this.checkLayerLimits(num)\n    },\n    checkTransparency: function () {\n      if (this.finalTransform.mProp.o.v <= 0) {\n        if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\n          this.isTransparent = true\n          this.hide()\n        }\n      } else if (this.isTransparent) {\n        this.isTransparent = false\n        this.show()\n      }\n    },\n    /**\n     * @function\n     * Initializes frame related properties.\n     *\n     * @param {number} num\n     * current frame number in Layer's time\n     *\n     */\n    checkLayerLimits: function (num) {\n      if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\n        if (this.isInRange !== true) {\n          this.globalData._mdf = true\n          this._mdf = true\n          this.isInRange = true\n          this.show()\n        }\n      } else if (this.isInRange !== false) {\n        this.globalData._mdf = true\n        this.isInRange = false\n        this.hide()\n      }\n    },\n    renderRenderable: function () {\n      var i\n      var len = this.renderableComponents.length\n      for (i = 0; i < len; i += 1) {\n        this.renderableComponents[i].renderFrame(this._isFirstFrame)\n      }\n      /* this.maskManager.renderFrame(this.finalTransform.mat);\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame); */\n    },\n    sourceRectAtTime: function () {\n      return {\n        top: 0,\n        left: 0,\n        width: 100,\n        height: 100,\n      }\n    },\n    getLayerSize: function () {\n      if (this.data.ty === 5) {\n        return { w: this.data.textData.width, h: this.data.textData.height }\n      }\n      return { w: this.data.width, h: this.data.height }\n    },\n  }\n\n  const MaskManagerInterface = (function () {\n    function MaskInterface(mask, data) {\n      this._mask = mask\n      this._data = data\n    }\n    Object.defineProperty(MaskInterface.prototype, 'maskPath', {\n      get: function () {\n        if (this._mask.prop.k) {\n          this._mask.prop.getValue()\n        }\n        return this._mask.prop\n      },\n    })\n    Object.defineProperty(MaskInterface.prototype, 'maskOpacity', {\n      get: function () {\n        if (this._mask.op.k) {\n          this._mask.op.getValue()\n        }\n        return this._mask.op.v * 100\n      },\n    })\n\n    var MaskManager = function (maskManager) {\n      var _masksInterfaces = createSizedArray(maskManager.viewData.length)\n      var i\n      var len = maskManager.viewData.length\n      for (i = 0; i < len; i += 1) {\n        _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i])\n      }\n\n      var maskFunction = function (name) {\n        i = 0\n        while (i < len) {\n          if (maskManager.masksProperties[i].nm === name) {\n            return _masksInterfaces[i]\n          }\n          i += 1\n        }\n        return null\n      }\n      return maskFunction\n    }\n    return MaskManager\n  })()\n\n  const ExpressionPropertyInterface = (function () {\n    var defaultUnidimensionalValue = { pv: 0, v: 0, mult: 1 }\n    var defaultMultidimensionalValue = { pv: [0, 0, 0], v: [0, 0, 0], mult: 1 }\n\n    function completeProperty(expressionValue, property, type) {\n      Object.defineProperty(expressionValue, 'velocity', {\n        get: function () {\n          return property.getVelocityAtTime(property.comp.currentFrame)\n        },\n      })\n      expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0\n      expressionValue.key = function (pos) {\n        if (!expressionValue.numKeys) {\n          return 0\n        }\n        var value = ''\n        if ('s' in property.keyframes[pos - 1]) {\n          value = property.keyframes[pos - 1].s\n        } else if ('e' in property.keyframes[pos - 2]) {\n          value = property.keyframes[pos - 2].e\n        } else {\n          value = property.keyframes[pos - 2].s\n        }\n        var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value) // eslint-disable-line no-new-wrappers\n        valueProp.time = property.keyframes[pos - 1].t / property.elem.comp.globalData.frameRate\n        valueProp.value = type === 'unidimensional' ? value[0] : value\n        return valueProp\n      }\n      expressionValue.valueAtTime = property.getValueAtTime\n      expressionValue.speedAtTime = property.getSpeedAtTime\n      expressionValue.velocityAtTime = property.getVelocityAtTime\n      expressionValue.propertyGroup = property.propertyGroup\n    }\n\n    function UnidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultUnidimensionalValue\n      }\n      var mult = 1 / property.mult\n      var val = property.pv * mult\n      var expressionValue = new Number(val) // eslint-disable-line no-new-wrappers\n      expressionValue.value = val\n      completeProperty(expressionValue, property, 'unidimensional')\n\n      return function () {\n        if (property.k) {\n          property.getValue()\n        }\n        val = property.v * mult\n        if (expressionValue.value !== val) {\n          expressionValue = new Number(val) // eslint-disable-line no-new-wrappers\n          expressionValue.value = val\n          completeProperty(expressionValue, property, 'unidimensional')\n        }\n        return expressionValue\n      }\n    }\n\n    function MultidimensionalPropertyInterface(property) {\n      if (!property || !('pv' in property)) {\n        property = defaultMultidimensionalValue\n      }\n      var mult = 1 / property.mult\n      var len = (property.data && property.data.l) || property.pv.length\n      var expressionValue = createTypedArray('float32', len)\n      var arrValue = createTypedArray('float32', len)\n      expressionValue.value = arrValue\n      completeProperty(expressionValue, property, 'multidimensional')\n\n      return function () {\n        if (property.k) {\n          property.getValue()\n        }\n        for (var i = 0; i < len; i += 1) {\n          arrValue[i] = property.v[i] * mult\n          expressionValue[i] = arrValue[i]\n        }\n        return expressionValue\n      }\n    }\n\n    // TODO: try to avoid using this getter\n    function defaultGetter() {\n      return defaultUnidimensionalValue\n    }\n\n    return function (property) {\n      if (!property) {\n        return defaultGetter\n      }\n      if (property.propType === 'unidimensional') {\n        return UnidimensionalPropertyInterface(property)\n      }\n      return MultidimensionalPropertyInterface(property)\n    }\n  })()\n\n  const TransformExpressionInterface = (function () {\n    return function (transform) {\n      function _thisFunction(name) {\n        switch (name) {\n          case 'scale':\n          case 'Scale':\n          case 'ADBE Scale':\n          case 6:\n            return _thisFunction.scale\n          case 'rotation':\n          case 'Rotation':\n          case 'ADBE Rotation':\n          case 'ADBE Rotate Z':\n          case 10:\n            return _thisFunction.rotation\n          case 'ADBE Rotate X':\n            return _thisFunction.xRotation\n          case 'ADBE Rotate Y':\n            return _thisFunction.yRotation\n          case 'position':\n          case 'Position':\n          case 'ADBE Position':\n          case 2:\n            return _thisFunction.position\n          case 'ADBE Position_0':\n            return _thisFunction.xPosition\n          case 'ADBE Position_1':\n            return _thisFunction.yPosition\n          case 'ADBE Position_2':\n            return _thisFunction.zPosition\n          case 'anchorPoint':\n          case 'AnchorPoint':\n          case 'Anchor Point':\n          case 'ADBE AnchorPoint':\n          case 1:\n            return _thisFunction.anchorPoint\n          case 'opacity':\n          case 'Opacity':\n          case 11:\n            return _thisFunction.opacity\n          default:\n            return null\n        }\n      }\n      Object.defineProperty(_thisFunction, 'rotation', {\n        get: ExpressionPropertyInterface(transform.r || transform.rz),\n      })\n\n      Object.defineProperty(_thisFunction, 'zRotation', {\n        get: ExpressionPropertyInterface(transform.rz || transform.r),\n      })\n\n      Object.defineProperty(_thisFunction, 'xRotation', {\n        get: ExpressionPropertyInterface(transform.rx),\n      })\n\n      Object.defineProperty(_thisFunction, 'yRotation', {\n        get: ExpressionPropertyInterface(transform.ry),\n      })\n      Object.defineProperty(_thisFunction, 'scale', {\n        get: ExpressionPropertyInterface(transform.s),\n      })\n      var _px\n      var _py\n      var _pz\n      var _transformFactory\n      if (transform.p) {\n        _transformFactory = ExpressionPropertyInterface(transform.p)\n      } else {\n        _px = ExpressionPropertyInterface(transform.px)\n        _py = ExpressionPropertyInterface(transform.py)\n        if (transform.pz) {\n          _pz = ExpressionPropertyInterface(transform.pz)\n        }\n      }\n      Object.defineProperty(_thisFunction, 'position', {\n        get: function () {\n          if (transform.p) {\n            return _transformFactory()\n          }\n          return [_px(), _py(), _pz ? _pz() : 0]\n        },\n      })\n\n      Object.defineProperty(_thisFunction, 'xPosition', {\n        get: ExpressionPropertyInterface(transform.px),\n      })\n\n      Object.defineProperty(_thisFunction, 'yPosition', {\n        get: ExpressionPropertyInterface(transform.py),\n      })\n\n      Object.defineProperty(_thisFunction, 'zPosition', {\n        get: ExpressionPropertyInterface(transform.pz),\n      })\n\n      Object.defineProperty(_thisFunction, 'anchorPoint', {\n        get: ExpressionPropertyInterface(transform.a),\n      })\n\n      Object.defineProperty(_thisFunction, 'opacity', {\n        get: ExpressionPropertyInterface(transform.o),\n      })\n\n      Object.defineProperty(_thisFunction, 'skew', {\n        get: ExpressionPropertyInterface(transform.sk),\n      })\n\n      Object.defineProperty(_thisFunction, 'skewAxis', {\n        get: ExpressionPropertyInterface(transform.sa),\n      })\n\n      Object.defineProperty(_thisFunction, 'orientation', {\n        get: ExpressionPropertyInterface(transform.or),\n      })\n\n      return _thisFunction\n    }\n  })()\n\n  const LayerExpressionInterface = (function () {\n    function getMatrix(time) {\n      var toWorldMat = new Matrix()\n      if (time !== undefined) {\n        var propMatrix = this._elem.finalTransform.mProp.getValueAtTime(time)\n        propMatrix.clone(toWorldMat)\n      } else {\n        var transformMat = this._elem.finalTransform.mProp\n        transformMat.applyToMatrix(toWorldMat)\n      }\n      return toWorldMat\n    }\n\n    function toWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time)\n      toWorldMat.props[12] = 0\n      toWorldMat.props[13] = 0\n      toWorldMat.props[14] = 0\n      return this.applyPoint(toWorldMat, arr)\n    }\n\n    function toWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time)\n      return this.applyPoint(toWorldMat, arr)\n    }\n\n    function fromWorldVec(arr, time) {\n      var toWorldMat = this.getMatrix(time)\n      toWorldMat.props[12] = 0\n      toWorldMat.props[13] = 0\n      toWorldMat.props[14] = 0\n      return this.invertPoint(toWorldMat, arr)\n    }\n\n    function fromWorld(arr, time) {\n      var toWorldMat = this.getMatrix(time)\n      return this.invertPoint(toWorldMat, arr)\n    }\n\n    function applyPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i\n        var len = this._elem.hierarchy.length\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix)\n        }\n      }\n      return matrix.applyToPointArray(arr[0], arr[1], arr[2] || 0)\n    }\n\n    function invertPoint(matrix, arr) {\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i\n        var len = this._elem.hierarchy.length\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix)\n        }\n      }\n      return matrix.inversePoint(arr)\n    }\n\n    function fromComp(arr) {\n      var toWorldMat = new Matrix()\n      toWorldMat.reset()\n      this._elem.finalTransform.mProp.applyToMatrix(toWorldMat)\n      if (this._elem.hierarchy && this._elem.hierarchy.length) {\n        var i\n        var len = this._elem.hierarchy.length\n        for (i = 0; i < len; i += 1) {\n          this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat)\n        }\n        return toWorldMat.inversePoint(arr)\n      }\n      return toWorldMat.inversePoint(arr)\n    }\n\n    function sampleImage() {\n      return [1, 1, 1, 1]\n    }\n\n    return function (elem) {\n      var transformInterface\n\n      function _registerMaskInterface(maskManager) {\n        _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem)\n      }\n      function _registerEffectsInterface(effects) {\n        _thisLayerFunction.effect = effects\n      }\n\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case 'ADBE Root Vectors Group':\n          case 'Contents':\n          case 2:\n            return _thisLayerFunction.shapeInterface\n          case 1:\n          case 6:\n          case 'Transform':\n          case 'transform':\n          case 'ADBE Transform Group':\n            return transformInterface\n          case 4:\n          case 'ADBE Effect Parade':\n          case 'effects':\n          case 'Effects':\n            return _thisLayerFunction.effect\n          case 'ADBE Text Properties':\n            return _thisLayerFunction.textInterface\n          default:\n            return null\n        }\n      }\n      _thisLayerFunction.getMatrix = getMatrix\n      _thisLayerFunction.invertPoint = invertPoint\n      _thisLayerFunction.applyPoint = applyPoint\n      _thisLayerFunction.toWorld = toWorld\n      _thisLayerFunction.toWorldVec = toWorldVec\n      _thisLayerFunction.fromWorld = fromWorld\n      _thisLayerFunction.fromWorldVec = fromWorldVec\n      _thisLayerFunction.toComp = toWorld\n      _thisLayerFunction.fromComp = fromComp\n      _thisLayerFunction.sampleImage = sampleImage\n      _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem)\n      _thisLayerFunction._elem = elem\n      transformInterface = TransformExpressionInterface(elem.finalTransform.mProp)\n      var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint')\n      Object.defineProperties(_thisLayerFunction, {\n        hasParent: {\n          get: function () {\n            return elem.hierarchy.length\n          },\n        },\n        parent: {\n          get: function () {\n            return elem.hierarchy[0].layerInterface\n          },\n        },\n        rotation: getDescriptor(transformInterface, 'rotation'),\n        scale: getDescriptor(transformInterface, 'scale'),\n        position: getDescriptor(transformInterface, 'position'),\n        opacity: getDescriptor(transformInterface, 'opacity'),\n        anchorPoint: anchorPointDescriptor,\n        anchor_point: anchorPointDescriptor,\n        transform: {\n          get: function () {\n            return transformInterface\n          },\n        },\n        active: {\n          get: function () {\n            return elem.isInRange\n          },\n        },\n      })\n\n      _thisLayerFunction.startTime = elem.data.st\n      _thisLayerFunction.index = elem.data.ind\n      _thisLayerFunction.source = elem.data.refId\n      _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100\n      _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100\n      _thisLayerFunction.inPoint = elem.data.ip / elem.comp.globalData.frameRate\n      _thisLayerFunction.outPoint = elem.data.op / elem.comp.globalData.frameRate\n      _thisLayerFunction._name = elem.data.nm\n\n      _thisLayerFunction.registerMaskInterface = _registerMaskInterface\n      _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface\n      return _thisLayerFunction\n    }\n  })()\n\n  const propertyGroupFactory = (function () {\n    return function (interfaceFunction, parentPropertyGroup) {\n      return function (val) {\n        val = val === undefined ? 1 : val\n        if (val <= 0) {\n          return interfaceFunction\n        }\n        return parentPropertyGroup(val - 1)\n      }\n    }\n  })()\n\n  const PropertyInterface = (function () {\n    return function (propertyName, propertyGroup) {\n      var interfaceFunction = {\n        _name: propertyName,\n      }\n\n      function _propertyGroup(val) {\n        val = val === undefined ? 1 : val\n        if (val <= 0) {\n          return interfaceFunction\n        }\n        return propertyGroup(val - 1)\n      }\n\n      return _propertyGroup\n    }\n  })()\n\n  const EffectsExpressionInterface = (function () {\n    var ob = {\n      createEffectsInterface: createEffectsInterface,\n    }\n\n    function createEffectsInterface(elem, propertyGroup) {\n      if (elem.effectsManager) {\n        var effectElements = []\n        var effectsData = elem.data.ef\n        var i\n        var len = elem.effectsManager.effectElements.length\n        for (i = 0; i < len; i += 1) {\n          effectElements.push(\n            createGroupInterface(effectsData[i], elem.effectsManager.effectElements[i], propertyGroup, elem),\n          )\n        }\n\n        var effects = elem.data.ef || []\n        var groupInterface = function (name) {\n          i = 0\n          len = effects.length\n          while (i < len) {\n            if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n              return effectElements[i]\n            }\n            i += 1\n          }\n          return null\n        }\n        Object.defineProperty(groupInterface, 'numProperties', {\n          get: function () {\n            return effects.length\n          },\n        })\n        return groupInterface\n      }\n      return null\n    }\n\n    function createGroupInterface(data, elements, propertyGroup, elem) {\n      function groupInterface(name) {\n        var effects = data.ef\n        var i = 0\n        var len = effects.length\n        while (i < len) {\n          if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\n            if (effects[i].ty === 5) {\n              return effectElements[i]\n            }\n            return effectElements[i]()\n          }\n          i += 1\n        }\n        throw new Error()\n      }\n      var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup)\n\n      var effectElements = []\n      var i\n      var len = data.ef.length\n      for (i = 0; i < len; i += 1) {\n        if (data.ef[i].ty === 5) {\n          effectElements.push(\n            createGroupInterface(\n              data.ef[i],\n              elements.effectElements[i],\n              elements.effectElements[i].propertyGroup,\n              elem,\n            ),\n          )\n        } else {\n          effectElements.push(createValueInterface(elements.effectElements[i], data.ef[i].ty, elem, _propertyGroup))\n        }\n      }\n\n      if (data.mn === 'ADBE Color Control') {\n        Object.defineProperty(groupInterface, 'color', {\n          get: function () {\n            return effectElements[0]()\n          },\n        })\n      }\n      Object.defineProperties(groupInterface, {\n        numProperties: {\n          get: function () {\n            return data.np\n          },\n        },\n        _name: { value: data.nm },\n        propertyGroup: { value: _propertyGroup },\n      })\n      groupInterface.enabled = data.en !== 0\n      groupInterface.active = groupInterface.enabled\n      return groupInterface\n    }\n\n    function createValueInterface(element, type, elem, propertyGroup) {\n      var expressionProperty = ExpressionPropertyInterface(element.p)\n      function interfaceFunction() {\n        if (type === 10) {\n          return elem.comp.compInterface(element.p.v)\n        }\n        return expressionProperty()\n      }\n\n      if (element.p.setGroupProperty) {\n        element.p.setGroupProperty(PropertyInterface('', propertyGroup))\n      }\n\n      return interfaceFunction\n    }\n\n    return ob\n  })()\n\n  const CompExpressionInterface = (function () {\n    return function (comp) {\n      function _thisLayerFunction(name) {\n        var i = 0\n        var len = comp.layers.length\n        while (i < len) {\n          if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\n            return comp.elements[i].layerInterface\n          }\n          i += 1\n        }\n        return null\n        // return {active:false};\n      }\n      Object.defineProperty(_thisLayerFunction, '_name', { value: comp.data.nm })\n      _thisLayerFunction.layer = _thisLayerFunction\n      _thisLayerFunction.pixelAspect = 1\n      _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h\n      _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w\n      _thisLayerFunction.pixelAspect = 1\n      _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate\n      _thisLayerFunction.displayStartTime = 0\n      _thisLayerFunction.numLayers = comp.layers.length\n      return _thisLayerFunction\n    }\n  })()\n\n  const ShapePathInterface = (function () {\n    return function pathInterfaceFactory(shape, view, propertyGroup) {\n      var prop = view.sh\n\n      function interfaceFunction(val) {\n        if (\n          val === 'Shape' ||\n          val === 'shape' ||\n          val === 'Path' ||\n          val === 'path' ||\n          val === 'ADBE Vector Shape' ||\n          val === 2\n        ) {\n          return interfaceFunction.path\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      prop.setGroupProperty(PropertyInterface('Path', _propertyGroup))\n      Object.defineProperties(interfaceFunction, {\n        path: {\n          get: function () {\n            if (prop.k) {\n              prop.getValue()\n            }\n            return prop\n          },\n        },\n        shape: {\n          get: function () {\n            if (prop.k) {\n              prop.getValue()\n            }\n            return prop\n          },\n        },\n        _name: { value: shape.nm },\n        ix: { value: shape.ix },\n        propertyIndex: { value: shape.ix },\n        mn: { value: shape.mn },\n        propertyGroup: { value: propertyGroup },\n      })\n      return interfaceFunction\n    }\n  })()\n\n  const ShapeExpressionInterface = (function () {\n    function iterateElements(shapes, view, propertyGroup) {\n      var arr = []\n      var i\n      var len = shapes ? shapes.length : 0\n      for (i = 0; i < len; i += 1) {\n        if (shapes[i].ty === 'gr') {\n          arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'fl') {\n          arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'st') {\n          arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'tm') {\n          arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'tr') {\n          // arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\n        } else if (shapes[i].ty === 'el') {\n          arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'sr') {\n          arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'sh') {\n          arr.push(ShapePathInterface(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'rc') {\n          arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'rd') {\n          arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'rp') {\n          arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else if (shapes[i].ty === 'gf') {\n          arr.push(gradientFillInterfaceFactory(shapes[i], view[i], propertyGroup))\n        } else {\n          arr.push(defaultInterfaceFactory(shapes[i], view[i], propertyGroup))\n        }\n      }\n      return arr\n    }\n\n    function contentsInterfaceFactory(shape, view, propertyGroup) {\n      var interfaces\n      var interfaceFunction = function _interfaceFunction(value) {\n        var i = 0\n        var len = interfaces.length\n        while (i < len) {\n          if (\n            interfaces[i]._name === value ||\n            interfaces[i].mn === value ||\n            interfaces[i].propertyIndex === value ||\n            interfaces[i].ix === value ||\n            interfaces[i].ind === value\n          ) {\n            return interfaces[i]\n          }\n          i += 1\n        }\n        if (typeof value === 'number') {\n          return interfaces[value - 1]\n        }\n        return null\n      }\n\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup)\n      interfaceFunction.numProperties = interfaces.length\n      var transformInterface = transformInterfaceFactory(\n        shape.it[shape.it.length - 1],\n        view.it[view.it.length - 1],\n        interfaceFunction.propertyGroup,\n      )\n      interfaceFunction.transform = transformInterface\n      interfaceFunction.propertyIndex = shape.cix\n      interfaceFunction._name = shape.nm\n\n      return interfaceFunction\n    }\n\n    function groupInterfaceFactory(shape, view, propertyGroup) {\n      var interfaceFunction = function _interfaceFunction(value) {\n        switch (value) {\n          case 'ADBE Vectors Group':\n          case 'Contents':\n          case 2:\n            return interfaceFunction.content\n          // Not necessary for now. Keeping them here in case a new case appears\n          // case 'ADBE Vector Transform Group':\n          // case 3:\n          default:\n            return interfaceFunction.transform\n        }\n      }\n      interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var content = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup)\n      var transformInterface = transformInterfaceFactory(\n        shape.it[shape.it.length - 1],\n        view.it[view.it.length - 1],\n        interfaceFunction.propertyGroup,\n      )\n      interfaceFunction.content = content\n      interfaceFunction.transform = transformInterface\n      Object.defineProperty(interfaceFunction, '_name', {\n        get: function () {\n          return shape.nm\n        },\n      })\n      // interfaceFunction.content = interfaceFunction;\n      interfaceFunction.numProperties = shape.np\n      interfaceFunction.propertyIndex = shape.ix\n      interfaceFunction.nm = shape.nm\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function fillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color\n        }\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity\n        }\n        return null\n      }\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c),\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o),\n        },\n        _name: { value: shape.nm },\n        mn: { value: shape.mn },\n      })\n\n      view.c.setGroupProperty(PropertyInterface('Color', propertyGroup))\n      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup))\n      return interfaceFunction\n    }\n\n    function gradientFillInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === 'Start Point' || val === 'start point') {\n          return interfaceFunction.startPoint\n        }\n        if (val === 'End Point' || val === 'end point') {\n          return interfaceFunction.endPoint\n        }\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity\n        }\n        return null\n      }\n      Object.defineProperties(interfaceFunction, {\n        startPoint: {\n          get: ExpressionPropertyInterface(view.s),\n        },\n        endPoint: {\n          get: ExpressionPropertyInterface(view.e),\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o),\n        },\n        type: {\n          get: function () {\n            return 'a'\n          },\n        },\n        _name: { value: shape.nm },\n        mn: { value: shape.mn },\n      })\n\n      view.s.setGroupProperty(PropertyInterface('Start Point', propertyGroup))\n      view.e.setGroupProperty(PropertyInterface('End Point', propertyGroup))\n      view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup))\n      return interfaceFunction\n    }\n    function defaultInterfaceFactory() {\n      function interfaceFunction() {\n        return null\n      }\n      return interfaceFunction\n    }\n\n    function strokeInterfaceFactory(shape, view, propertyGroup) {\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup)\n      function addPropertyToDashOb(i) {\n        Object.defineProperty(dashOb, shape.d[i].nm, {\n          get: ExpressionPropertyInterface(view.d.dataProps[i].p),\n        })\n      }\n      var i\n      var len = shape.d ? shape.d.length : 0\n      var dashOb = {}\n      for (i = 0; i < len; i += 1) {\n        addPropertyToDashOb(i)\n        view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup)\n      }\n\n      function interfaceFunction(val) {\n        if (val === 'Color' || val === 'color') {\n          return interfaceFunction.color\n        }\n        if (val === 'Opacity' || val === 'opacity') {\n          return interfaceFunction.opacity\n        }\n        if (val === 'Stroke Width' || val === 'stroke width') {\n          return interfaceFunction.strokeWidth\n        }\n        return null\n      }\n      Object.defineProperties(interfaceFunction, {\n        color: {\n          get: ExpressionPropertyInterface(view.c),\n        },\n        opacity: {\n          get: ExpressionPropertyInterface(view.o),\n        },\n        strokeWidth: {\n          get: ExpressionPropertyInterface(view.w),\n        },\n        dash: {\n          get: function () {\n            return dashOb\n          },\n        },\n        _name: { value: shape.nm },\n        mn: { value: shape.mn },\n      })\n\n      view.c.setGroupProperty(PropertyInterface('Color', _propertyGroup))\n      view.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup))\n      view.w.setGroupProperty(PropertyInterface('Stroke Width', _propertyGroup))\n      return interfaceFunction\n    }\n\n    function trimInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(val) {\n        if (val === shape.e.ix || val === 'End' || val === 'end') {\n          return interfaceFunction.end\n        }\n        if (val === shape.s.ix) {\n          return interfaceFunction.start\n        }\n        if (val === shape.o.ix) {\n          return interfaceFunction.offset\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      interfaceFunction.propertyIndex = shape.ix\n\n      view.s.setGroupProperty(PropertyInterface('Start', _propertyGroup))\n      view.e.setGroupProperty(PropertyInterface('End', _propertyGroup))\n      view.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup))\n      interfaceFunction.propertyIndex = shape.ix\n      interfaceFunction.propertyGroup = propertyGroup\n\n      Object.defineProperties(interfaceFunction, {\n        start: {\n          get: ExpressionPropertyInterface(view.s),\n        },\n        end: {\n          get: ExpressionPropertyInterface(view.e),\n        },\n        offset: {\n          get: ExpressionPropertyInterface(view.o),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function transformInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.a.ix === value || value === 'Anchor Point') {\n          return interfaceFunction.anchorPoint\n        }\n        if (shape.o.ix === value || value === 'Opacity') {\n          return interfaceFunction.opacity\n        }\n        if (shape.p.ix === value || value === 'Position') {\n          return interfaceFunction.position\n        }\n        if (shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation') {\n          return interfaceFunction.rotation\n        }\n        if (shape.s.ix === value || value === 'Scale') {\n          return interfaceFunction.scale\n        }\n        if ((shape.sk && shape.sk.ix === value) || value === 'Skew') {\n          return interfaceFunction.skew\n        }\n        if ((shape.sa && shape.sa.ix === value) || value === 'Skew Axis') {\n          return interfaceFunction.skewAxis\n        }\n        return null\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      view.transform.mProps.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup))\n      view.transform.mProps.p.setGroupProperty(PropertyInterface('Position', _propertyGroup))\n      view.transform.mProps.a.setGroupProperty(PropertyInterface('Anchor Point', _propertyGroup))\n      view.transform.mProps.s.setGroupProperty(PropertyInterface('Scale', _propertyGroup))\n      view.transform.mProps.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup))\n      if (view.transform.mProps.sk) {\n        view.transform.mProps.sk.setGroupProperty(PropertyInterface('Skew', _propertyGroup))\n        view.transform.mProps.sa.setGroupProperty(PropertyInterface('Skew Angle', _propertyGroup))\n      }\n      view.transform.op.setGroupProperty(PropertyInterface('Opacity', _propertyGroup))\n      Object.defineProperties(interfaceFunction, {\n        opacity: {\n          get: ExpressionPropertyInterface(view.transform.mProps.o),\n        },\n        position: {\n          get: ExpressionPropertyInterface(view.transform.mProps.p),\n        },\n        anchorPoint: {\n          get: ExpressionPropertyInterface(view.transform.mProps.a),\n        },\n        scale: {\n          get: ExpressionPropertyInterface(view.transform.mProps.s),\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(view.transform.mProps.r),\n        },\n        skew: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sk),\n        },\n        skewAxis: {\n          get: ExpressionPropertyInterface(view.transform.mProps.sa),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.ty = 'tr'\n      interfaceFunction.mn = shape.mn\n      interfaceFunction.propertyGroup = propertyGroup\n      return interfaceFunction\n    }\n\n    function ellipseInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position\n        }\n        if (shape.s.ix === value) {\n          return interfaceFunction.size\n        }\n        return null\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      interfaceFunction.propertyIndex = shape.ix\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh\n      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup))\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup))\n\n      Object.defineProperties(interfaceFunction, {\n        size: {\n          get: ExpressionPropertyInterface(prop.s),\n        },\n        position: {\n          get: ExpressionPropertyInterface(prop.p),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function starInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position\n        }\n        if (shape.r.ix === value) {\n          return interfaceFunction.rotation\n        }\n        if (shape.pt.ix === value) {\n          return interfaceFunction.points\n        }\n        if (shape.or.ix === value || value === 'ADBE Vector Star Outer Radius') {\n          return interfaceFunction.outerRadius\n        }\n        if (shape.os.ix === value) {\n          return interfaceFunction.outerRoundness\n        }\n        if (shape.ir && (shape.ir.ix === value || value === 'ADBE Vector Star Inner Radius')) {\n          return interfaceFunction.innerRadius\n        }\n        if (shape.is && shape.is.ix === value) {\n          return interfaceFunction.innerRoundness\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh\n      interfaceFunction.propertyIndex = shape.ix\n      prop.or.setGroupProperty(PropertyInterface('Outer Radius', _propertyGroup))\n      prop.os.setGroupProperty(PropertyInterface('Outer Roundness', _propertyGroup))\n      prop.pt.setGroupProperty(PropertyInterface('Points', _propertyGroup))\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup))\n      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup))\n      if (shape.ir) {\n        prop.ir.setGroupProperty(PropertyInterface('Inner Radius', _propertyGroup))\n        prop.is.setGroupProperty(PropertyInterface('Inner Roundness', _propertyGroup))\n      }\n\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p),\n        },\n        rotation: {\n          get: ExpressionPropertyInterface(prop.r),\n        },\n        points: {\n          get: ExpressionPropertyInterface(prop.pt),\n        },\n        outerRadius: {\n          get: ExpressionPropertyInterface(prop.or),\n        },\n        outerRoundness: {\n          get: ExpressionPropertyInterface(prop.os),\n        },\n        innerRadius: {\n          get: ExpressionPropertyInterface(prop.ir),\n        },\n        innerRoundness: {\n          get: ExpressionPropertyInterface(prop.is),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function rectInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.p.ix === value) {\n          return interfaceFunction.position\n        }\n        if (shape.r.ix === value) {\n          return interfaceFunction.roundness\n        }\n        if (shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size') {\n          return interfaceFunction.size\n        }\n        return null\n      }\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n\n      var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh\n      interfaceFunction.propertyIndex = shape.ix\n      prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup))\n      prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup))\n      prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup))\n\n      Object.defineProperties(interfaceFunction, {\n        position: {\n          get: ExpressionPropertyInterface(prop.p),\n        },\n        roundness: {\n          get: ExpressionPropertyInterface(prop.r),\n        },\n        size: {\n          get: ExpressionPropertyInterface(prop.s),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function roundedInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.r.ix === value || value === 'Round Corners 1') {\n          return interfaceFunction.radius\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var prop = view\n      interfaceFunction.propertyIndex = shape.ix\n      prop.rd.setGroupProperty(PropertyInterface('Radius', _propertyGroup))\n\n      Object.defineProperties(interfaceFunction, {\n        radius: {\n          get: ExpressionPropertyInterface(prop.rd),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    function repeaterInterfaceFactory(shape, view, propertyGroup) {\n      function interfaceFunction(value) {\n        if (shape.c.ix === value || value === 'Copies') {\n          return interfaceFunction.copies\n        }\n        if (shape.o.ix === value || value === 'Offset') {\n          return interfaceFunction.offset\n        }\n        return null\n      }\n\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup)\n      var prop = view\n      interfaceFunction.propertyIndex = shape.ix\n      prop.c.setGroupProperty(PropertyInterface('Copies', _propertyGroup))\n      prop.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup))\n      Object.defineProperties(interfaceFunction, {\n        copies: {\n          get: ExpressionPropertyInterface(prop.c),\n        },\n        offset: {\n          get: ExpressionPropertyInterface(prop.o),\n        },\n        _name: { value: shape.nm },\n      })\n      interfaceFunction.mn = shape.mn\n      return interfaceFunction\n    }\n\n    return function (shapes, view, propertyGroup) {\n      var interfaces\n      function _interfaceFunction(value) {\n        if (typeof value === 'number') {\n          value = value === undefined ? 1 : value\n          if (value === 0) {\n            return propertyGroup\n          }\n          return interfaces[value - 1]\n        }\n        var i = 0\n        var len = interfaces.length\n        while (i < len) {\n          if (interfaces[i]._name === value) {\n            return interfaces[i]\n          }\n          i += 1\n        }\n        return null\n      }\n      function parentGroupWrapper() {\n        return propertyGroup\n      }\n      _interfaceFunction.propertyGroup = propertyGroupFactory(_interfaceFunction, parentGroupWrapper)\n      interfaces = iterateElements(shapes, view, _interfaceFunction.propertyGroup)\n      _interfaceFunction.numProperties = interfaces.length\n      _interfaceFunction._name = 'Contents'\n      return _interfaceFunction\n    }\n  })()\n\n  const TextExpressionInterface = (function () {\n    return function (elem) {\n      var _prevValue\n      var _sourceText\n      function _thisLayerFunction(name) {\n        switch (name) {\n          case 'ADBE Text Document':\n            return _thisLayerFunction.sourceText\n          default:\n            return null\n        }\n      }\n      Object.defineProperty(_thisLayerFunction, 'sourceText', {\n        get: function () {\n          elem.textProperty.getValue()\n          var stringValue = elem.textProperty.currentData.t\n          if (stringValue !== _prevValue) {\n            elem.textProperty.currentData.t = _prevValue\n            _sourceText = new String(stringValue) // eslint-disable-line no-new-wrappers\n            _sourceText.value = stringValue || new String(stringValue) // eslint-disable-line no-new-wrappers\n          }\n          return _sourceText\n        },\n      })\n      return _thisLayerFunction\n    }\n  })()\n\n  const getBlendMode = (function () {\n    var blendModeEnums = {\n      0: 'source-over',\n      1: 'multiply',\n      2: 'screen',\n      3: 'overlay',\n      4: 'darken',\n      5: 'lighten',\n      6: 'color-dodge',\n      7: 'color-burn',\n      8: 'hard-light',\n      9: 'soft-light',\n      10: 'difference',\n      11: 'exclusion',\n      12: 'hue',\n      13: 'saturation',\n      14: 'color',\n      15: 'luminosity',\n    }\n\n    return function (mode) {\n      return blendModeEnums[mode] || ''\n    }\n  })()\n\n  function SliderEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function AngleEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function ColorEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container)\n  }\n  function PointEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container)\n  }\n  function LayerIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function MaskIndexEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function CheckboxEffect(data, elem, container) {\n    this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container)\n  }\n  function NoValueEffect() {\n    this.p = {}\n  }\n\n  function EffectsManager(data, element) {\n    var effects = data.ef || []\n    this.effectElements = []\n    var i\n    var len = effects.length\n    var effectItem\n    for (i = 0; i < len; i += 1) {\n      effectItem = new GroupEffect(effects[i], element)\n      this.effectElements.push(effectItem)\n    }\n  }\n\n  function GroupEffect(data, element) {\n    this.init(data, element)\n  }\n\n  extendPrototype([DynamicPropertyContainer], GroupEffect)\n\n  GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties\n\n  GroupEffect.prototype.init = function (data, element) {\n    this.data = data\n    this.effectElements = []\n    this.initDynamicPropertyContainer(element)\n    var i\n    var len = this.data.ef.length\n    var eff\n    var effects = this.data.ef\n    for (i = 0; i < len; i += 1) {\n      eff = null\n      switch (effects[i].ty) {\n        case 0:\n          eff = new SliderEffect(effects[i], element, this)\n          break\n        case 1:\n          eff = new AngleEffect(effects[i], element, this)\n          break\n        case 2:\n          eff = new ColorEffect(effects[i], element, this)\n          break\n        case 3:\n          eff = new PointEffect(effects[i], element, this)\n          break\n        case 4:\n        case 7:\n          eff = new CheckboxEffect(effects[i], element, this)\n          break\n        case 10:\n          eff = new LayerIndexEffect(effects[i], element, this)\n          break\n        case 11:\n          eff = new MaskIndexEffect(effects[i], element, this)\n          break\n        case 5:\n          eff = new EffectsManager(effects[i], element, this)\n          break\n        // case 6:\n        default:\n          eff = new NoValueEffect(effects[i], element, this)\n          break\n      }\n      if (eff) {\n        this.effectElements.push(eff)\n      }\n    }\n  }\n\n  function BaseElement() {}\n\n  BaseElement.prototype = {\n    checkMasks: function () {\n      if (!this.data.hasMask) {\n        return false\n      }\n      var i = 0\n      var len = this.data.masksProperties.length\n      while (i < len) {\n        if (this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false) {\n          return true\n        }\n        i += 1\n      }\n      return false\n    },\n    initExpressions: function () {\n      this.layerInterface = LayerExpressionInterface(this)\n      if (this.data.hasMask && this.maskManager) {\n        this.layerInterface.registerMaskInterface(this.maskManager)\n      }\n      var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface)\n      this.layerInterface.registerEffectsInterface(effectsInterface)\n\n      if (this.data.ty === 0 || this.data.xt) {\n        this.compInterface = CompExpressionInterface(this)\n      } else if (this.data.ty === 4) {\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(\n          this.shapesData,\n          this.itemsData,\n          this.layerInterface,\n        )\n        this.layerInterface.content = this.layerInterface.shapeInterface\n      } else if (this.data.ty === 5) {\n        this.layerInterface.textInterface = TextExpressionInterface(this)\n        this.layerInterface.text = this.layerInterface.textInterface\n      }\n    },\n    setBlendMode: function () {\n      var blendModeValue = getBlendMode(this.data.bm)\n      var elem = this.baseElement || this.layerElement\n\n      elem.style['mix-blend-mode'] = blendModeValue\n    },\n    initBaseData: function (data, globalData, comp) {\n      this.globalData = globalData\n      this.comp = comp\n      this.data = data\n      this.layerId = createElementID()\n\n      // Stretch factor for old animations missing this property.\n      if (!this.data.sr) {\n        this.data.sr = 1\n      }\n      // effects manager\n      this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties)\n    },\n    getType: function () {\n      return this.type\n    },\n    sourceRectAtTime: function () {},\n  }\n\n  /**\n   * @file\n   * Handles element's layer frame update.\n   * Checks layer in point and out point\n   *\n   */\n\n  function FrameElement() {}\n\n  FrameElement.prototype = {\n    /**\n     * @function\n     * Initializes frame related properties.\n     *\n     */\n    initFrame: function () {\n      // set to true when inpoint is rendered\n      this._isFirstFrame = false\n      // list of animated properties\n      this.dynamicProperties = []\n      // If layer has been modified in current tick this will be true\n      this._mdf = false\n    },\n    /**\n     * @function\n     * Calculates all dynamic values\n     *\n     * @param {number} num\n     * current frame number in Layer's time\n     * @param {boolean} isVisible\n     * if layers is currently in range\n     *\n     */\n    prepareProperties: function (num, isVisible) {\n      var i\n      var len = this.dynamicProperties.length\n      for (i = 0; i < len; i += 1) {\n        if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\n          this.dynamicProperties[i].getValue()\n          if (this.dynamicProperties[i]._mdf) {\n            this.globalData._mdf = true\n            this._mdf = true\n          }\n        }\n      }\n    },\n    addDynamicProperty: function (prop) {\n      if (this.dynamicProperties.indexOf(prop) === -1) {\n        this.dynamicProperties.push(prop)\n      }\n    },\n  }\n\n  const FootageInterface = (function () {\n    var outlineInterfaceFactory = function (elem) {\n      var currentPropertyName = ''\n      var currentProperty = elem.getFootageData()\n      function init() {\n        currentPropertyName = ''\n        currentProperty = elem.getFootageData()\n        return searchProperty\n      }\n      function searchProperty(value) {\n        if (currentProperty[value]) {\n          currentPropertyName = value\n          currentProperty = currentProperty[value]\n          if (typeof currentProperty === 'object') {\n            return searchProperty\n          }\n          return currentProperty\n        }\n        var propertyNameIndex = value.indexOf(currentPropertyName)\n        if (propertyNameIndex !== -1) {\n          var index = parseInt(value.substr(propertyNameIndex + currentPropertyName.length), 10)\n          currentProperty = currentProperty[index]\n          if (typeof currentProperty === 'object') {\n            return searchProperty\n          }\n          return currentProperty\n        }\n        return ''\n      }\n      return init\n    }\n\n    var dataInterfaceFactory = function (elem) {\n      function interfaceFunction(value) {\n        if (value === 'Outline') {\n          return interfaceFunction.outlineInterface()\n        }\n        return null\n      }\n\n      interfaceFunction._name = 'Outline'\n      interfaceFunction.outlineInterface = outlineInterfaceFactory(elem)\n      return interfaceFunction\n    }\n\n    return function (elem) {\n      function _interfaceFunction(value) {\n        if (value === 'Data') {\n          return _interfaceFunction.dataInterface\n        }\n        return null\n      }\n\n      _interfaceFunction._name = 'Data'\n      _interfaceFunction.dataInterface = dataInterfaceFactory(elem)\n      return _interfaceFunction\n    }\n  })()\n\n  function FootageElement(data, globalData, comp) {\n    this.initFrame()\n    this.initRenderable()\n    this.assetData = globalData.getAssetData(data.refId)\n    this.footageData = globalData.imageLoader.getAsset(this.assetData)\n    this.initBaseData(data, globalData, comp)\n  }\n\n  FootageElement.prototype.prepareFrame = function () {}\n\n  extendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement)\n\n  FootageElement.prototype.getBaseElement = function () {\n    return null\n  }\n\n  FootageElement.prototype.renderFrame = function () {}\n\n  FootageElement.prototype.destroy = function () {}\n\n  FootageElement.prototype.initExpressions = function () {\n    this.layerInterface = FootageInterface(this)\n  }\n\n  FootageElement.prototype.getFootageData = function () {\n    return this.footageData\n  }\n\n  function AudioElement(data, globalData, comp) {\n    this.initFrame()\n    this.initRenderable()\n    this.assetData = globalData.getAssetData(data.refId)\n    this.initBaseData(data, globalData, comp)\n    this._isPlaying = false\n    this._canPlay = false\n    var assetPath = this.globalData.getAssetsPath(this.assetData)\n    this.audio = this.globalData.audioController.createAudio(assetPath)\n    this._currentTime = 0\n    this.globalData.audioController.addAudio(this)\n    this._volumeMultiplier = 1\n    this._volume = 1\n    this._previousVolume = null\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true }\n    this.lv = PropertyFactory.getProp(this, data.au && data.au.lv ? data.au.lv : { k: [100] }, 1, 0.01, this)\n  }\n\n  AudioElement.prototype.prepareFrame = function (num) {\n    this.prepareRenderableFrame(num, true)\n    this.prepareProperties(num, true)\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v\n      this._currentTime = timeRemapped\n    } else {\n      this._currentTime = num / this.data.sr\n    }\n    this._volume = this.lv.v[0]\n    var totalVolume = this._volume * this._volumeMultiplier\n    if (this._previousVolume !== totalVolume) {\n      this._previousVolume = totalVolume\n      this.audio.volume(totalVolume)\n    }\n  }\n\n  extendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement)\n\n  AudioElement.prototype.renderFrame = function () {\n    if (this.isInRange && this._canPlay) {\n      if (!this._isPlaying) {\n        this.audio.play()\n        this.audio.seek(this._currentTime / this.globalData.frameRate)\n        this._isPlaying = true\n      } else if (\n        !this.audio.playing() ||\n        Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1\n      ) {\n        this.audio.seek(this._currentTime / this.globalData.frameRate)\n      }\n    }\n  }\n\n  AudioElement.prototype.show = function () {\n    // this.audio.play()\n  }\n\n  AudioElement.prototype.hide = function () {\n    this.audio.pause()\n    this._isPlaying = false\n  }\n\n  AudioElement.prototype.pause = function () {\n    this.audio.pause()\n    this._isPlaying = false\n    this._canPlay = false\n  }\n\n  AudioElement.prototype.resume = function () {\n    this._canPlay = true\n  }\n\n  AudioElement.prototype.setRate = function (rateValue) {\n    this.audio.rate(rateValue)\n  }\n\n  AudioElement.prototype.volume = function (volumeValue) {\n    this._volumeMultiplier = volumeValue\n    this._previousVolume = volumeValue * this._volume\n    this.audio.volume(this._previousVolume)\n  }\n\n  AudioElement.prototype.getBaseElement = function () {\n    return null\n  }\n\n  AudioElement.prototype.destroy = function () {}\n\n  AudioElement.prototype.sourceRectAtTime = function () {}\n\n  AudioElement.prototype.initExpressions = function () {}\n\n  function BaseRenderer() {}\n  BaseRenderer.prototype.checkLayers = function (num) {\n    var i\n    var len = this.layers.length\n    var data\n    this.completeLayers = true\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (!this.elements[i]) {\n        data = this.layers[i]\n        if (data.ip - data.st <= num - this.layers[i].st && data.op - data.st > num - this.layers[i].st) {\n          this.buildItem(i)\n        }\n      }\n      this.completeLayers = this.elements[i] ? this.completeLayers : false\n    }\n    this.checkPendingElements()\n  }\n\n  BaseRenderer.prototype.createItem = function (layer) {\n    switch (layer.ty) {\n      case 2:\n        return this.createImage(layer)\n      case 0:\n        return this.createComp(layer)\n      case 1:\n        return this.createSolid(layer)\n      case 3:\n        return this.createNull(layer)\n      case 4:\n        return this.createShape(layer)\n      case 5:\n        return this.createText(layer)\n      case 6:\n        return this.createAudio(layer)\n      case 13:\n        return this.createCamera(layer)\n      case 15:\n        return this.createFootage(layer)\n      default:\n        return this.createNull(layer)\n    }\n  }\n\n  BaseRenderer.prototype.createCamera = function () {\n    throw new Error(\"You're using a 3d camera. Try the html renderer.\")\n  }\n\n  BaseRenderer.prototype.createAudio = function (data) {\n    return new AudioElement(data, this.globalData, this)\n  }\n\n  BaseRenderer.prototype.createFootage = function (data) {\n    return new FootageElement(data, this.globalData, this)\n  }\n\n  BaseRenderer.prototype.buildAllItems = function () {\n    var i\n    var len = this.layers.length\n    for (i = 0; i < len; i += 1) {\n      this.buildItem(i)\n    }\n    this.checkPendingElements()\n  }\n\n  BaseRenderer.prototype.includeLayers = function (newLayers) {\n    this.completeLayers = false\n    var i\n    var len = newLayers.length\n    var j\n    var jLen = this.layers.length\n    for (i = 0; i < len; i += 1) {\n      j = 0\n      while (j < jLen) {\n        if (this.layers[j].id === newLayers[i].id) {\n          this.layers[j] = newLayers[i]\n          break\n        }\n        j += 1\n      }\n    }\n  }\n\n  BaseRenderer.prototype.setProjectInterface = function (pInterface) {\n    this.globalData.projectInterface = pInterface\n  }\n\n  BaseRenderer.prototype.initItems = function () {\n    if (!this.globalData.progressiveLoad) {\n      this.buildAllItems()\n    }\n  }\n  BaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\n    var elements = this.elements\n    var layers = this.layers\n    var i = 0\n    var len = layers.length\n    while (i < len) {\n      if (layers[i].ind == parentName) {\n        // eslint-disable-line eqeqeq\n        if (!elements[i] || elements[i] === true) {\n          this.buildItem(i)\n          this.addPendingElement(element)\n        } else {\n          hierarchy.push(elements[i])\n          elements[i].setAsParent()\n          if (layers[i].parent !== undefined) {\n            this.buildElementParenting(element, layers[i].parent, hierarchy)\n          } else {\n            element.setHierarchy(hierarchy)\n          }\n        }\n      }\n      i += 1\n    }\n  }\n\n  BaseRenderer.prototype.addPendingElement = function (element) {\n    this.pendingElements.push(element)\n  }\n\n  BaseRenderer.prototype.searchExtraCompositions = function (assets) {\n    var i\n    var len = assets.length\n    for (i = 0; i < len; i += 1) {\n      if (assets[i].xt) {\n        var comp = this.createComp(assets[i])\n        comp.initExpressions()\n        this.globalData.projectInterface.registerComposition(comp)\n      }\n    }\n  }\n\n  BaseRenderer.prototype.getElementByPath = function (path) {\n    var pathValue = path.shift()\n    var element\n    if (typeof pathValue === 'number') {\n      element = this.elements[pathValue]\n    } else {\n      var i\n      var len = this.elements.length\n      for (i = 0; i < len; i += 1) {\n        if (this.elements[i].data.nm === pathValue) {\n          element = this.elements[i]\n          break\n        }\n      }\n    }\n    if (path.length === 0) {\n      return element\n    }\n    return element.getElementByPath(path)\n  }\n\n  BaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {\n    this.globalData.fontManager = new FontManager()\n    this.globalData.fontManager.addChars(animData.chars)\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer)\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem)\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem)\n    this.globalData.imageLoader = this.animationItem.imagePreloader\n    this.globalData.audioController = this.animationItem.audioController\n    this.globalData.frameId = 0\n    this.globalData.frameRate = animData.fr\n    this.globalData.nm = animData.nm\n    this.globalData.compSize = {\n      w: animData.w,\n      h: animData.h,\n    }\n  }\n\n  function TransformElement() {}\n\n  TransformElement.prototype = {\n    initTransform: function () {\n      this.finalTransform = {\n        mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : { o: 0 },\n        _matMdf: false,\n        _opMdf: false,\n        mat: new Matrix(),\n      }\n      if (this.data.ao) {\n        this.finalTransform.mProp.autoOriented = true\n      }\n\n      // TODO: check TYPE 11: Guided elements\n      if (this.data.ty !== 11) {\n        // this.createElements();\n      }\n    },\n    renderTransform: function () {\n      this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame\n      this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame\n\n      if (this.hierarchy) {\n        var mat\n        var finalMat = this.finalTransform.mat\n        var i = 0\n        var len = this.hierarchy.length\n        // Checking if any of the transformation matrices in the hierarchy chain has changed.\n        if (!this.finalTransform._matMdf) {\n          while (i < len) {\n            if (this.hierarchy[i].finalTransform.mProp._mdf) {\n              this.finalTransform._matMdf = true\n              break\n            }\n            i += 1\n          }\n        }\n\n        if (this.finalTransform._matMdf) {\n          mat = this.finalTransform.mProp.v.props\n          finalMat.cloneFromProps(mat)\n          for (i = 0; i < len; i += 1) {\n            mat = this.hierarchy[i].finalTransform.mProp.v.props\n            finalMat.transform(\n              mat[0],\n              mat[1],\n              mat[2],\n              mat[3],\n              mat[4],\n              mat[5],\n              mat[6],\n              mat[7],\n              mat[8],\n              mat[9],\n              mat[10],\n              mat[11],\n              mat[12],\n              mat[13],\n              mat[14],\n              mat[15],\n            )\n          }\n        }\n      }\n    },\n    globalToLocal: function (pt) {\n      var transforms = []\n      transforms.push(this.finalTransform)\n      var flag = true\n      var comp = this.comp\n      while (flag) {\n        if (comp.finalTransform) {\n          if (comp.data.hasMask) {\n            transforms.splice(0, 0, comp.finalTransform)\n          }\n          comp = comp.comp\n        } else {\n          flag = false\n        }\n      }\n      var i\n      var len = transforms.length\n      var ptNew\n      for (i = 0; i < len; i += 1) {\n        ptNew = transforms[i].mat.applyToPointArray(0, 0, 0)\n        // ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\n        pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0]\n      }\n      return pt\n    },\n    mHelper: new Matrix(),\n  }\n\n  function MaskElement(data, element, globalData) {\n    this.data = data\n    this.element = element\n    this.globalData = globalData\n    this.storedData = []\n    this.masksProperties = this.data.masksProperties || []\n    this.maskElement = null\n    var defs = this.globalData.defs\n    var i\n    var len = this.masksProperties ? this.masksProperties.length : 0\n    this.viewData = createSizedArray(len)\n    this.solidPath = ''\n\n    var path\n    var properties = this.masksProperties\n    var count = 0\n    var currentMasks = []\n    var j\n    var jLen\n    var layerId = createElementID()\n    var rect\n    var expansor\n    var feMorph\n    var x\n    var maskType = 'clipPath'\n    var maskRef = 'clip-path'\n    for (i = 0; i < len; i += 1) {\n      if (\n        (properties[i].mode !== 'a' && properties[i].mode !== 'n') ||\n        properties[i].inv ||\n        properties[i].o.k !== 100 ||\n        properties[i].o.x\n      ) {\n        maskType = 'mask'\n        maskRef = 'mask'\n      }\n\n      if ((properties[i].mode === 's' || properties[i].mode === 'i') && count === 0) {\n        rect = createNS('rect')\n        rect.setAttribute('fill', '#ffffff')\n        rect.setAttribute('width', this.element.comp.data.w || 0)\n        rect.setAttribute('height', this.element.comp.data.h || 0)\n        currentMasks.push(rect)\n      } else {\n        rect = null\n      }\n\n      path = createNS('path')\n      if (properties[i].mode === 'n') {\n        // TODO move this to a factory or to a constructor\n        this.viewData[i] = {\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          elem: path,\n          lastPath: '',\n        }\n        defs.appendChild(path)\n      } else {\n        count += 1\n\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000' : '#ffffff')\n        path.setAttribute('clip-rule', 'nonzero')\n        var filterID\n\n        if (properties[i].x.k !== 0) {\n          maskType = 'mask'\n          maskRef = 'mask'\n          x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element)\n          filterID = createElementID()\n          expansor = createNS('filter')\n          expansor.setAttribute('id', filterID)\n          feMorph = createNS('feMorphology')\n          feMorph.setAttribute('operator', 'erode')\n          feMorph.setAttribute('in', 'SourceGraphic')\n          feMorph.setAttribute('radius', '0')\n          expansor.appendChild(feMorph)\n          defs.appendChild(expansor)\n          path.setAttribute('stroke', properties[i].mode === 's' ? '#000000' : '#ffffff')\n        } else {\n          feMorph = null\n          x = null\n        }\n\n        // TODO move this to a factory or to a constructor\n        this.storedData[i] = {\n          elem: path,\n          x: x,\n          expan: feMorph,\n          lastPath: '',\n          lastOperator: '',\n          filterId: filterID,\n          lastRadius: 0,\n        }\n        if (properties[i].mode === 'i') {\n          jLen = currentMasks.length\n          var g = createNS('g')\n          for (j = 0; j < jLen; j += 1) {\n            g.appendChild(currentMasks[j])\n          }\n          var mask = createNS('mask')\n          mask.setAttribute('mask-type', 'alpha')\n          mask.setAttribute('id', layerId + '_' + count)\n          mask.appendChild(path)\n          defs.appendChild(mask)\n          g.setAttribute('mask', 'url(' + getLocationHref() + '#' + layerId + '_' + count + ')')\n\n          currentMasks.length = 0\n          currentMasks.push(g)\n        } else {\n          currentMasks.push(path)\n        }\n        if (properties[i].inv && !this.solidPath) {\n          this.solidPath = this.createLayerSolidPath()\n        }\n        // TODO move this to a factory or to a constructor\n        this.viewData[i] = {\n          elem: path,\n          lastPath: '',\n          op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\n          prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\n          invRect: rect,\n        }\n        if (!this.viewData[i].prop.k) {\n          this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i])\n        }\n      }\n    }\n\n    this.maskElement = createNS(maskType)\n\n    len = currentMasks.length\n    for (i = 0; i < len; i += 1) {\n      this.maskElement.appendChild(currentMasks[i])\n    }\n\n    if (count > 0) {\n      this.maskElement.setAttribute('id', layerId)\n      this.element.maskedElement.setAttribute(maskRef, 'url(' + getLocationHref() + '#' + layerId + ')')\n      defs.appendChild(this.maskElement)\n    }\n    if (this.viewData.length) {\n      this.element.addRenderableComponent(this)\n    }\n  }\n\n  MaskElement.prototype.getMaskProperty = function (pos) {\n    return this.viewData[pos].prop\n  }\n\n  MaskElement.prototype.renderFrame = function (isFirstFrame) {\n    var finalMat = this.element.finalTransform.mat\n    var i\n    var len = this.masksProperties.length\n    for (i = 0; i < len; i += 1) {\n      if (this.viewData[i].prop._mdf || isFirstFrame) {\n        this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i])\n      }\n      if (this.viewData[i].op._mdf || isFirstFrame) {\n        this.viewData[i].elem.setAttribute('fill-opacity', this.viewData[i].op.v)\n      }\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {\n          this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS())\n        }\n        if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {\n          var feMorph = this.storedData[i].expan\n          if (this.storedData[i].x.v < 0) {\n            if (this.storedData[i].lastOperator !== 'erode') {\n              this.storedData[i].lastOperator = 'erode'\n              this.storedData[i].elem.setAttribute(\n                'filter',\n                'url(' + getLocationHref() + '#' + this.storedData[i].filterId + ')',\n              )\n            }\n            feMorph.setAttribute('radius', -this.storedData[i].x.v)\n          } else {\n            if (this.storedData[i].lastOperator !== 'dilate') {\n              this.storedData[i].lastOperator = 'dilate'\n              this.storedData[i].elem.setAttribute('filter', null)\n            }\n            this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v * 2)\n          }\n        }\n      }\n    }\n  }\n\n  MaskElement.prototype.getMaskelement = function () {\n    return this.maskElement\n  }\n\n  MaskElement.prototype.createLayerSolidPath = function () {\n    var path = 'M0,0 '\n    path += ' h' + this.globalData.compSize.w\n    path += ' v' + this.globalData.compSize.h\n    path += ' h-' + this.globalData.compSize.w\n    path += ' v-' + this.globalData.compSize.h + ' '\n    return path\n  }\n\n  MaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\n    var pathString = ' M' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1]\n    var i\n    var len\n    len = pathNodes._length\n    for (i = 1; i < len; i += 1) {\n      // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\n      pathString +=\n        ' C' +\n        pathNodes.o[i - 1][0] +\n        ',' +\n        pathNodes.o[i - 1][1] +\n        ' ' +\n        pathNodes.i[i][0] +\n        ',' +\n        pathNodes.i[i][1] +\n        ' ' +\n        pathNodes.v[i][0] +\n        ',' +\n        pathNodes.v[i][1]\n    }\n    // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\n    if (pathNodes.c && len > 1) {\n      pathString +=\n        ' C' +\n        pathNodes.o[i - 1][0] +\n        ',' +\n        pathNodes.o[i - 1][1] +\n        ' ' +\n        pathNodes.i[0][0] +\n        ',' +\n        pathNodes.i[0][1] +\n        ' ' +\n        pathNodes.v[0][0] +\n        ',' +\n        pathNodes.v[0][1]\n    }\n    // pathNodes.__renderedString = pathString;\n\n    if (viewData.lastPath !== pathString) {\n      var pathShapeValue = ''\n      if (viewData.elem) {\n        if (pathNodes.c) {\n          pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString\n        }\n        viewData.elem.setAttribute('d', pathShapeValue)\n      }\n      viewData.lastPath = pathString\n    }\n  }\n\n  MaskElement.prototype.destroy = function () {\n    this.element = null\n    this.globalData = null\n    this.maskElement = null\n    this.data = null\n    this.masksProperties = null\n  }\n\n  const filtersFactory = (function () {\n    var ob = {}\n    ob.createFilter = createFilter\n    ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter\n\n    function createFilter(filId, skipCoordinates) {\n      var fil = createNS('filter')\n      fil.setAttribute('id', filId)\n      if (skipCoordinates !== true) {\n        fil.setAttribute('filterUnits', 'objectBoundingBox')\n        fil.setAttribute('x', '0%')\n        fil.setAttribute('y', '0%')\n        fil.setAttribute('width', '100%')\n        fil.setAttribute('height', '100%')\n      }\n      return fil\n    }\n\n    function createAlphaToLuminanceFilter() {\n      var feColorMatrix = createNS('feColorMatrix')\n      feColorMatrix.setAttribute('type', 'matrix')\n      feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB')\n      feColorMatrix.setAttribute('values', '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1')\n      return feColorMatrix\n    }\n\n    return ob\n  })()\n\n  const featureSupport = (function () {\n    var ob = {\n      maskType: true,\n    }\n    if (\n      /MSIE 10/i.test(navigator.userAgent) ||\n      /MSIE 9/i.test(navigator.userAgent) ||\n      /rv:11.0/i.test(navigator.userAgent) ||\n      /Edge\\/\\d./i.test(navigator.userAgent)\n    ) {\n      ob.maskType = false\n    }\n    return ob\n  })()\n\n  var registeredEffects = {}\n  var idPrefix = 'filter_result_'\n\n  function SVGEffects(elem) {\n    var i\n    var source = 'SourceGraphic'\n    var len = elem.data.ef ? elem.data.ef.length : 0\n    var filId = createElementID()\n    var fil = filtersFactory.createFilter(filId, true)\n    var count = 0\n    this.filters = []\n    var filterManager\n    for (i = 0; i < len; i += 1) {\n      filterManager = null\n      var type = elem.data.ef[i].ty\n      if (registeredEffects[type]) {\n        var Effect = registeredEffects[type].effect\n        filterManager = new Effect(fil, elem.effectsManager.effectElements[i], elem, idPrefix + count, source)\n        source = idPrefix + count\n        if (registeredEffects[type].countsAsEffect) {\n          count += 1\n        }\n      }\n      if (filterManager) {\n        this.filters.push(filterManager)\n      }\n    }\n    if (count) {\n      elem.globalData.defs.appendChild(fil)\n      elem.layerElement.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')')\n    }\n    if (this.filters.length) {\n      elem.addRenderableComponent(this)\n    }\n  }\n\n  SVGEffects.prototype.renderFrame = function (_isFirstFrame) {\n    var i\n    var len = this.filters.length\n    for (i = 0; i < len; i += 1) {\n      this.filters[i].renderFrame(_isFirstFrame)\n    }\n  }\n\n  function registerEffect(id, effect, countsAsEffect) {\n    registeredEffects[id] = {\n      effect,\n      countsAsEffect,\n    }\n  }\n\n  function SVGBaseElement() {}\n\n  SVGBaseElement.prototype = {\n    initRendererElement: function () {\n      this.layerElement = createNS('g')\n    },\n    createContainerElements: function () {\n      this.matteElement = createNS('g')\n      this.transformedElement = this.layerElement\n      this.maskedElement = this.layerElement\n      this._sizeChanged = false\n      var layerElementParent = null\n      // If this layer acts as a mask for the following layer\n      var filId\n      var fil\n      var gg\n      if (this.data.td) {\n        if (this.data.td == 3 || this.data.td == 1) {\n          // eslint-disable-line eqeqeq\n          var masker = createNS('mask')\n          masker.setAttribute('id', this.layerId)\n          masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha') // eslint-disable-line eqeqeq\n          masker.appendChild(this.layerElement)\n          layerElementParent = masker\n          this.globalData.defs.appendChild(masker)\n          // This is only for IE and Edge when mask if of type alpha\n          if (!featureSupport.maskType && this.data.td == 1) {\n            // eslint-disable-line eqeqeq\n            masker.setAttribute('mask-type', 'luminance')\n            filId = createElementID()\n            fil = filtersFactory.createFilter(filId)\n            this.globalData.defs.appendChild(fil)\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter())\n            gg = createNS('g')\n            gg.appendChild(this.layerElement)\n            layerElementParent = gg\n            masker.appendChild(gg)\n            gg.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')')\n          }\n        } else if (this.data.td == 2) {\n          // eslint-disable-line eqeqeq\n          var maskGroup = createNS('mask')\n          maskGroup.setAttribute('id', this.layerId)\n          maskGroup.setAttribute('mask-type', 'alpha')\n          var maskGrouper = createNS('g')\n          maskGroup.appendChild(maskGrouper)\n          filId = createElementID()\n          fil = filtersFactory.createFilter(filId)\n          /// /\n\n          // This solution doesn't work on Android when meta tag with viewport attribute is set\n          /* var feColorMatrix = createNS('feColorMatrix');\n                feColorMatrix.setAttribute('type', 'matrix');\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\n                fil.appendChild(feColorMatrix); */\n          /// /\n          var feCTr = createNS('feComponentTransfer')\n          feCTr.setAttribute('in', 'SourceGraphic')\n          fil.appendChild(feCTr)\n          var feFunc = createNS('feFuncA')\n          feFunc.setAttribute('type', 'table')\n          feFunc.setAttribute('tableValues', '1.0 0.0')\n          feCTr.appendChild(feFunc)\n          /// /\n          this.globalData.defs.appendChild(fil)\n          var alphaRect = createNS('rect')\n          alphaRect.setAttribute('width', this.comp.data.w)\n          alphaRect.setAttribute('height', this.comp.data.h)\n          alphaRect.setAttribute('x', '0')\n          alphaRect.setAttribute('y', '0')\n          alphaRect.setAttribute('fill', '#ffffff')\n          alphaRect.setAttribute('opacity', '0')\n          maskGrouper.setAttribute('filter', 'url(' + getLocationHref() + '#' + filId + ')')\n          maskGrouper.appendChild(alphaRect)\n          maskGrouper.appendChild(this.layerElement)\n          layerElementParent = maskGrouper\n          if (!featureSupport.maskType) {\n            maskGroup.setAttribute('mask-type', 'luminance')\n            fil.appendChild(filtersFactory.createAlphaToLuminanceFilter())\n            gg = createNS('g')\n            maskGrouper.appendChild(alphaRect)\n            gg.appendChild(this.layerElement)\n            layerElementParent = gg\n            maskGrouper.appendChild(gg)\n          }\n          this.globalData.defs.appendChild(maskGroup)\n        }\n      } else if (this.data.tt) {\n        this.matteElement.appendChild(this.layerElement)\n        layerElementParent = this.matteElement\n        this.baseElement = this.matteElement\n      } else {\n        this.baseElement = this.layerElement\n      }\n      if (this.data.ln) {\n        this.layerElement.setAttribute('id', this.data.ln)\n      }\n      if (this.data.cl) {\n        this.layerElement.setAttribute('class', this.data.cl)\n      }\n      // Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\n      if (this.data.ty === 0 && !this.data.hd) {\n        var cp = createNS('clipPath')\n        var pt = createNS('path')\n        pt.setAttribute(\n          'd',\n          'M0,0 L' + this.data.w + ',0 L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z',\n        )\n        var clipId = createElementID()\n        cp.setAttribute('id', clipId)\n        cp.appendChild(pt)\n        this.globalData.defs.appendChild(cp)\n\n        if (this.checkMasks()) {\n          var cpGroup = createNS('g')\n          cpGroup.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')')\n          cpGroup.appendChild(this.layerElement)\n          this.transformedElement = cpGroup\n          if (layerElementParent) {\n            layerElementParent.appendChild(this.transformedElement)\n          } else {\n            this.baseElement = this.transformedElement\n          }\n        } else {\n          this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + clipId + ')')\n        }\n      }\n      if (this.data.bm !== 0) {\n        this.setBlendMode()\n      }\n    },\n    renderElement: function () {\n      if (this.finalTransform._matMdf) {\n        this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS())\n      }\n      if (this.finalTransform._opMdf) {\n        this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v)\n      }\n    },\n    destroyBaseElement: function () {\n      this.layerElement = null\n      this.matteElement = null\n      this.maskManager.destroy()\n    },\n    getBaseElement: function () {\n      if (this.data.hd) {\n        return null\n      }\n      return this.baseElement\n    },\n    createRenderableComponents: function () {\n      this.maskManager = new MaskElement(this.data, this, this.globalData)\n      this.renderableEffectsManager = new SVGEffects(this)\n    },\n    setMatte: function (id) {\n      if (!this.matteElement) {\n        return\n      }\n      this.matteElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + id + ')')\n    },\n  }\n\n  /**\n   * @file\n   * Handles AE's layer parenting property.\n   *\n   */\n\n  function HierarchyElement() {}\n\n  HierarchyElement.prototype = {\n    /**\n     * @function\n     * Initializes hierarchy properties\n     *\n     */\n    initHierarchy: function () {\n      // element's parent list\n      this.hierarchy = []\n      // if element is parent of another layer _isParent will be true\n      this._isParent = false\n      this.checkParenting()\n    },\n    /**\n     * @function\n     * Sets layer's hierarchy.\n     * @param {array} hierarch\n     * layer's parent list\n     *\n     */\n    setHierarchy: function (hierarchy) {\n      this.hierarchy = hierarchy\n    },\n    /**\n     * @function\n     * Sets layer as parent.\n     *\n     */\n    setAsParent: function () {\n      this._isParent = true\n    },\n    /**\n     * @function\n     * Searches layer's parenting chain\n     *\n     */\n    checkParenting: function () {\n      if (this.data.parent !== undefined) {\n        this.comp.buildElementParenting(this, this.data.parent, [])\n      }\n    },\n  }\n\n  function RenderableDOMElement() {}\n\n  ;(function () {\n    var _prototype = {\n      initElement: function (data, globalData, comp) {\n        this.initFrame()\n        this.initBaseData(data, globalData, comp)\n        this.initTransform(data, globalData, comp)\n        this.initHierarchy()\n        this.initRenderable()\n        this.initRendererElement()\n        this.createContainerElements()\n        this.createRenderableComponents()\n        this.createContent()\n        this.hide()\n      },\n      hide: function () {\n        // console.log('HIDE', this);\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n          var elem = this.baseElement || this.layerElement\n          elem.style.display = 'none'\n          this.hidden = true\n        }\n      },\n      show: function () {\n        // console.log('SHOW', this);\n        if (this.isInRange && !this.isTransparent) {\n          if (!this.data.hd) {\n            var elem = this.baseElement || this.layerElement\n            elem.style.display = 'block'\n          }\n          this.hidden = false\n          this._isFirstFrame = true\n        }\n      },\n      renderFrame: function () {\n        // If it is exported as hidden (data.hd === true) no need to render\n        // If it is not visible no need to render\n        if (this.data.hd || this.hidden) {\n          return\n        }\n        this.renderTransform()\n        this.renderRenderable()\n        this.renderElement()\n        this.renderInnerContent()\n        if (this._isFirstFrame) {\n          this._isFirstFrame = false\n        }\n      },\n      renderInnerContent: function () {},\n      prepareFrame: function (num) {\n        this._mdf = false\n        this.prepareRenderableFrame(num)\n        this.prepareProperties(num, this.isInRange)\n        this.checkTransparency()\n      },\n      destroy: function () {\n        this.innerElem = null\n        this.destroyBaseElement()\n      },\n    }\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement)\n  })()\n\n  function IImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId)\n    this.initElement(data, globalData, comp)\n    this.sourceRect = {\n      top: 0,\n      left: 0,\n      width: this.assetData.w,\n      height: this.assetData.h,\n    }\n  }\n\n  extendPrototype(\n    [BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement],\n    IImageElement,\n  )\n\n  IImageElement.prototype.createContent = function () {\n    var assetPath = this.globalData.getAssetsPath(this.assetData)\n\n    this.innerElem = createNS('image')\n    this.innerElem.setAttribute('width', this.assetData.w + 'px')\n    this.innerElem.setAttribute('height', this.assetData.h + 'px')\n    this.innerElem.setAttribute(\n      'preserveAspectRatio',\n      this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio,\n    )\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath)\n\n    this.layerElement.appendChild(this.innerElem)\n  }\n\n  IImageElement.prototype.sourceRectAtTime = function () {\n    return this.sourceRect\n  }\n\n  function ProcessedElement(element, position) {\n    this.elem = element\n    this.pos = position\n  }\n\n  function IShapeElement() {}\n\n  IShapeElement.prototype = {\n    addShapeToModifiers: function (data) {\n      var i\n      var len = this.shapeModifiers.length\n      for (i = 0; i < len; i += 1) {\n        this.shapeModifiers[i].addShape(data)\n      }\n    },\n    isShapeInAnimatedModifiers: function (data) {\n      var i = 0\n      var len = this.shapeModifiers.length\n      while (i < len) {\n        if (this.shapeModifiers[i].isAnimatedWithShape(data)) {\n          return true\n        }\n      }\n      return false\n    },\n    renderModifiers: function () {\n      if (!this.shapeModifiers.length) {\n        return\n      }\n      var i\n      var len = this.shapes.length\n      for (i = 0; i < len; i += 1) {\n        this.shapes[i].sh.reset()\n      }\n\n      len = this.shapeModifiers.length\n      var shouldBreakProcess\n      for (i = len - 1; i >= 0; i -= 1) {\n        shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame)\n        // workaround to fix cases where a repeater resets the shape so the following processes get called twice\n        // TODO: find a better solution for this\n        if (shouldBreakProcess) {\n          break\n        }\n      }\n    },\n\n    searchProcessedElement: function (elem) {\n      var elements = this.processedElements\n      var i = 0\n      var len = elements.length\n      while (i < len) {\n        if (elements[i].elem === elem) {\n          return elements[i].pos\n        }\n        i += 1\n      }\n      return 0\n    },\n    addProcessedElement: function (elem, pos) {\n      var elements = this.processedElements\n      var i = elements.length\n      while (i) {\n        i -= 1\n        if (elements[i].elem === elem) {\n          elements[i].pos = pos\n          return\n        }\n      }\n      elements.push(new ProcessedElement(elem, pos))\n    },\n    prepareFrame: function (num) {\n      this.prepareRenderableFrame(num)\n      this.prepareProperties(num, this.isInRange)\n    },\n  }\n\n  const lineCapEnum = {\n    1: 'butt',\n    2: 'round',\n    3: 'square',\n  }\n\n  const lineJoinEnum = {\n    1: 'miter',\n    2: 'round',\n    3: 'bevel',\n  }\n\n  function SVGShapeData(transformers, level, shape) {\n    this.caches = []\n    this.styles = []\n    this.transformers = transformers\n    this.lStr = ''\n    this.sh = shape\n    this.lvl = level\n    // TODO find if there are some cases where _isAnimated can be false.\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\n    this._isAnimated = !!shape.k\n    // TODO: commenting this for now since all shapes are animated\n    var i = 0\n    var len = transformers.length\n    while (i < len) {\n      if (transformers[i].mProps.dynamicProperties.length) {\n        this._isAnimated = true\n        break\n      }\n      i += 1\n    }\n  }\n\n  SVGShapeData.prototype.setAsAnimated = function () {\n    this._isAnimated = true\n  }\n\n  function SVGStyleData(data, level) {\n    this.data = data\n    this.type = data.ty\n    this.d = ''\n    this.lvl = level\n    this._mdf = false\n    this.closed = data.hd === true\n    this.pElem = createNS('path')\n    this.msElem = null\n  }\n\n  SVGStyleData.prototype.reset = function () {\n    this.d = ''\n    this._mdf = false\n  }\n\n  function DashProperty(elem, data, renderer, container) {\n    this.elem = elem\n    this.frameId = -1\n    this.dataProps = createSizedArray(data.length)\n    this.renderer = renderer\n    this.k = false\n    this.dashStr = ''\n    this.dashArray = createTypedArray('float32', data.length ? data.length - 1 : 0)\n    this.dashoffset = createTypedArray('float32', 1)\n    this.initDynamicPropertyContainer(container)\n    var i\n    var len = data.length || 0\n    var prop\n    for (i = 0; i < len; i += 1) {\n      prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this)\n      this.k = prop.k || this.k\n      this.dataProps[i] = { n: data[i].n, p: prop }\n    }\n    if (!this.k) {\n      this.getValue(true)\n    }\n    this._isAnimated = this.k\n  }\n\n  DashProperty.prototype.getValue = function (forceRender) {\n    if (this.elem.globalData.frameId === this.frameId && !forceRender) {\n      return\n    }\n    this.frameId = this.elem.globalData.frameId\n    this.iterateDynamicProperties()\n    this._mdf = this._mdf || forceRender\n    if (this._mdf) {\n      var i = 0\n      var len = this.dataProps.length\n      if (this.renderer === 'svg') {\n        this.dashStr = ''\n      }\n      for (i = 0; i < len; i += 1) {\n        if (this.dataProps[i].n !== 'o') {\n          if (this.renderer === 'svg') {\n            this.dashStr += ' ' + this.dataProps[i].p.v\n          } else {\n            this.dashArray[i] = this.dataProps[i].p.v\n          }\n        } else {\n          this.dashoffset[0] = this.dataProps[i].p.v\n        }\n      }\n    }\n  }\n  extendPrototype([DynamicPropertyContainer], DashProperty)\n\n  function SVGStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this)\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this)\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this)\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this)\n    this.style = styleOb\n    this._isAnimated = !!this._isAnimated\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData)\n\n  function SVGFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this)\n    this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this)\n    this.style = styleOb\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGFillStyleData)\n\n  function SVGNoStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.style = styleOb\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGNoStyleData)\n\n  function GradientProperty(elem, data, container) {\n    this.data = data\n    this.c = createTypedArray('uint8c', data.p * 4)\n    var cLength = data.k.k[0].s ? data.k.k[0].s.length - data.p * 4 : data.k.k.length - data.p * 4\n    this.o = createTypedArray('float32', cLength)\n    this._cmdf = false\n    this._omdf = false\n    this._collapsable = this.checkCollapsable()\n    this._hasOpacity = cLength\n    this.initDynamicPropertyContainer(container)\n    this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this)\n    this.k = this.prop.k\n    this.getValue(true)\n  }\n\n  GradientProperty.prototype.comparePoints = function (values, points) {\n    var i = 0\n    var len = this.o.length / 2\n    var diff\n    while (i < len) {\n      diff = Math.abs(values[i * 4] - values[points * 4 + i * 2])\n      if (diff > 0.01) {\n        return false\n      }\n      i += 1\n    }\n    return true\n  }\n\n  GradientProperty.prototype.checkCollapsable = function () {\n    if (this.o.length / 2 !== this.c.length / 4) {\n      return false\n    }\n    if (this.data.k.k[0].s) {\n      var i = 0\n      var len = this.data.k.k.length\n      while (i < len) {\n        if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\n          return false\n        }\n        i += 1\n      }\n    } else if (!this.comparePoints(this.data.k.k, this.data.p)) {\n      return false\n    }\n    return true\n  }\n\n  GradientProperty.prototype.getValue = function (forceRender) {\n    this.prop.getValue()\n    this._mdf = false\n    this._cmdf = false\n    this._omdf = false\n    if (this.prop._mdf || forceRender) {\n      var i\n      var len = this.data.p * 4\n      var mult\n      var val\n      for (i = 0; i < len; i += 1) {\n        mult = i % 4 === 0 ? 100 : 255\n        val = Math.round(this.prop.v[i] * mult)\n        if (this.c[i] !== val) {\n          this.c[i] = val\n          this._cmdf = !forceRender\n        }\n      }\n      if (this.o.length) {\n        len = this.prop.v.length\n        for (i = this.data.p * 4; i < len; i += 1) {\n          mult = i % 2 === 0 ? 100 : 1\n          val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i]\n          if (this.o[i - this.data.p * 4] !== val) {\n            this.o[i - this.data.p * 4] = val\n            this._omdf = !forceRender\n          }\n        }\n      }\n      this._mdf = !forceRender\n    }\n  }\n\n  extendPrototype([DynamicPropertyContainer], GradientProperty)\n\n  function SVGGradientFillStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.initGradientData(elem, data, styleOb)\n  }\n\n  SVGGradientFillStyleData.prototype.initGradientData = function (elem, data, styleOb) {\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this)\n    this.s = PropertyFactory.getProp(elem, data.s, 1, null, this)\n    this.e = PropertyFactory.getProp(elem, data.e, 1, null, this)\n    this.h = PropertyFactory.getProp(elem, data.h || { k: 0 }, 0, 0.01, this)\n    this.a = PropertyFactory.getProp(elem, data.a || { k: 0 }, 0, degToRads, this)\n    this.g = new GradientProperty(elem, data.g, this)\n    this.style = styleOb\n    this.stops = []\n    this.setGradientData(styleOb.pElem, data)\n    this.setGradientOpacity(data, styleOb)\n    this._isAnimated = !!this._isAnimated\n  }\n\n  SVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data) {\n    var gradientId = createElementID()\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient')\n    gfill.setAttribute('id', gradientId)\n    gfill.setAttribute('spreadMethod', 'pad')\n    gfill.setAttribute('gradientUnits', 'userSpaceOnUse')\n    var stops = []\n    var stop\n    var j\n    var jLen\n    jLen = data.g.p * 4\n    for (j = 0; j < jLen; j += 4) {\n      stop = createNS('stop')\n      gfill.appendChild(stop)\n      stops.push(stop)\n    }\n    pathElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + gradientId + ')')\n    this.gf = gfill\n    this.cst = stops\n  }\n\n  SVGGradientFillStyleData.prototype.setGradientOpacity = function (data, styleOb) {\n    if (this.g._hasOpacity && !this.g._collapsable) {\n      var stop\n      var j\n      var jLen\n      var mask = createNS('mask')\n      var maskElement = createNS('path')\n      mask.appendChild(maskElement)\n      var opacityId = createElementID()\n      var maskId = createElementID()\n      mask.setAttribute('id', maskId)\n      var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient')\n      opFill.setAttribute('id', opacityId)\n      opFill.setAttribute('spreadMethod', 'pad')\n      opFill.setAttribute('gradientUnits', 'userSpaceOnUse')\n      jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length\n      var stops = this.stops\n      for (j = data.g.p * 4; j < jLen; j += 2) {\n        stop = createNS('stop')\n        stop.setAttribute('stop-color', 'rgb(255,255,255)')\n        opFill.appendChild(stop)\n        stops.push(stop)\n      }\n      maskElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + getLocationHref() + '#' + opacityId + ')')\n      if (data.ty === 'gs') {\n        maskElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2])\n        maskElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2])\n        if (data.lj === 1) {\n          maskElement.setAttribute('stroke-miterlimit', data.ml)\n        }\n      }\n      this.of = opFill\n      this.ms = mask\n      this.ost = stops\n      this.maskId = maskId\n      styleOb.msElem = maskElement\n    }\n  }\n\n  extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData)\n\n  function SVGGradientStrokeStyleData(elem, data, styleOb) {\n    this.initDynamicPropertyContainer(elem)\n    this.getValue = this.iterateDynamicProperties\n    this.w = PropertyFactory.getProp(elem, data.w, 0, null, this)\n    this.d = new DashProperty(elem, data.d || {}, 'svg', this)\n    this.initGradientData(elem, data, styleOb)\n    this._isAnimated = !!this._isAnimated\n  }\n\n  extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData)\n\n  function ShapeGroupData() {\n    this.it = []\n    this.prevViewData = []\n    this.gr = createNS('g')\n  }\n\n  function SVGTransformData(mProps, op, container) {\n    this.transform = {\n      mProps: mProps,\n      op: op,\n      container: container,\n    }\n    this.elements = []\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length\n  }\n\n  const buildShapeString = function (pathNodes, length, closed, mat) {\n    if (length === 0) {\n      return ''\n    }\n    var _o = pathNodes.o\n    var _i = pathNodes.i\n    var _v = pathNodes.v\n    var i\n    var shapeString = ' M' + mat.applyToPointStringified(_v[0][0], _v[0][1])\n    for (i = 1; i < length; i += 1) {\n      shapeString +=\n        ' C' +\n        mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) +\n        ' ' +\n        mat.applyToPointStringified(_i[i][0], _i[i][1]) +\n        ' ' +\n        mat.applyToPointStringified(_v[i][0], _v[i][1])\n    }\n    if (closed && length) {\n      shapeString +=\n        ' C' +\n        mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) +\n        ' ' +\n        mat.applyToPointStringified(_i[0][0], _i[0][1]) +\n        ' ' +\n        mat.applyToPointStringified(_v[0][0], _v[0][1])\n      shapeString += 'z'\n    }\n    return shapeString\n  }\n\n  const SVGElementsRenderer = (function () {\n    var _identityMatrix = new Matrix()\n    var _matrixHelper = new Matrix()\n\n    var ob = {\n      createRenderFunction: createRenderFunction,\n    }\n\n    function createRenderFunction(data) {\n      switch (data.ty) {\n        case 'fl':\n          return renderFill\n        case 'gf':\n          return renderGradient\n        case 'gs':\n          return renderGradientStroke\n        case 'st':\n          return renderStroke\n        case 'sh':\n        case 'el':\n        case 'rc':\n        case 'sr':\n          return renderPath\n        case 'tr':\n          return renderContentTransform\n        case 'no':\n          return renderNoop\n        default:\n          return null\n      }\n    }\n\n    function renderContentTransform(styleData, itemData, isFirstFrame) {\n      if (isFirstFrame || itemData.transform.op._mdf) {\n        itemData.transform.container.setAttribute('opacity', itemData.transform.op.v)\n      }\n      if (isFirstFrame || itemData.transform.mProps._mdf) {\n        itemData.transform.container.setAttribute('transform', itemData.transform.mProps.v.to2dCSS())\n      }\n    }\n\n    function renderNoop() {}\n\n    function renderPath(styleData, itemData, isFirstFrame) {\n      var j\n      var jLen\n      var pathStringTransformed\n      var redraw\n      var pathNodes\n      var l\n      var lLen = itemData.styles.length\n      var lvl = itemData.lvl\n      var paths\n      var mat\n      var props\n      var iterations\n      var k\n      for (l = 0; l < lLen; l += 1) {\n        redraw = itemData.sh._mdf || isFirstFrame\n        if (itemData.styles[l].lvl < lvl) {\n          mat = _matrixHelper.reset()\n          iterations = lvl - itemData.styles[l].lvl\n          k = itemData.transformers.length - 1\n          while (!redraw && iterations > 0) {\n            redraw = itemData.transformers[k].mProps._mdf || redraw\n            iterations -= 1\n            k -= 1\n          }\n          if (redraw) {\n            iterations = lvl - itemData.styles[l].lvl\n            k = itemData.transformers.length - 1\n            while (iterations > 0) {\n              props = itemData.transformers[k].mProps.v.props\n              mat.transform(\n                props[0],\n                props[1],\n                props[2],\n                props[3],\n                props[4],\n                props[5],\n                props[6],\n                props[7],\n                props[8],\n                props[9],\n                props[10],\n                props[11],\n                props[12],\n                props[13],\n                props[14],\n                props[15],\n              )\n              iterations -= 1\n              k -= 1\n            }\n          }\n        } else {\n          mat = _identityMatrix\n        }\n        paths = itemData.sh.paths\n        jLen = paths._length\n        if (redraw) {\n          pathStringTransformed = ''\n          for (j = 0; j < jLen; j += 1) {\n            pathNodes = paths.shapes[j]\n            if (pathNodes && pathNodes._length) {\n              pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat)\n            }\n          }\n          itemData.caches[l] = pathStringTransformed\n        } else {\n          pathStringTransformed = itemData.caches[l]\n        }\n        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf\n      }\n    }\n\n    function renderFill(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style\n\n      if (itemData.c._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute(\n          'fill',\n          'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')',\n        )\n      }\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('fill-opacity', itemData.o.v)\n      }\n    }\n\n    function renderGradientStroke(styleData, itemData, isFirstFrame) {\n      renderGradient(styleData, itemData, isFirstFrame)\n      renderStroke(styleData, itemData, isFirstFrame)\n    }\n\n    function renderGradient(styleData, itemData, isFirstFrame) {\n      var gfill = itemData.gf\n      var hasOpacity = itemData.g._hasOpacity\n      var pt1 = itemData.s.v\n      var pt2 = itemData.e.v\n\n      if (itemData.o._mdf || isFirstFrame) {\n        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity'\n        itemData.style.pElem.setAttribute(attr, itemData.o.v)\n      }\n      if (itemData.s._mdf || isFirstFrame) {\n        var attr1 = styleData.t === 1 ? 'x1' : 'cx'\n        var attr2 = attr1 === 'x1' ? 'y1' : 'cy'\n        gfill.setAttribute(attr1, pt1[0])\n        gfill.setAttribute(attr2, pt1[1])\n        if (hasOpacity && !itemData.g._collapsable) {\n          itemData.of.setAttribute(attr1, pt1[0])\n          itemData.of.setAttribute(attr2, pt1[1])\n        }\n      }\n      var stops\n      var i\n      var len\n      var stop\n      if (itemData.g._cmdf || isFirstFrame) {\n        stops = itemData.cst\n        var cValues = itemData.g.c\n        len = stops.length\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i]\n          stop.setAttribute('offset', cValues[i * 4] + '%')\n          stop.setAttribute(\n            'stop-color',\n            'rgb(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ')',\n          )\n        }\n      }\n      if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\n        var oValues = itemData.g.o\n        if (itemData.g._collapsable) {\n          stops = itemData.cst\n        } else {\n          stops = itemData.ost\n        }\n        len = stops.length\n        for (i = 0; i < len; i += 1) {\n          stop = stops[i]\n          if (!itemData.g._collapsable) {\n            stop.setAttribute('offset', oValues[i * 2] + '%')\n          }\n          stop.setAttribute('stop-opacity', oValues[i * 2 + 1])\n        }\n      }\n      if (styleData.t === 1) {\n        if (itemData.e._mdf || isFirstFrame) {\n          gfill.setAttribute('x2', pt2[0])\n          gfill.setAttribute('y2', pt2[1])\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('x2', pt2[0])\n            itemData.of.setAttribute('y2', pt2[1])\n          }\n        }\n      } else {\n        var rad\n        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2))\n          gfill.setAttribute('r', rad)\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('r', rad)\n          }\n        }\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\n          if (!rad) {\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2))\n          }\n          var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0])\n\n          var percent = itemData.h.v\n          if (percent >= 1) {\n            percent = 0.99\n          } else if (percent <= -1) {\n            percent = -0.99\n          }\n          var dist = rad * percent\n          var x = Math.cos(ang + itemData.a.v) * dist + pt1[0]\n          var y = Math.sin(ang + itemData.a.v) * dist + pt1[1]\n          gfill.setAttribute('fx', x)\n          gfill.setAttribute('fy', y)\n          if (hasOpacity && !itemData.g._collapsable) {\n            itemData.of.setAttribute('fx', x)\n            itemData.of.setAttribute('fy', y)\n          }\n        }\n        // gfill.setAttribute('fy','200');\n      }\n    }\n\n    function renderStroke(styleData, itemData, isFirstFrame) {\n      var styleElem = itemData.style\n      var d = itemData.d\n      if (d && (d._mdf || isFirstFrame) && d.dashStr) {\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr)\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0])\n      }\n      if (itemData.c && (itemData.c._mdf || isFirstFrame)) {\n        styleElem.pElem.setAttribute(\n          'stroke',\n          'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')',\n        )\n      }\n      if (itemData.o._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v)\n      }\n      if (itemData.w._mdf || isFirstFrame) {\n        styleElem.pElem.setAttribute('stroke-width', itemData.w.v)\n        if (styleElem.msElem) {\n          styleElem.msElem.setAttribute('stroke-width', itemData.w.v)\n        }\n      }\n    }\n\n    return ob\n  })()\n\n  function SVGShapeElement(data, globalData, comp) {\n    // List of drawable elements\n    this.shapes = []\n    // Full shape data\n    this.shapesData = data.shapes\n    // List of styles that will be applied to shapes\n    this.stylesList = []\n    // List of modifiers that will be applied to shapes\n    this.shapeModifiers = []\n    // List of items in shape tree\n    this.itemsData = []\n    // List of items in previous shape tree\n    this.processedElements = []\n    // List of animated components\n    this.animatedContents = []\n    this.initElement(data, globalData, comp)\n    // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n    // List of elements that have been created\n    this.prevViewData = []\n    // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\n  }\n\n  extendPrototype(\n    [\n      BaseElement,\n      TransformElement,\n      SVGBaseElement,\n      IShapeElement,\n      HierarchyElement,\n      FrameElement,\n      RenderableDOMElement,\n    ],\n    SVGShapeElement,\n  )\n\n  SVGShapeElement.prototype.initSecondaryElement = function () {}\n\n  SVGShapeElement.prototype.identityMatrix = new Matrix()\n\n  SVGShapeElement.prototype.buildExpressionInterface = function () {}\n\n  SVGShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true)\n    this.filterUniqueShapes()\n  }\n\n  /*\nThis method searches for multiple shapes that affect a single element and one of them is animated\n*/\n  SVGShapeElement.prototype.filterUniqueShapes = function () {\n    var i\n    var len = this.shapes.length\n    var shape\n    var j\n    var jLen = this.stylesList.length\n    var style\n    var tempShapes = []\n    var areAnimated = false\n    for (j = 0; j < jLen; j += 1) {\n      style = this.stylesList[j]\n      areAnimated = false\n      tempShapes.length = 0\n      for (i = 0; i < len; i += 1) {\n        shape = this.shapes[i]\n        if (shape.styles.indexOf(style) !== -1) {\n          tempShapes.push(shape)\n          areAnimated = shape._isAnimated || areAnimated\n        }\n      }\n      if (tempShapes.length > 1 && areAnimated) {\n        this.setShapesAsAnimated(tempShapes)\n      }\n    }\n  }\n\n  SVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {\n    var i\n    var len = shapes.length\n    for (i = 0; i < len; i += 1) {\n      shapes[i].setAsAnimated()\n    }\n  }\n\n  SVGShapeElement.prototype.createStyleElement = function (data, level) {\n    // TODO: prevent drawing of hidden styles\n    var elementData\n    var styleOb = new SVGStyleData(data, level)\n\n    var pathElement = styleOb.pElem\n    if (data.ty === 'st') {\n      elementData = new SVGStrokeStyleData(this, data, styleOb)\n    } else if (data.ty === 'fl') {\n      elementData = new SVGFillStyleData(this, data, styleOb)\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      var GradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData\n      elementData = new GradientConstructor(this, data, styleOb)\n      this.globalData.defs.appendChild(elementData.gf)\n      if (elementData.maskId) {\n        this.globalData.defs.appendChild(elementData.ms)\n        this.globalData.defs.appendChild(elementData.of)\n        pathElement.setAttribute('mask', 'url(' + getLocationHref() + '#' + elementData.maskId + ')')\n      }\n    } else if (data.ty === 'no') {\n      elementData = new SVGNoStyleData(this, data, styleOb)\n    }\n\n    if (data.ty === 'st' || data.ty === 'gs') {\n      pathElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2])\n      pathElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2])\n      pathElement.setAttribute('fill-opacity', '0')\n      if (data.lj === 1) {\n        pathElement.setAttribute('stroke-miterlimit', data.ml)\n      }\n    }\n\n    if (data.r === 2) {\n      pathElement.setAttribute('fill-rule', 'evenodd')\n    }\n\n    if (data.ln) {\n      pathElement.setAttribute('id', data.ln)\n    }\n    if (data.cl) {\n      pathElement.setAttribute('class', data.cl)\n    }\n    if (data.bm) {\n      pathElement.style['mix-blend-mode'] = getBlendMode(data.bm)\n    }\n    this.stylesList.push(styleOb)\n    this.addToAnimatedContents(data, elementData)\n    return elementData\n  }\n\n  SVGShapeElement.prototype.createGroupElement = function (data) {\n    var elementData = new ShapeGroupData()\n    if (data.ln) {\n      elementData.gr.setAttribute('id', data.ln)\n    }\n    if (data.cl) {\n      elementData.gr.setAttribute('class', data.cl)\n    }\n    if (data.bm) {\n      elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm)\n    }\n    return elementData\n  }\n\n  SVGShapeElement.prototype.createTransformElement = function (data, container) {\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this)\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container)\n    this.addToAnimatedContents(data, elementData)\n    return elementData\n  }\n\n  SVGShapeElement.prototype.createShapeElement = function (data, ownTransformers, level) {\n    var ty = 4\n    if (data.ty === 'rc') {\n      ty = 5\n    } else if (data.ty === 'el') {\n      ty = 6\n    } else if (data.ty === 'sr') {\n      ty = 7\n    }\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this)\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty)\n    this.shapes.push(elementData)\n    this.addShapeToModifiers(elementData)\n    this.addToAnimatedContents(data, elementData)\n    return elementData\n  }\n\n  SVGShapeElement.prototype.addToAnimatedContents = function (data, element) {\n    var i = 0\n    var len = this.animatedContents.length\n    while (i < len) {\n      if (this.animatedContents[i].element === element) {\n        return\n      }\n      i += 1\n    }\n    this.animatedContents.push({\n      fn: SVGElementsRenderer.createRenderFunction(data),\n      element: element,\n      data: data,\n    })\n  }\n\n  SVGShapeElement.prototype.setElementStyles = function (elementData) {\n    var arr = elementData.styles\n    var j\n    var jLen = this.stylesList.length\n    for (j = 0; j < jLen; j += 1) {\n      if (!this.stylesList[j].closed) {\n        arr.push(this.stylesList[j])\n      }\n    }\n  }\n\n  SVGShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true\n    var i\n    var len = this.itemsData.length\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i]\n    }\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true)\n    this.filterUniqueShapes()\n    len = this.dynamicProperties.length\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue()\n    }\n    this.renderModifiers()\n  }\n\n  SVGShapeElement.prototype.searchShapes = function (\n    arr,\n    itemsData,\n    prevViewData,\n    container,\n    level,\n    transformers,\n    render,\n  ) {\n    var ownTransformers = [].concat(transformers)\n    var i\n    var len = arr.length - 1\n    var j\n    var jLen\n    var ownStyles = []\n    var ownModifiers = []\n    var currentTransform\n    var modifier\n    var processedPos\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i])\n      if (!processedPos) {\n        arr[i]._render = render\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1]\n      }\n      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs' || arr[i].ty === 'no') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], level)\n        } else {\n          itemsData[i].style.closed = false\n        }\n        if (arr[i]._render) {\n          if (itemsData[i].style.pElem.parentNode !== container) {\n            container.appendChild(itemsData[i].style.pElem)\n          }\n        }\n        ownStyles.push(itemsData[i].style)\n      } else if (arr[i].ty === 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i])\n        } else {\n          jLen = itemsData[i].it.length\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j]\n          }\n        }\n        this.searchShapes(\n          arr[i].it,\n          itemsData[i].it,\n          itemsData[i].prevViewData,\n          itemsData[i].gr,\n          level + 1,\n          ownTransformers,\n          render,\n        )\n        if (arr[i]._render) {\n          if (itemsData[i].gr.parentNode !== container) {\n            container.appendChild(itemsData[i].gr)\n          }\n        }\n      } else if (arr[i].ty === 'tr') {\n        if (!processedPos) {\n          itemsData[i] = this.createTransformElement(arr[i], container)\n        }\n        currentTransform = itemsData[i].transform\n        ownTransformers.push(currentTransform)\n      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level)\n        }\n        this.setElementStyles(itemsData[i])\n      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'ms' || arr[i].ty === 'pb') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty)\n          modifier.init(this, arr[i])\n          itemsData[i] = modifier\n          this.shapeModifiers.push(modifier)\n        } else {\n          modifier = itemsData[i]\n          modifier.closed = false\n        }\n        ownModifiers.push(modifier)\n      } else if (arr[i].ty === 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty)\n          itemsData[i] = modifier\n          modifier.init(this, arr, i, itemsData)\n          this.shapeModifiers.push(modifier)\n          render = false\n        } else {\n          modifier = itemsData[i]\n          modifier.closed = true\n        }\n        ownModifiers.push(modifier)\n      }\n      this.addProcessedElement(arr[i], i + 1)\n    }\n    len = ownStyles.length\n    for (i = 0; i < len; i += 1) {\n      ownStyles[i].closed = true\n    }\n    len = ownModifiers.length\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true\n    }\n  }\n\n  SVGShapeElement.prototype.renderInnerContent = function () {\n    this.renderModifiers()\n    var i\n    var len = this.stylesList.length\n    for (i = 0; i < len; i += 1) {\n      this.stylesList[i].reset()\n    }\n    this.renderShape()\n    for (i = 0; i < len; i += 1) {\n      if (this.stylesList[i]._mdf || this._isFirstFrame) {\n        if (this.stylesList[i].msElem) {\n          this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d)\n          // Adding M0 0 fixes same mask bug on all browsers\n          this.stylesList[i].d = 'M0 0' + this.stylesList[i].d\n        }\n        this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0')\n      }\n    }\n  }\n\n  SVGShapeElement.prototype.renderShape = function () {\n    var i\n    var len = this.animatedContents.length\n    var animatedContent\n    for (i = 0; i < len; i += 1) {\n      animatedContent = this.animatedContents[i]\n      if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\n        animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame)\n      }\n    }\n  }\n\n  SVGShapeElement.prototype.destroy = function () {\n    this.destroyBaseElement()\n    this.shapesData = null\n    this.itemsData = null\n  }\n\n  function LetterProps(o, sw, sc, fc, m, p) {\n    this.o = o\n    this.sw = sw\n    this.sc = sc\n    this.fc = fc\n    this.m = m\n    this.p = p\n    this._mdf = {\n      o: true,\n      sw: !!sw,\n      sc: !!sc,\n      fc: !!fc,\n      m: true,\n      p: true,\n    }\n  }\n\n  LetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\n    this._mdf.o = false\n    this._mdf.sw = false\n    this._mdf.sc = false\n    this._mdf.fc = false\n    this._mdf.m = false\n    this._mdf.p = false\n    var updated = false\n\n    if (this.o !== o) {\n      this.o = o\n      this._mdf.o = true\n      updated = true\n    }\n    if (this.sw !== sw) {\n      this.sw = sw\n      this._mdf.sw = true\n      updated = true\n    }\n    if (this.sc !== sc) {\n      this.sc = sc\n      this._mdf.sc = true\n      updated = true\n    }\n    if (this.fc !== fc) {\n      this.fc = fc\n      this._mdf.fc = true\n      updated = true\n    }\n    if (this.m !== m) {\n      this.m = m\n      this._mdf.m = true\n      updated = true\n    }\n    if (\n      p.length &&\n      (this.p[0] !== p[0] ||\n        this.p[1] !== p[1] ||\n        this.p[4] !== p[4] ||\n        this.p[5] !== p[5] ||\n        this.p[12] !== p[12] ||\n        this.p[13] !== p[13])\n    ) {\n      this.p = p\n      this._mdf.p = true\n      updated = true\n    }\n    return updated\n  }\n\n  function TextProperty(elem, data) {\n    this._frameId = initialDefaultFrame\n    this.pv = ''\n    this.v = ''\n    this.kf = false\n    this._isFirstFrame = true\n    this._mdf = false\n    this.data = data\n    this.elem = elem\n    this.comp = this.elem.comp\n    this.keysIndex = 0\n    this.canResize = false\n    this.minimumFontSize = 1\n    this.effectsSequence = []\n    this.currentData = {\n      ascent: 0,\n      boxWidth: this.defaultBoxWidth,\n      f: '',\n      fStyle: '',\n      fWeight: '',\n      fc: '',\n      j: '',\n      justifyOffset: '',\n      l: [],\n      lh: 0,\n      lineWidths: [],\n      ls: '',\n      of: '',\n      s: '',\n      sc: '',\n      sw: 0,\n      t: 0,\n      tr: 0,\n      sz: 0,\n      ps: null,\n      fillColorAnim: false,\n      strokeColorAnim: false,\n      strokeWidthAnim: false,\n      yOffset: 0,\n      finalSize: 0,\n      finalText: [],\n      finalLineHeight: 0,\n      __complete: false,\n    }\n    this.copyData(this.currentData, this.data.d.k[0].s)\n\n    if (!this.searchProperty()) {\n      this.completeTextData(this.currentData)\n    }\n  }\n\n  TextProperty.prototype.defaultBoxWidth = [0, 0]\n\n  TextProperty.prototype.copyData = function (obj, data) {\n    for (var s in data) {\n      if (Object.prototype.hasOwnProperty.call(data, s)) {\n        obj[s] = data[s]\n      }\n    }\n    return obj\n  }\n\n  TextProperty.prototype.setCurrentData = function (data) {\n    if (!data.__complete) {\n      this.completeTextData(data)\n    }\n    this.currentData = data\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth\n    this._mdf = true\n  }\n\n  TextProperty.prototype.searchProperty = function () {\n    return this.searchKeyframes()\n  }\n\n  TextProperty.prototype.searchKeyframes = function () {\n    this.kf = this.data.d.k.length > 1\n    if (this.kf) {\n      this.addEffect(this.getKeyframeValue.bind(this))\n    }\n    return this.kf\n  }\n\n  TextProperty.prototype.addEffect = function (effectFunction) {\n    this.effectsSequence.push(effectFunction)\n    this.elem.addDynamicProperty(this)\n  }\n\n  TextProperty.prototype.getValue = function (_finalValue) {\n    if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\n      return\n    }\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t\n    var currentValue = this.currentData\n    var currentIndex = this.keysIndex\n    if (this.lock) {\n      this.setCurrentData(this.currentData)\n      return\n    }\n    this.lock = true\n    this._mdf = false\n    var i\n    var len = this.effectsSequence.length\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s\n    for (i = 0; i < len; i += 1) {\n      // Checking if index changed to prevent creating a new object every time the expression updates.\n      if (currentIndex !== this.keysIndex) {\n        finalValue = this.effectsSequence[i](finalValue, finalValue.t)\n      } else {\n        finalValue = this.effectsSequence[i](this.currentData, finalValue.t)\n      }\n    }\n    if (currentValue !== finalValue) {\n      this.setCurrentData(finalValue)\n    }\n    this.v = this.currentData\n    this.pv = this.v\n    this.lock = false\n    this.frameId = this.elem.globalData.frameId\n  }\n\n  TextProperty.prototype.getKeyframeValue = function () {\n    var textKeys = this.data.d.k\n    var frameNum = this.elem.comp.renderedFrame\n    var i = 0\n    var len = textKeys.length\n    while (i <= len - 1) {\n      if (i === len - 1 || textKeys[i + 1].t > frameNum) {\n        break\n      }\n      i += 1\n    }\n    if (this.keysIndex !== i) {\n      this.keysIndex = i\n    }\n    return this.data.d.k[this.keysIndex].s\n  }\n\n  TextProperty.prototype.buildFinalText = function (text) {\n    var charactersArray = []\n    var i = 0\n    var len = text.length\n    var charCode\n    var secondCharCode\n    var shouldCombine = false\n    while (i < len) {\n      charCode = text.charCodeAt(i)\n      if (FontManager.isCombinedCharacter(charCode)) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i)\n      } else if (charCode >= 0xd800 && charCode <= 0xdbff) {\n        secondCharCode = text.charCodeAt(i + 1)\n        if (secondCharCode >= 0xdc00 && secondCharCode <= 0xdfff) {\n          if (shouldCombine || FontManager.isModifier(charCode, secondCharCode)) {\n            charactersArray[charactersArray.length - 1] += text.substr(i, 2)\n            shouldCombine = false\n          } else {\n            charactersArray.push(text.substr(i, 2))\n          }\n          i += 1\n        } else {\n          charactersArray.push(text.charAt(i))\n        }\n      } else if (charCode > 0xdbff) {\n        secondCharCode = text.charCodeAt(i + 1)\n        if (FontManager.isZeroWidthJoiner(charCode, secondCharCode)) {\n          shouldCombine = true\n          charactersArray[charactersArray.length - 1] += text.substr(i, 2)\n          i += 1\n        } else {\n          charactersArray.push(text.charAt(i))\n        }\n      } else if (FontManager.isZeroWidthJoiner(charCode)) {\n        charactersArray[charactersArray.length - 1] += text.charAt(i)\n        shouldCombine = true\n      } else {\n        charactersArray.push(text.charAt(i))\n      }\n      i += 1\n    }\n    return charactersArray\n  }\n\n  TextProperty.prototype.completeTextData = function (documentData) {\n    documentData.__complete = true\n    var fontManager = this.elem.globalData.fontManager\n    var data = this.data\n    var letters = []\n    var i\n    var len\n    var newLineFlag\n    var index = 0\n    var val\n    var anchorGrouping = data.m.g\n    var currentSize = 0\n    var currentPos = 0\n    var currentLine = 0\n    var lineWidths = []\n    var lineWidth = 0\n    var maxLineWidth = 0\n    var j\n    var jLen\n    var fontData = fontManager.getFontByName(documentData.f)\n    var charData\n    var cLength = 0\n\n    var fontProps = getFontProperties(fontData)\n    documentData.fWeight = fontProps.weight\n    documentData.fStyle = fontProps.style\n    documentData.finalSize = documentData.s\n    documentData.finalText = this.buildFinalText(documentData.t)\n    len = documentData.finalText.length\n    documentData.finalLineHeight = documentData.lh\n    var trackingOffset = (documentData.tr / 1000) * documentData.finalSize\n    var charCode\n    if (documentData.sz) {\n      var flag = true\n      var boxWidth = documentData.sz[0]\n      var boxHeight = documentData.sz[1]\n      var currentHeight\n      var finalText\n      while (flag) {\n        finalText = this.buildFinalText(documentData.t)\n        currentHeight = 0\n        lineWidth = 0\n        len = finalText.length\n        trackingOffset = (documentData.tr / 1000) * documentData.finalSize\n        var lastSpaceIndex = -1\n        for (i = 0; i < len; i += 1) {\n          charCode = finalText[i].charCodeAt(0)\n          newLineFlag = false\n          if (finalText[i] === ' ') {\n            lastSpaceIndex = i\n          } else if (charCode === 13 || charCode === 3) {\n            lineWidth = 0\n            newLineFlag = true\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2\n          }\n          if (fontManager.chars) {\n            charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily)\n            cLength = newLineFlag ? 0 : (charData.w * documentData.finalSize) / 100\n          } else {\n            // tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\n            cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize)\n          }\n          if (lineWidth + cLength > boxWidth && finalText[i] !== ' ') {\n            if (lastSpaceIndex === -1) {\n              len += 1\n            } else {\n              i = lastSpaceIndex\n            }\n            currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2\n            finalText.splice(i, lastSpaceIndex === i ? 1 : 0, '\\r')\n            // finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\n            lastSpaceIndex = -1\n            lineWidth = 0\n          } else {\n            lineWidth += cLength\n            lineWidth += trackingOffset\n          }\n        }\n        currentHeight += (fontData.ascent * documentData.finalSize) / 100\n        if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\n          documentData.finalSize -= 1\n          documentData.finalLineHeight = (documentData.finalSize * documentData.lh) / documentData.s\n        } else {\n          documentData.finalText = finalText\n          len = documentData.finalText.length\n          flag = false\n        }\n      }\n    }\n    lineWidth = -trackingOffset\n    cLength = 0\n    var uncollapsedSpaces = 0\n    var currentChar\n    for (i = 0; i < len; i += 1) {\n      newLineFlag = false\n      currentChar = documentData.finalText[i]\n      charCode = currentChar.charCodeAt(0)\n      if (charCode === 13 || charCode === 3) {\n        uncollapsedSpaces = 0\n        lineWidths.push(lineWidth)\n        maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth\n        lineWidth = -2 * trackingOffset\n        val = ''\n        newLineFlag = true\n        currentLine += 1\n      } else {\n        val = currentChar\n      }\n      if (fontManager.chars) {\n        charData = fontManager.getCharData(\n          currentChar,\n          fontData.fStyle,\n          fontManager.getFontByName(documentData.f).fFamily,\n        )\n        cLength = newLineFlag ? 0 : (charData.w * documentData.finalSize) / 100\n      } else {\n        // var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\n        // tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\n        cLength = fontManager.measureText(val, documentData.f, documentData.finalSize)\n      }\n\n      //\n      if (currentChar === ' ') {\n        uncollapsedSpaces += cLength + trackingOffset\n      } else {\n        lineWidth += cLength + trackingOffset + uncollapsedSpaces\n        uncollapsedSpaces = 0\n      }\n      letters.push({\n        l: cLength,\n        an: cLength,\n        add: currentSize,\n        n: newLineFlag,\n        anIndexes: [],\n        val: val,\n        line: currentLine,\n        animatorJustifyOffset: 0,\n      })\n      if (anchorGrouping == 2) {\n        // eslint-disable-line eqeqeq\n        currentSize += cLength\n        if (val === '' || val === ' ' || i === len - 1) {\n          if (val === '' || val === ' ') {\n            currentSize -= cLength\n          }\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize\n            letters[currentPos].ind = index\n            letters[currentPos].extra = cLength\n            currentPos += 1\n          }\n          index += 1\n          currentSize = 0\n        }\n      } else if (anchorGrouping == 3) {\n        // eslint-disable-line eqeqeq\n        currentSize += cLength\n        if (val === '' || i === len - 1) {\n          if (val === '') {\n            currentSize -= cLength\n          }\n          while (currentPos <= i) {\n            letters[currentPos].an = currentSize\n            letters[currentPos].ind = index\n            letters[currentPos].extra = cLength\n            currentPos += 1\n          }\n          currentSize = 0\n          index += 1\n        }\n      } else {\n        letters[index].ind = index\n        letters[index].extra = 0\n        index += 1\n      }\n    }\n    documentData.l = letters\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth\n    lineWidths.push(lineWidth)\n    if (documentData.sz) {\n      documentData.boxWidth = documentData.sz[0]\n      documentData.justifyOffset = 0\n    } else {\n      documentData.boxWidth = maxLineWidth\n      switch (documentData.j) {\n        case 1:\n          documentData.justifyOffset = -documentData.boxWidth\n          break\n        case 2:\n          documentData.justifyOffset = -documentData.boxWidth / 2\n          break\n        default:\n          documentData.justifyOffset = 0\n      }\n    }\n    documentData.lineWidths = lineWidths\n\n    var animators = data.a\n    var animatorData\n    var letterData\n    jLen = animators.length\n    var based\n    var ind\n    var indexes = []\n    for (j = 0; j < jLen; j += 1) {\n      animatorData = animators[j]\n      if (animatorData.a.sc) {\n        documentData.strokeColorAnim = true\n      }\n      if (animatorData.a.sw) {\n        documentData.strokeWidthAnim = true\n      }\n      if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\n        documentData.fillColorAnim = true\n      }\n      ind = 0\n      based = animatorData.s.b\n      for (i = 0; i < len; i += 1) {\n        letterData = letters[i]\n        letterData.anIndexes[j] = ind\n        if (\n          (based == 1 && letterData.val !== '') ||\n          (based == 2 && letterData.val !== '' && letterData.val !== ' ') ||\n          (based == 3 && (letterData.n || letterData.val == ' ' || i == len - 1)) ||\n          (based == 4 && (letterData.n || i == len - 1))\n        ) {\n          // eslint-disable-line eqeqeq\n          if (animatorData.s.rn === 1) {\n            indexes.push(ind)\n          }\n          ind += 1\n        }\n      }\n      data.a[j].s.totalChars = ind\n      var currentInd = -1\n      var newInd\n      if (animatorData.s.rn === 1) {\n        for (i = 0; i < len; i += 1) {\n          letterData = letters[i]\n          if (currentInd != letterData.anIndexes[j]) {\n            // eslint-disable-line eqeqeq\n            currentInd = letterData.anIndexes[j]\n            newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0]\n          }\n          letterData.anIndexes[j] = newInd\n        }\n      }\n    }\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2\n    documentData.ls = documentData.ls || 0\n    documentData.ascent = (fontData.ascent * documentData.finalSize) / 100\n  }\n\n  TextProperty.prototype.updateDocumentData = function (newData, index) {\n    index = index === undefined ? this.keysIndex : index\n    var dData = this.copyData({}, this.data.d.k[index].s)\n    dData = this.copyData(dData, newData)\n    this.data.d.k[index].s = dData\n    this.recalculate(index)\n    this.elem.addDynamicProperty(this)\n  }\n\n  TextProperty.prototype.recalculate = function (index) {\n    var dData = this.data.d.k[index].s\n    dData.__complete = false\n    this.keysIndex = 0\n    this._isFirstFrame = true\n    this.getValue(dData)\n  }\n\n  TextProperty.prototype.canResizeFont = function (_canResize) {\n    this.canResize = _canResize\n    this.recalculate(this.keysIndex)\n    this.elem.addDynamicProperty(this)\n  }\n\n  TextProperty.prototype.setMinimumFontSize = function (_fontValue) {\n    this.minimumFontSize = Math.floor(_fontValue) || 1\n    this.recalculate(this.keysIndex)\n    this.elem.addDynamicProperty(this)\n  }\n\n  const TextSelectorProp = (function () {\n    var max = Math.max\n    var min = Math.min\n    var floor = Math.floor\n\n    function TextSelectorPropFactory(elem, data) {\n      this._currentTextLength = -1\n      this.k = false\n      this.data = data\n      this.elem = elem\n      this.comp = elem.comp\n      this.finalS = 0\n      this.finalE = 0\n      this.initDynamicPropertyContainer(elem)\n      this.s = PropertyFactory.getProp(elem, data.s || { k: 0 }, 0, 0, this)\n      if ('e' in data) {\n        this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this)\n      } else {\n        this.e = { v: 100 }\n      }\n      this.o = PropertyFactory.getProp(elem, data.o || { k: 0 }, 0, 0, this)\n      this.xe = PropertyFactory.getProp(elem, data.xe || { k: 0 }, 0, 0, this)\n      this.ne = PropertyFactory.getProp(elem, data.ne || { k: 0 }, 0, 0, this)\n      this.sm = PropertyFactory.getProp(elem, data.sm || { k: 100 }, 0, 0, this)\n      this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this)\n      if (!this.dynamicProperties.length) {\n        this.getValue()\n      }\n    }\n\n    TextSelectorPropFactory.prototype = {\n      getMult: function (ind) {\n        if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\n          this.getValue()\n        }\n        var x1 = 0\n        var y1 = 0\n        var x2 = 1\n        var y2 = 1\n        if (this.ne.v > 0) {\n          x1 = this.ne.v / 100.0\n        } else {\n          y1 = -this.ne.v / 100.0\n        }\n        if (this.xe.v > 0) {\n          x2 = 1.0 - this.xe.v / 100.0\n        } else {\n          y2 = 1.0 + this.xe.v / 100.0\n        }\n        var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get\n\n        var mult = 0\n        var s = this.finalS\n        var e = this.finalE\n        var type = this.data.sh\n        if (type === 2) {\n          if (e === s) {\n            mult = ind >= e ? 1 : 0\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1))\n          }\n          mult = easer(mult)\n        } else if (type === 3) {\n          if (e === s) {\n            mult = ind >= e ? 0 : 1\n          } else {\n            mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1))\n          }\n\n          mult = easer(mult)\n        } else if (type === 4) {\n          if (e === s) {\n            mult = 0\n          } else {\n            mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1))\n            if (mult < 0.5) {\n              mult *= 2\n            } else {\n              mult = 1 - 2 * (mult - 0.5)\n            }\n          }\n          mult = easer(mult)\n        } else if (type === 5) {\n          if (e === s) {\n            mult = 0\n          } else {\n            var tot = e - s\n            /* ind += 0.5;\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind; */\n            ind = min(max(0, ind + 0.5 - s), e - s)\n            var x = -tot / 2 + ind\n            var a = tot / 2\n            mult = Math.sqrt(1 - (x * x) / (a * a))\n          }\n          mult = easer(mult)\n        } else if (type === 6) {\n          if (e === s) {\n            mult = 0\n          } else {\n            ind = min(max(0, ind + 0.5 - s), e - s)\n            mult = (1 + Math.cos(Math.PI + (Math.PI * 2 * ind) / (e - s))) / 2 // eslint-disable-line\n          }\n          mult = easer(mult)\n        } else {\n          if (ind >= floor(s)) {\n            if (ind - s < 0) {\n              mult = max(0, min(min(e, 1) - (s - ind), 1))\n            } else {\n              mult = max(0, min(e - ind, 1))\n            }\n          }\n          mult = easer(mult)\n        }\n        // Smoothness implementation.\n        // The smoothness represents a reduced range of the original [0; 1] range.\n        // if smoothness is 25%, the new range will be [0.375; 0.625]\n        // Steps are:\n        // - find the lower value of the new range (threshold)\n        // - if multiplier is smaller than that value, floor it to 0\n        // - if it is larger,\n        //     - subtract the threshold\n        //     - divide it by the smoothness (this will return the range to [0; 1])\n        // Note: If it doesn't work on some scenarios, consider applying it before the easer.\n        if (this.sm.v !== 100) {\n          var smoothness = this.sm.v * 0.01\n          if (smoothness === 0) {\n            smoothness = 0.00000001\n          }\n          var threshold = 0.5 - smoothness * 0.5\n          if (mult < threshold) {\n            mult = 0\n          } else {\n            mult = (mult - threshold) / smoothness\n            if (mult > 1) {\n              mult = 1\n            }\n          }\n        }\n        return mult * this.a.v\n      },\n      getValue: function (newCharsFlag) {\n        this.iterateDynamicProperties()\n        this._mdf = newCharsFlag || this._mdf\n        this._currentTextLength = this.elem.textProperty.currentData.l.length || 0\n        if (newCharsFlag && this.data.r === 2) {\n          this.e.v = this._currentTextLength\n        }\n        var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars\n        var o = this.o.v / divisor\n        var s = this.s.v / divisor + o\n        var e = this.e.v / divisor + o\n        if (s > e) {\n          var _s = s\n          s = e\n          e = _s\n        }\n        this.finalS = s\n        this.finalE = e\n      },\n    }\n    extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory)\n\n    function getTextSelectorProp(elem, data, arr) {\n      return new TextSelectorPropFactory(elem, data, arr)\n    }\n\n    return {\n      getTextSelectorProp: getTextSelectorProp,\n    }\n  })()\n\n  function TextAnimatorDataProperty(elem, animatorProps, container) {\n    var defaultData = { propType: false }\n    var getProp = PropertyFactory.getProp\n    var textAnimatorAnimatables = animatorProps.a\n    this.a = {\n      r: textAnimatorAnimatables.r ? getProp(elem, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,\n      rx: textAnimatorAnimatables.rx ? getProp(elem, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,\n      ry: textAnimatorAnimatables.ry ? getProp(elem, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,\n      sk: textAnimatorAnimatables.sk ? getProp(elem, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,\n      sa: textAnimatorAnimatables.sa ? getProp(elem, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,\n      s: textAnimatorAnimatables.s ? getProp(elem, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,\n      a: textAnimatorAnimatables.a ? getProp(elem, textAnimatorAnimatables.a, 1, 0, container) : defaultData,\n      o: textAnimatorAnimatables.o ? getProp(elem, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,\n      p: textAnimatorAnimatables.p ? getProp(elem, textAnimatorAnimatables.p, 1, 0, container) : defaultData,\n      sw: textAnimatorAnimatables.sw ? getProp(elem, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,\n      sc: textAnimatorAnimatables.sc ? getProp(elem, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,\n      fc: textAnimatorAnimatables.fc ? getProp(elem, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,\n      fh: textAnimatorAnimatables.fh ? getProp(elem, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,\n      fs: textAnimatorAnimatables.fs ? getProp(elem, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,\n      fb: textAnimatorAnimatables.fb ? getProp(elem, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,\n      t: textAnimatorAnimatables.t ? getProp(elem, textAnimatorAnimatables.t, 0, 0, container) : defaultData,\n    }\n\n    this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container)\n    this.s.t = animatorProps.s.t\n  }\n\n  function TextAnimatorProperty(textData, renderType, elem) {\n    this._isFirstFrame = true\n    this._hasMaskedPath = false\n    this._frameId = -1\n    this._textData = textData\n    this._renderType = renderType\n    this._elem = elem\n    this._animatorsData = createSizedArray(this._textData.a.length)\n    this._pathData = {}\n    this._moreOptions = {\n      alignment: {},\n    }\n    this.renderedLetters = []\n    this.lettersChangedFlag = false\n    this.initDynamicPropertyContainer(elem)\n  }\n\n  TextAnimatorProperty.prototype.searchProperties = function () {\n    var i\n    var len = this._textData.a.length\n    var animatorProps\n    var getProp = PropertyFactory.getProp\n    for (i = 0; i < len; i += 1) {\n      animatorProps = this._textData.a[i]\n      this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this)\n    }\n    if (this._textData.p && 'm' in this._textData.p) {\n      this._pathData = {\n        a: getProp(this._elem, this._textData.p.a, 0, 0, this),\n        f: getProp(this._elem, this._textData.p.f, 0, 0, this),\n        l: getProp(this._elem, this._textData.p.l, 0, 0, this),\n        r: getProp(this._elem, this._textData.p.r, 0, 0, this),\n        p: getProp(this._elem, this._textData.p.p, 0, 0, this),\n        m: this._elem.maskManager.getMaskProperty(this._textData.p.m),\n      }\n      this._hasMaskedPath = true\n    } else {\n      this._hasMaskedPath = false\n    }\n    this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this)\n  }\n\n  TextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\n    this.lettersChangedFlag = lettersChangedFlag\n    if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\n      return\n    }\n    this._isFirstFrame = false\n    var alignment = this._moreOptions.alignment.v\n    var animators = this._animatorsData\n    var textData = this._textData\n    var matrixHelper = this.mHelper\n    var renderType = this._renderType\n    var renderedLettersCount = this.renderedLetters.length\n    var xPos\n    var yPos\n    var i\n    var len\n    var letters = documentData.l\n    var pathInfo\n    var currentLength\n    var currentPoint\n    var segmentLength\n    var flag\n    var pointInd\n    var segmentInd\n    var prevPoint\n    var points\n    var segments\n    var partialLength\n    var totalLength\n    var perc\n    var tanAngle\n    var mask\n    if (this._hasMaskedPath) {\n      mask = this._pathData.m\n      if (!this._pathData.n || this._pathData._mdf) {\n        var paths = mask.v\n        if (this._pathData.r.v) {\n          paths = paths.reverse()\n        }\n        // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\n        pathInfo = {\n          tLength: 0,\n          segments: [],\n        }\n        len = paths._length - 1\n        var bezierData\n        totalLength = 0\n        for (i = 0; i < len; i += 1) {\n          bezierData = bez.buildBezierData(\n            paths.v[i],\n            paths.v[i + 1],\n            [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\n            [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]],\n          )\n          pathInfo.tLength += bezierData.segmentLength\n          pathInfo.segments.push(bezierData)\n          totalLength += bezierData.segmentLength\n        }\n        i = len\n        if (mask.v.c) {\n          bezierData = bez.buildBezierData(\n            paths.v[i],\n            paths.v[0],\n            [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\n            [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]],\n          )\n          pathInfo.tLength += bezierData.segmentLength\n          pathInfo.segments.push(bezierData)\n          totalLength += bezierData.segmentLength\n        }\n        this._pathData.pi = pathInfo\n      }\n      pathInfo = this._pathData.pi\n\n      currentLength = this._pathData.f.v\n      segmentInd = 0\n      pointInd = 1\n      segmentLength = 0\n      flag = true\n      segments = pathInfo.segments\n      if (currentLength < 0 && mask.v.c) {\n        if (pathInfo.tLength < Math.abs(currentLength)) {\n          currentLength = -Math.abs(currentLength) % pathInfo.tLength\n        }\n        segmentInd = segments.length - 1\n        points = segments[segmentInd].points\n        pointInd = points.length - 1\n        while (currentLength < 0) {\n          currentLength += points[pointInd].partialLength\n          pointInd -= 1\n          if (pointInd < 0) {\n            segmentInd -= 1\n            points = segments[segmentInd].points\n            pointInd = points.length - 1\n          }\n        }\n      }\n      points = segments[segmentInd].points\n      prevPoint = points[pointInd - 1]\n      currentPoint = points[pointInd]\n      partialLength = currentPoint.partialLength\n    }\n\n    len = letters.length\n    xPos = 0\n    yPos = 0\n    var yOff = documentData.finalSize * 1.2 * 0.714\n    var firstLine = true\n    var animatorProps\n    var animatorSelector\n    var j\n    var jLen\n    var letterValue\n\n    jLen = animators.length\n\n    var mult\n    var ind = -1\n    var offf\n    var xPathPos\n    var yPathPos\n    var initPathPos = currentLength\n    var initSegmentInd = segmentInd\n    var initPointInd = pointInd\n    var currentLine = -1\n    var elemOpacity\n    var sc\n    var sw\n    var fc\n    var k\n    var letterSw\n    var letterSc\n    var letterFc\n    var letterM = ''\n    var letterP = this.defaultPropsArray\n    var letterO\n\n    //\n    if (documentData.j === 2 || documentData.j === 1) {\n      var animatorJustifyOffset = 0\n      var animatorFirstCharOffset = 0\n      var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1\n      var lastIndex = 0\n      var isNewLine = true\n\n      for (i = 0; i < len; i += 1) {\n        if (letters[i].n) {\n          if (animatorJustifyOffset) {\n            animatorJustifyOffset += animatorFirstCharOffset\n          }\n          while (lastIndex < i) {\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset\n            lastIndex += 1\n          }\n          animatorJustifyOffset = 0\n          isNewLine = true\n        } else {\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a\n            if (animatorProps.t.propType) {\n              if (isNewLine && documentData.j === 2) {\n                animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult\n              }\n              animatorSelector = animators[j].s\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n              if (mult.length) {\n                animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult\n              } else {\n                animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult\n              }\n            }\n          }\n          isNewLine = false\n        }\n      }\n      if (animatorJustifyOffset) {\n        animatorJustifyOffset += animatorFirstCharOffset\n      }\n      while (lastIndex < i) {\n        letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset\n        lastIndex += 1\n      }\n    }\n    //\n\n    for (i = 0; i < len; i += 1) {\n      matrixHelper.reset()\n      elemOpacity = 1\n      if (letters[i].n) {\n        xPos = 0\n        yPos += documentData.yOffset\n        yPos += firstLine ? 1 : 0\n        currentLength = initPathPos\n        firstLine = false\n        if (this._hasMaskedPath) {\n          segmentInd = initSegmentInd\n          pointInd = initPointInd\n          points = segments[segmentInd].points\n          prevPoint = points[pointInd - 1]\n          currentPoint = points[pointInd]\n          partialLength = currentPoint.partialLength\n          segmentLength = 0\n        }\n        letterM = ''\n        letterFc = ''\n        letterSw = ''\n        letterO = ''\n        letterP = this.defaultPropsArray\n      } else {\n        if (this._hasMaskedPath) {\n          if (currentLine !== letters[i].line) {\n            switch (documentData.j) {\n              case 1:\n                currentLength += totalLength - documentData.lineWidths[letters[i].line]\n                break\n              case 2:\n                currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2\n                break\n              default:\n                break\n            }\n            currentLine = letters[i].line\n          }\n          if (ind !== letters[i].ind) {\n            if (letters[ind]) {\n              currentLength += letters[ind].extra\n            }\n            currentLength += letters[i].an / 2\n            ind = letters[i].ind\n          }\n          currentLength += alignment[0] * letters[i].an * 0.005\n          var animatorOffset = 0\n          for (j = 0; j < jLen; j += 1) {\n            animatorProps = animators[j].a\n            if (animatorProps.p.propType) {\n              animatorSelector = animators[j].s\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n              if (mult.length) {\n                animatorOffset += animatorProps.p.v[0] * mult[0]\n              } else {\n                animatorOffset += animatorProps.p.v[0] * mult\n              }\n            }\n            if (animatorProps.a.propType) {\n              animatorSelector = animators[j].s\n              mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n              if (mult.length) {\n                animatorOffset += animatorProps.a.v[0] * mult[0]\n              } else {\n                animatorOffset += animatorProps.a.v[0] * mult\n              }\n            }\n          }\n          flag = true\n          // Force alignment only works with a single line for now\n          if (this._pathData.a.v) {\n            currentLength =\n              letters[0].an * 0.5 +\n              ((totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind) /\n                (len - 1)\n            currentLength += this._pathData.f.v\n          }\n          while (flag) {\n            if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\n              perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength\n              xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc\n              yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc\n              matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -(alignment[1] * yOff) * 0.01)\n              flag = false\n            } else if (points) {\n              segmentLength += currentPoint.partialLength\n              pointInd += 1\n              if (pointInd >= points.length) {\n                pointInd = 0\n                segmentInd += 1\n                if (!segments[segmentInd]) {\n                  if (mask.v.c) {\n                    pointInd = 0\n                    segmentInd = 0\n                    points = segments[segmentInd].points\n                  } else {\n                    segmentLength -= currentPoint.partialLength\n                    points = null\n                  }\n                } else {\n                  points = segments[segmentInd].points\n                }\n              }\n              if (points) {\n                prevPoint = currentPoint\n                currentPoint = points[pointInd]\n                partialLength = currentPoint.partialLength\n              }\n            }\n          }\n          offf = letters[i].an / 2 - letters[i].add\n          matrixHelper.translate(-offf, 0, 0)\n        } else {\n          offf = letters[i].an / 2 - letters[i].add\n          matrixHelper.translate(-offf, 0, 0)\n\n          // Grouping alignment\n          matrixHelper.translate(-alignment[0] * letters[i].an * 0.005, -alignment[1] * yOff * 0.01, 0)\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n          if (animatorProps.t.propType) {\n            animatorSelector = animators[j].s\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n            // This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\n            if (xPos !== 0 || documentData.j !== 0) {\n              if (this._hasMaskedPath) {\n                if (mult.length) {\n                  currentLength += animatorProps.t.v * mult[0]\n                } else {\n                  currentLength += animatorProps.t.v * mult\n                }\n              } else if (mult.length) {\n                xPos += animatorProps.t.v * mult[0]\n              } else {\n                xPos += animatorProps.t.v * mult\n              }\n            }\n          }\n        }\n        if (documentData.strokeWidthAnim) {\n          sw = documentData.sw || 0\n        }\n        if (documentData.strokeColorAnim) {\n          if (documentData.sc) {\n            sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]]\n          } else {\n            sc = [0, 0, 0]\n          }\n        }\n        if (documentData.fillColorAnim && documentData.fc) {\n          fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]]\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n          if (animatorProps.a.propType) {\n            animatorSelector = animators[j].s\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n\n            if (mult.length) {\n              matrixHelper.translate(\n                -animatorProps.a.v[0] * mult[0],\n                -animatorProps.a.v[1] * mult[1],\n                animatorProps.a.v[2] * mult[2],\n              )\n            } else {\n              matrixHelper.translate(\n                -animatorProps.a.v[0] * mult,\n                -animatorProps.a.v[1] * mult,\n                animatorProps.a.v[2] * mult,\n              )\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n          if (animatorProps.s.propType) {\n            animatorSelector = animators[j].s\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n            if (mult.length) {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult[0], 1 + (animatorProps.s.v[1] - 1) * mult[1], 1)\n            } else {\n              matrixHelper.scale(1 + (animatorProps.s.v[0] - 1) * mult, 1 + (animatorProps.s.v[1] - 1) * mult, 1)\n            }\n          }\n        }\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n          animatorSelector = animators[j].s\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n          if (animatorProps.sk.propType) {\n            if (mult.length) {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1])\n            } else {\n              matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult)\n            }\n          }\n          if (animatorProps.r.propType) {\n            if (mult.length) {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult[2])\n            } else {\n              matrixHelper.rotateZ(-animatorProps.r.v * mult)\n            }\n          }\n          if (animatorProps.ry.propType) {\n            if (mult.length) {\n              matrixHelper.rotateY(animatorProps.ry.v * mult[1])\n            } else {\n              matrixHelper.rotateY(animatorProps.ry.v * mult)\n            }\n          }\n          if (animatorProps.rx.propType) {\n            if (mult.length) {\n              matrixHelper.rotateX(animatorProps.rx.v * mult[0])\n            } else {\n              matrixHelper.rotateX(animatorProps.rx.v * mult)\n            }\n          }\n          if (animatorProps.o.propType) {\n            if (mult.length) {\n              elemOpacity += (animatorProps.o.v * mult[0] - elemOpacity) * mult[0]\n            } else {\n              elemOpacity += (animatorProps.o.v * mult - elemOpacity) * mult\n            }\n          }\n          if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\n            if (mult.length) {\n              sw += animatorProps.sw.v * mult[0]\n            } else {\n              sw += animatorProps.sw.v * mult\n            }\n          }\n          if (documentData.strokeColorAnim && animatorProps.sc.propType) {\n            for (k = 0; k < 3; k += 1) {\n              if (mult.length) {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult[0]\n              } else {\n                sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult\n              }\n            }\n          }\n          if (documentData.fillColorAnim && documentData.fc) {\n            if (animatorProps.fc.propType) {\n              for (k = 0; k < 3; k += 1) {\n                if (mult.length) {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult[0]\n                } else {\n                  fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult\n                }\n              }\n            }\n            if (animatorProps.fh.propType) {\n              if (mult.length) {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult[0])\n              } else {\n                fc = addHueToRGB(fc, animatorProps.fh.v * mult)\n              }\n            }\n            if (animatorProps.fs.propType) {\n              if (mult.length) {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0])\n              } else {\n                fc = addSaturationToRGB(fc, animatorProps.fs.v * mult)\n              }\n            }\n            if (animatorProps.fb.propType) {\n              if (mult.length) {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0])\n              } else {\n                fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult)\n              }\n            }\n          }\n        }\n\n        for (j = 0; j < jLen; j += 1) {\n          animatorProps = animators[j].a\n\n          if (animatorProps.p.propType) {\n            animatorSelector = animators[j].s\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars)\n            if (this._hasMaskedPath) {\n              if (mult.length) {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1])\n              } else {\n                matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult)\n              }\n            } else if (mult.length) {\n              matrixHelper.translate(\n                animatorProps.p.v[0] * mult[0],\n                animatorProps.p.v[1] * mult[1],\n                -animatorProps.p.v[2] * mult[2],\n              )\n            } else {\n              matrixHelper.translate(\n                animatorProps.p.v[0] * mult,\n                animatorProps.p.v[1] * mult,\n                -animatorProps.p.v[2] * mult,\n              )\n            }\n          }\n        }\n        if (documentData.strokeWidthAnim) {\n          letterSw = sw < 0 ? 0 : sw\n        }\n        if (documentData.strokeColorAnim) {\n          letterSc =\n            'rgb(' + Math.round(sc[0] * 255) + ',' + Math.round(sc[1] * 255) + ',' + Math.round(sc[2] * 255) + ')'\n        }\n        if (documentData.fillColorAnim && documentData.fc) {\n          letterFc =\n            'rgb(' + Math.round(fc[0] * 255) + ',' + Math.round(fc[1] * 255) + ',' + Math.round(fc[2] * 255) + ')'\n        }\n\n        if (this._hasMaskedPath) {\n          matrixHelper.translate(0, -documentData.ls)\n\n          matrixHelper.translate(0, alignment[1] * yOff * 0.01 + yPos, 0)\n          if (this._pathData.p.v) {\n            tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0])\n            var rot = (Math.atan(tanAngle) * 180) / Math.PI\n            if (currentPoint.point[0] < prevPoint.point[0]) {\n              rot += 180\n            }\n            matrixHelper.rotate((-rot * Math.PI) / 180)\n          }\n          matrixHelper.translate(xPathPos, yPathPos, 0)\n          currentLength -= alignment[0] * letters[i].an * 0.005\n          if (letters[i + 1] && ind !== letters[i + 1].ind) {\n            currentLength += letters[i].an / 2\n            currentLength += documentData.tr * 0.001 * documentData.finalSize\n          }\n        } else {\n          matrixHelper.translate(xPos, yPos, 0)\n\n          if (documentData.ps) {\n            // matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\n            matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0)\n          }\n          switch (documentData.j) {\n            case 1:\n              matrixHelper.translate(\n                letters[i].animatorJustifyOffset +\n                  documentData.justifyOffset +\n                  (documentData.boxWidth - documentData.lineWidths[letters[i].line]),\n                0,\n                0,\n              )\n              break\n            case 2:\n              matrixHelper.translate(\n                letters[i].animatorJustifyOffset +\n                  documentData.justifyOffset +\n                  (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2,\n                0,\n                0,\n              )\n              break\n            default:\n              break\n          }\n          matrixHelper.translate(0, -documentData.ls)\n          matrixHelper.translate(offf, 0, 0)\n          matrixHelper.translate(alignment[0] * letters[i].an * 0.005, alignment[1] * yOff * 0.01, 0)\n          xPos += letters[i].l + documentData.tr * 0.001 * documentData.finalSize\n        }\n        if (renderType === 'html') {\n          letterM = matrixHelper.toCSS()\n        } else if (renderType === 'svg') {\n          letterM = matrixHelper.to2dCSS()\n        } else {\n          letterP = [\n            matrixHelper.props[0],\n            matrixHelper.props[1],\n            matrixHelper.props[2],\n            matrixHelper.props[3],\n            matrixHelper.props[4],\n            matrixHelper.props[5],\n            matrixHelper.props[6],\n            matrixHelper.props[7],\n            matrixHelper.props[8],\n            matrixHelper.props[9],\n            matrixHelper.props[10],\n            matrixHelper.props[11],\n            matrixHelper.props[12],\n            matrixHelper.props[13],\n            matrixHelper.props[14],\n            matrixHelper.props[15],\n          ]\n        }\n        letterO = elemOpacity\n      }\n\n      if (renderedLettersCount <= i) {\n        letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP)\n        this.renderedLetters.push(letterValue)\n        renderedLettersCount += 1\n        this.lettersChangedFlag = true\n      } else {\n        letterValue = this.renderedLetters[i]\n        this.lettersChangedFlag =\n          letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag\n      }\n    }\n  }\n\n  TextAnimatorProperty.prototype.getValue = function () {\n    if (this._elem.globalData.frameId === this._frameId) {\n      return\n    }\n    this._frameId = this._elem.globalData.frameId\n    this.iterateDynamicProperties()\n  }\n\n  TextAnimatorProperty.prototype.mHelper = new Matrix()\n  TextAnimatorProperty.prototype.defaultPropsArray = []\n  extendPrototype([DynamicPropertyContainer], TextAnimatorProperty)\n\n  function ITextElement() {}\n\n  ITextElement.prototype.initElement = function (data, globalData, comp) {\n    this.lettersChangedFlag = true\n    this.initFrame()\n    this.initBaseData(data, globalData, comp)\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties)\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this)\n    this.initTransform(data, globalData, comp)\n    this.initHierarchy()\n    this.initRenderable()\n    this.initRendererElement()\n    this.createContainerElements()\n    this.createRenderableComponents()\n    this.createContent()\n    this.hide()\n    this.textAnimator.searchProperties(this.dynamicProperties)\n  }\n\n  ITextElement.prototype.prepareFrame = function (num) {\n    this._mdf = false\n    this.prepareRenderableFrame(num)\n    this.prepareProperties(num, this.isInRange)\n    if (this.textProperty._mdf || this.textProperty._isFirstFrame) {\n      this.buildNewText()\n      this.textProperty._isFirstFrame = false\n      this.textProperty._mdf = false\n    }\n  }\n\n  ITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\n    var j\n    var jLen = shapes.length\n    var pathNodes\n    var shapeStr = ''\n    for (j = 0; j < jLen; j += 1) {\n      if (shapes[j].ty === 'sh') {\n        pathNodes = shapes[j].ks.k\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper)\n      }\n    }\n    return shapeStr\n  }\n\n  ITextElement.prototype.updateDocumentData = function (newData, index) {\n    this.textProperty.updateDocumentData(newData, index)\n  }\n\n  ITextElement.prototype.canResizeFont = function (_canResize) {\n    this.textProperty.canResizeFont(_canResize)\n  }\n\n  ITextElement.prototype.setMinimumFontSize = function (_fontSize) {\n    this.textProperty.setMinimumFontSize(_fontSize)\n  }\n\n  ITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\n    if (documentData.ps) {\n      matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0)\n    }\n    matrixHelper.translate(0, -documentData.ls, 0)\n    switch (documentData.j) {\n      case 1:\n        matrixHelper.translate(\n          documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),\n          0,\n          0,\n        )\n        break\n      case 2:\n        matrixHelper.translate(\n          documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2,\n          0,\n          0,\n        )\n        break\n      default:\n        break\n    }\n    matrixHelper.translate(xPos, yPos, 0)\n  }\n\n  ITextElement.prototype.buildColor = function (colorData) {\n    return (\n      'rgb(' +\n      Math.round(colorData[0] * 255) +\n      ',' +\n      Math.round(colorData[1] * 255) +\n      ',' +\n      Math.round(colorData[2] * 255) +\n      ')'\n    )\n  }\n\n  ITextElement.prototype.emptyProp = new LetterProps()\n\n  ITextElement.prototype.destroy = function () {}\n\n  var emptyShapeData = {\n    shapes: [],\n  }\n\n  function SVGTextLottieElement(data, globalData, comp) {\n    this.textSpans = []\n    this.renderType = 'svg'\n    this.initElement(data, globalData, comp)\n  }\n\n  extendPrototype(\n    [BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement],\n    SVGTextLottieElement,\n  )\n\n  SVGTextLottieElement.prototype.createContent = function () {\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\n      this.textContainer = createNS('text')\n    }\n  }\n\n  SVGTextLottieElement.prototype.buildTextContents = function (textArray) {\n    var i = 0\n    var len = textArray.length\n    var textContents = []\n    var currentTextContent = ''\n    while (i < len) {\n      if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\n        textContents.push(currentTextContent)\n        currentTextContent = ''\n      } else {\n        currentTextContent += textArray[i]\n      }\n      i += 1\n    }\n    textContents.push(currentTextContent)\n    return textContents\n  }\n\n  SVGTextLottieElement.prototype.buildShapeData = function (data, scale) {\n    // data should probably be cloned to apply scale separately to each instance of a text on different layers\n    // but since text internal content gets only rendered once and then it's never rerendered,\n    // it's probably safe not to clone data and reuse always the same instance even if the object is mutated.\n    // Avoiding cloning is preferred since cloning each character shape data is expensive\n    if (data.shapes && data.shapes.length) {\n      var shape = data.shapes[0]\n      if (shape.it) {\n        var shapeItem = shape.it[shape.it.length - 1]\n        if (shapeItem.s) {\n          shapeItem.s.k[0] = scale\n          shapeItem.s.k[1] = scale\n        }\n      }\n    }\n    return data\n  }\n\n  SVGTextLottieElement.prototype.buildNewText = function () {\n    this.addDynamicProperty(this)\n    var i\n    var len\n\n    var documentData = this.textProperty.currentData\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0)\n    if (documentData.fc) {\n      this.layerElement.setAttribute('fill', this.buildColor(documentData.fc))\n    } else {\n      this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)')\n    }\n    if (documentData.sc) {\n      this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc))\n      this.layerElement.setAttribute('stroke-width', documentData.sw)\n    }\n    this.layerElement.setAttribute('font-size', documentData.finalSize)\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f)\n    if (fontData.fClass) {\n      this.layerElement.setAttribute('class', fontData.fClass)\n    } else {\n      this.layerElement.setAttribute('font-family', fontData.fFamily)\n      var fWeight = documentData.fWeight\n      var fStyle = documentData.fStyle\n      this.layerElement.setAttribute('font-style', fStyle)\n      this.layerElement.setAttribute('font-weight', fWeight)\n    }\n    this.layerElement.setAttribute('aria-label', documentData.t)\n\n    var letters = documentData.l || []\n    var usesGlyphs = !!this.globalData.fontManager.chars\n    len = letters.length\n\n    var tSpan\n    var matrixHelper = this.mHelper\n    var shapeStr = ''\n    var singleShape = this.data.singleShape\n    var xPos = 0\n    var yPos = 0\n    var firstLine = true\n    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize\n    if (singleShape && !usesGlyphs && !documentData.sz) {\n      var tElement = this.textContainer\n      var justify = 'start'\n      switch (documentData.j) {\n        case 1:\n          justify = 'end'\n          break\n        case 2:\n          justify = 'middle'\n          break\n        default:\n          justify = 'start'\n          break\n      }\n      tElement.setAttribute('text-anchor', justify)\n      tElement.setAttribute('letter-spacing', trackingOffset)\n      var textContent = this.buildTextContents(documentData.finalText)\n      len = textContent.length\n      yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0\n      for (i = 0; i < len; i += 1) {\n        tSpan = this.textSpans[i].span || createNS('tspan')\n        tSpan.textContent = textContent[i]\n        tSpan.setAttribute('x', 0)\n        tSpan.setAttribute('y', yPos)\n        tSpan.style.display = 'inherit'\n        tElement.appendChild(tSpan)\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            glyph: null,\n          }\n        }\n        this.textSpans[i].span = tSpan\n        yPos += documentData.finalLineHeight\n      }\n\n      this.layerElement.appendChild(tElement)\n    } else {\n      var cachedSpansLength = this.textSpans.length\n      var charData\n      for (i = 0; i < len; i += 1) {\n        if (!this.textSpans[i]) {\n          this.textSpans[i] = {\n            span: null,\n            childSpan: null,\n            glyph: null,\n          }\n        }\n        if (!usesGlyphs || !singleShape || i === 0) {\n          tSpan = cachedSpansLength > i ? this.textSpans[i].span : createNS(usesGlyphs ? 'g' : 'text')\n          if (cachedSpansLength <= i) {\n            tSpan.setAttribute('stroke-linecap', 'butt')\n            tSpan.setAttribute('stroke-linejoin', 'round')\n            tSpan.setAttribute('stroke-miterlimit', '4')\n            this.textSpans[i].span = tSpan\n            if (usesGlyphs) {\n              var childSpan = createNS('g')\n              tSpan.appendChild(childSpan)\n              this.textSpans[i].childSpan = childSpan\n            }\n            this.textSpans[i].span = tSpan\n            this.layerElement.appendChild(tSpan)\n          }\n          tSpan.style.display = 'inherit'\n        }\n\n        matrixHelper.reset()\n        if (singleShape) {\n          if (letters[i].n) {\n            xPos = -trackingOffset\n            yPos += documentData.yOffset\n            yPos += firstLine ? 1 : 0\n            firstLine = false\n          }\n          this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos)\n          xPos += letters[i].l || 0\n          // xPos += letters[i].val === ' ' ? 0 : trackingOffset;\n          xPos += trackingOffset\n        }\n        if (usesGlyphs) {\n          charData = this.globalData.fontManager.getCharData(\n            documentData.finalText[i],\n            fontData.fStyle,\n            this.globalData.fontManager.getFontByName(documentData.f).fFamily,\n          )\n          var glyphElement\n          // t === 1 means the character has been replaced with an animated shaped\n          if (charData.t === 1) {\n            glyphElement = new SVGCompElement(charData.data, this.globalData, this)\n          } else {\n            var data = emptyShapeData\n            if (charData.data && charData.data.shapes) {\n              data = this.buildShapeData(charData.data, documentData.finalSize)\n            }\n            glyphElement = new SVGShapeElement(data, this.globalData, this)\n          }\n          if (this.textSpans[i].glyph) {\n            var glyph = this.textSpans[i].glyph\n            this.textSpans[i].childSpan.removeChild(glyph.layerElement)\n            glyph.destroy()\n          }\n          this.textSpans[i].glyph = glyphElement\n          glyphElement._debug = true\n          glyphElement.prepareFrame(0)\n          glyphElement.renderFrame()\n          this.textSpans[i].childSpan.appendChild(glyphElement.layerElement)\n          // when using animated shapes, the layer will be scaled instead of replacing the internal scale\n          // this might have issues with strokes and might need a different solution\n          if (charData.t === 1) {\n            this.textSpans[i].childSpan.setAttribute(\n              'transform',\n              'scale(' + documentData.finalSize / 100 + ',' + documentData.finalSize / 100 + ')',\n            )\n          }\n        } else {\n          if (singleShape) {\n            tSpan.setAttribute('transform', 'translate(' + matrixHelper.props[12] + ',' + matrixHelper.props[13] + ')')\n          }\n          tSpan.textContent = letters[i].val\n          tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve')\n        }\n        //\n      }\n      if (singleShape && tSpan) {\n        tSpan.setAttribute('d', shapeStr)\n      }\n    }\n    while (i < this.textSpans.length) {\n      this.textSpans[i].span.style.display = 'none'\n      i += 1\n    }\n\n    this._sizeChanged = true\n  }\n\n  SVGTextLottieElement.prototype.sourceRectAtTime = function () {\n    this.prepareFrame(this.comp.renderedFrame - this.data.st)\n    this.renderInnerContent()\n    if (this._sizeChanged) {\n      this._sizeChanged = false\n      var textBox = this.layerElement.getBBox()\n      this.bbox = {\n        top: textBox.y,\n        left: textBox.x,\n        width: textBox.width,\n        height: textBox.height,\n      }\n    }\n    return this.bbox\n  }\n\n  SVGTextLottieElement.prototype.getValue = function () {\n    var i\n    var len = this.textSpans.length\n    var glyphElement\n    this.renderedFrame = this.comp.renderedFrame\n    for (i = 0; i < len; i += 1) {\n      glyphElement = this.textSpans[i].glyph\n      if (glyphElement) {\n        glyphElement.prepareFrame(this.comp.renderedFrame - this.data.st)\n        if (glyphElement._mdf) {\n          this._mdf = true\n        }\n      }\n    }\n  }\n\n  SVGTextLottieElement.prototype.renderInnerContent = function () {\n    if (!this.data.singleShape || this._mdf) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag)\n      if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\n        this._sizeChanged = true\n        var i\n        var len\n        var renderedLetters = this.textAnimator.renderedLetters\n\n        var letters = this.textProperty.currentData.l\n\n        len = letters.length\n        var renderedLetter\n        var textSpan\n        var glyphElement\n        for (i = 0; i < len; i += 1) {\n          if (!letters[i].n) {\n            renderedLetter = renderedLetters[i]\n            textSpan = this.textSpans[i].span\n            glyphElement = this.textSpans[i].glyph\n            if (glyphElement) {\n              glyphElement.renderFrame()\n            }\n            if (renderedLetter._mdf.m) {\n              textSpan.setAttribute('transform', renderedLetter.m)\n            }\n            if (renderedLetter._mdf.o) {\n              textSpan.setAttribute('opacity', renderedLetter.o)\n            }\n            if (renderedLetter._mdf.sw) {\n              textSpan.setAttribute('stroke-width', renderedLetter.sw)\n            }\n            if (renderedLetter._mdf.sc) {\n              textSpan.setAttribute('stroke', renderedLetter.sc)\n            }\n            if (renderedLetter._mdf.fc) {\n              textSpan.setAttribute('fill', renderedLetter.fc)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function ISolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp)\n  }\n  extendPrototype([IImageElement], ISolidElement)\n\n  ISolidElement.prototype.createContent = function () {\n    var rect = createNS('rect')\n    /// /rect.style.width = this.data.sw;\n    /// /rect.style.height = this.data.sh;\n    /// /rect.style.fill = this.data.sc;\n    rect.setAttribute('width', this.data.sw)\n    rect.setAttribute('height', this.data.sh)\n    rect.setAttribute('fill', this.data.sc)\n    this.layerElement.appendChild(rect)\n  }\n\n  function NullElement(data, globalData, comp) {\n    this.initFrame()\n    this.initBaseData(data, globalData, comp)\n    this.initFrame()\n    this.initTransform(data, globalData, comp)\n    this.initHierarchy()\n  }\n\n  NullElement.prototype.prepareFrame = function (num) {\n    this.prepareProperties(num, true)\n  }\n\n  NullElement.prototype.renderFrame = function () {}\n\n  NullElement.prototype.getBaseElement = function () {\n    return null\n  }\n\n  NullElement.prototype.destroy = function () {}\n\n  NullElement.prototype.sourceRectAtTime = function () {}\n\n  NullElement.prototype.hide = function () {}\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement)\n\n  function SVGRendererBase() {}\n\n  extendPrototype([BaseRenderer], SVGRendererBase)\n\n  SVGRendererBase.prototype.createNull = function (data) {\n    return new NullElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.createShape = function (data) {\n    return new SVGShapeElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.createText = function (data) {\n    return new SVGTextLottieElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.createImage = function (data) {\n    return new IImageElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.createSolid = function (data) {\n    return new ISolidElement(data, this.globalData, this)\n  }\n\n  SVGRendererBase.prototype.configAnimation = function (animData) {\n    this.svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n    if (this.renderConfig.viewBoxSize) {\n      this.svgElement.setAttribute('viewBox', this.renderConfig.viewBoxSize)\n    } else {\n      this.svgElement.setAttribute('viewBox', '0 0 ' + animData.w + ' ' + animData.h)\n    }\n\n    if (!this.renderConfig.viewBoxOnly) {\n      this.svgElement.setAttribute('width', animData.w)\n      this.svgElement.setAttribute('height', animData.h)\n      this.svgElement.style.width = '100%'\n      this.svgElement.style.height = '100%'\n      this.svgElement.style.transform = 'translate3d(0,0,0)'\n      this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility\n    }\n    if (this.renderConfig.width) {\n      this.svgElement.setAttribute('width', this.renderConfig.width)\n    }\n    if (this.renderConfig.height) {\n      this.svgElement.setAttribute('height', this.renderConfig.height)\n    }\n    if (this.renderConfig.className) {\n      this.svgElement.setAttribute('class', this.renderConfig.className)\n    }\n    if (this.renderConfig.id) {\n      this.svgElement.setAttribute('id', this.renderConfig.id)\n    }\n    if (this.renderConfig.focusable !== undefined) {\n      this.svgElement.setAttribute('focusable', this.renderConfig.focusable)\n    }\n    this.svgElement.setAttribute('preserveAspectRatio', this.renderConfig.preserveAspectRatio)\n    // this.layerElement.style.transform = 'translate3d(0,0,0)';\n    // this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\n    this.animationItem.wrapper.appendChild(this.svgElement)\n    // Mask animation\n    var defs = this.globalData.defs\n\n    this.setupGlobalData(animData, defs)\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad\n    this.data = animData\n\n    var maskElement = createNS('clipPath')\n    var rect = createNS('rect')\n    rect.setAttribute('width', animData.w)\n    rect.setAttribute('height', animData.h)\n    rect.setAttribute('x', 0)\n    rect.setAttribute('y', 0)\n    var maskId = createElementID()\n    maskElement.setAttribute('id', maskId)\n    maskElement.appendChild(rect)\n    this.layerElement.setAttribute('clip-path', 'url(' + getLocationHref() + '#' + maskId + ')')\n\n    defs.appendChild(maskElement)\n    this.layers = animData.layers\n    this.elements = createSizedArray(animData.layers.length)\n  }\n\n  SVGRendererBase.prototype.destroy = function () {\n    if (this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = ''\n    }\n    this.layerElement = null\n    this.globalData.defs = null\n    var i\n    var len = this.layers ? this.layers.length : 0\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy()\n      }\n    }\n    this.elements.length = 0\n    this.destroyed = true\n    this.animationItem = null\n  }\n\n  SVGRendererBase.prototype.updateContainerSize = function () {}\n\n  SVGRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return\n    }\n    elements[pos] = true\n    var element = this.createItem(this.layers[pos])\n\n    elements[pos] = element\n    if (getExpressionsPlugin()) {\n      if (this.layers[pos].ty === 0) {\n        this.globalData.projectInterface.registerComposition(element)\n      }\n      element.initExpressions()\n    }\n    this.appendElementInPos(element, pos)\n    if (this.layers[pos].tt) {\n      if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {\n        this.buildItem(pos - 1)\n        this.addPendingElement(element)\n      } else {\n        element.setMatte(elements[pos - 1].layerId)\n      }\n    }\n  }\n\n  SVGRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop()\n      element.checkParenting()\n      if (element.data.tt) {\n        var i = 0\n        var len = this.elements.length\n        while (i < len) {\n          if (this.elements[i] === element) {\n            element.setMatte(this.elements[i - 1].layerId)\n            break\n          }\n          i += 1\n        }\n      }\n    }\n  }\n\n  SVGRendererBase.prototype.renderFrame = function (num) {\n    if (this.renderedFrame === num || this.destroyed) {\n      return\n    }\n    if (num === null) {\n      num = this.renderedFrame\n    } else {\n      this.renderedFrame = num\n    }\n    // console.log('-------');\n    // console.log('FRAME ',num);\n    this.globalData.frameNum = num\n    this.globalData.frameId += 1\n    this.globalData.projectInterface.currentFrame = num\n    this.globalData._mdf = false\n    var i\n    var len = this.layers.length\n    if (!this.completeLayers) {\n      this.checkLayers(num)\n    }\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st)\n      }\n    }\n    if (this.globalData._mdf) {\n      for (i = 0; i < len; i += 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame()\n        }\n      }\n    }\n  }\n\n  SVGRendererBase.prototype.appendElementInPos = function (element, pos) {\n    var newElement = element.getBaseElement()\n    if (!newElement) {\n      return\n    }\n    var i = 0\n    var nextElement\n    while (i < pos) {\n      if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\n        nextElement = this.elements[i].getBaseElement()\n      }\n      i += 1\n    }\n    if (nextElement) {\n      this.layerElement.insertBefore(newElement, nextElement)\n    } else {\n      this.layerElement.appendChild(newElement)\n    }\n  }\n\n  SVGRendererBase.prototype.hide = function () {\n    this.layerElement.style.display = 'none'\n  }\n\n  SVGRendererBase.prototype.show = function () {\n    this.layerElement.style.display = 'block'\n  }\n\n  function ICompElement() {}\n\n  extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement)\n\n  ICompElement.prototype.initElement = function (data, globalData, comp) {\n    this.initFrame()\n    this.initBaseData(data, globalData, comp)\n    this.initTransform(data, globalData, comp)\n    this.initRenderable()\n    this.initHierarchy()\n    this.initRendererElement()\n    this.createContainerElements()\n    this.createRenderableComponents()\n    if (this.data.xt || !globalData.progressiveLoad) {\n      this.buildAllItems()\n    }\n    this.hide()\n  }\n\n  /* ICompElement.prototype.hide = function(){\n    if(!this.hidden){\n        this.hideElement();\n        var i,len = this.elements.length;\n        for( i = 0; i < len; i+=1 ){\n            if(this.elements[i]){\n                this.elements[i].hide();\n            }\n        }\n    }\n}; */\n\n  ICompElement.prototype.prepareFrame = function (num) {\n    this._mdf = false\n    this.prepareRenderableFrame(num)\n    this.prepareProperties(num, this.isInRange)\n    if (!this.isInRange && !this.data.xt) {\n      return\n    }\n\n    if (!this.tm._placeholder) {\n      var timeRemapped = this.tm.v\n      if (timeRemapped === this.data.op) {\n        timeRemapped = this.data.op - 1\n      }\n      this.renderedFrame = timeRemapped\n    } else {\n      this.renderedFrame = num / this.data.sr\n    }\n    var i\n    var len = this.elements.length\n    if (!this.completeLayers) {\n      this.checkLayers(this.renderedFrame)\n    }\n    // This iteration needs to be backwards because of how expressions connect between each other\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st)\n        if (this.elements[i]._mdf) {\n          this._mdf = true\n        }\n      }\n    }\n  }\n\n  ICompElement.prototype.renderInnerContent = function () {\n    var i\n    var len = this.layers.length\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame()\n      }\n    }\n  }\n\n  ICompElement.prototype.setElements = function (elems) {\n    this.elements = elems\n  }\n\n  ICompElement.prototype.getElements = function () {\n    return this.elements\n  }\n\n  ICompElement.prototype.destroyElements = function () {\n    var i\n    var len = this.layers.length\n    for (i = 0; i < len; i += 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy()\n      }\n    }\n  }\n\n  ICompElement.prototype.destroy = function () {\n    this.destroyElements()\n    this.destroyBaseElement()\n  }\n\n  function SVGCompElement(data, globalData, comp) {\n    this.layers = data.layers\n    this.supports3d = true\n    this.completeLayers = false\n    this.pendingElements = []\n    this.elements = this.layers ? createSizedArray(this.layers.length) : []\n    this.initElement(data, globalData, comp)\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true }\n  }\n\n  extendPrototype([SVGRendererBase, ICompElement, SVGBaseElement], SVGCompElement)\n\n  SVGCompElement.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this)\n  }\n\n  function SVGRenderer(animationItem, config) {\n    this.animationItem = animationItem\n    this.layers = null\n    this.renderedFrame = -1\n    this.svgElement = createNS('svg')\n    var ariaLabel = ''\n    if (config && config.title) {\n      var titleElement = createNS('title')\n      var titleId = createElementID()\n      titleElement.setAttribute('id', titleId)\n      titleElement.textContent = config.title\n      this.svgElement.appendChild(titleElement)\n      ariaLabel += titleId\n    }\n    if (config && config.description) {\n      var descElement = createNS('desc')\n      var descId = createElementID()\n      descElement.setAttribute('id', descId)\n      descElement.textContent = config.description\n      this.svgElement.appendChild(descElement)\n      ariaLabel += ' ' + descId\n    }\n    if (ariaLabel) {\n      this.svgElement.setAttribute('aria-labelledby', ariaLabel)\n    }\n    var defs = createNS('defs')\n    this.svgElement.appendChild(defs)\n    var maskElement = createNS('g')\n    this.svgElement.appendChild(maskElement)\n    this.layerElement = maskElement\n    this.renderConfig = {\n      preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\n      imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\n      contentVisibility: (config && config.contentVisibility) || 'visible',\n      progressiveLoad: (config && config.progressiveLoad) || false,\n      hideOnTransparent: !(config && config.hideOnTransparent === false),\n      viewBoxOnly: (config && config.viewBoxOnly) || false,\n      viewBoxSize: (config && config.viewBoxSize) || false,\n      className: (config && config.className) || '',\n      id: (config && config.id) || '',\n      focusable: config && config.focusable,\n      filterSize: {\n        width: (config && config.filterSize && config.filterSize.width) || '100%',\n        height: (config && config.filterSize && config.filterSize.height) || '100%',\n        x: (config && config.filterSize && config.filterSize.x) || '0%',\n        y: (config && config.filterSize && config.filterSize.y) || '0%',\n      },\n      width: config && config.width,\n      height: config && config.height,\n    }\n\n    this.globalData = {\n      _mdf: false,\n      frameNum: -1,\n      defs: defs,\n      renderConfig: this.renderConfig,\n    }\n    this.elements = []\n    this.pendingElements = []\n    this.destroyed = false\n    this.rendererType = 'svg'\n  }\n\n  extendPrototype([SVGRendererBase], SVGRenderer)\n\n  SVGRenderer.prototype.createComp = function (data) {\n    return new SVGCompElement(data, this.globalData, this)\n  }\n\n  function CVContextData() {\n    this.saved = []\n    this.cArrPos = 0\n    this.cTr = new Matrix()\n    this.cO = 1\n    var i\n    var len = 15\n    this.savedOp = createTypedArray('float32', len)\n    for (i = 0; i < len; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16)\n    }\n    this._length = len\n  }\n\n  CVContextData.prototype.duplicate = function () {\n    var newLength = this._length * 2\n    var currentSavedOp = this.savedOp\n    this.savedOp = createTypedArray('float32', newLength)\n    this.savedOp.set(currentSavedOp)\n    var i = 0\n    for (i = this._length; i < newLength; i += 1) {\n      this.saved[i] = createTypedArray('float32', 16)\n    }\n    this._length = newLength\n  }\n\n  CVContextData.prototype.reset = function () {\n    this.cArrPos = 0\n    this.cTr.reset()\n    this.cO = 1\n  }\n\n  function ShapeTransformManager() {\n    this.sequences = {}\n    this.sequenceList = []\n    this.transform_key_count = 0\n  }\n\n  ShapeTransformManager.prototype = {\n    addTransformSequence: function (transforms) {\n      var i\n      var len = transforms.length\n      var key = '_'\n      for (i = 0; i < len; i += 1) {\n        key += transforms[i].transform.key + '_'\n      }\n      var sequence = this.sequences[key]\n      if (!sequence) {\n        sequence = {\n          transforms: [].concat(transforms),\n          finalTransform: new Matrix(),\n          _mdf: false,\n        }\n        this.sequences[key] = sequence\n        this.sequenceList.push(sequence)\n      }\n      return sequence\n    },\n    processSequence: function (sequence, isFirstFrame) {\n      var i = 0\n      var len = sequence.transforms.length\n      var _mdf = isFirstFrame\n      while (i < len && !isFirstFrame) {\n        if (sequence.transforms[i].transform.mProps._mdf) {\n          _mdf = true\n          break\n        }\n        i += 1\n      }\n      if (_mdf) {\n        var props\n        sequence.finalTransform.reset()\n        for (i = len - 1; i >= 0; i -= 1) {\n          props = sequence.transforms[i].transform.mProps.v.props\n          sequence.finalTransform.transform(\n            props[0],\n            props[1],\n            props[2],\n            props[3],\n            props[4],\n            props[5],\n            props[6],\n            props[7],\n            props[8],\n            props[9],\n            props[10],\n            props[11],\n            props[12],\n            props[13],\n            props[14],\n            props[15],\n          )\n        }\n      }\n      sequence._mdf = _mdf\n    },\n    processSequences: function (isFirstFrame) {\n      var i\n      var len = this.sequenceList.length\n      for (i = 0; i < len; i += 1) {\n        this.processSequence(this.sequenceList[i], isFirstFrame)\n      }\n    },\n    getNewKey: function () {\n      this.transform_key_count += 1\n      return '_' + this.transform_key_count\n    },\n  }\n\n  function CVEffects() {}\n  CVEffects.prototype.renderFrame = function () {}\n\n  function CVMaskElement(data, element) {\n    this.data = data\n    this.element = element\n    this.masksProperties = this.data.masksProperties || []\n    this.viewData = createSizedArray(this.masksProperties.length)\n    var i\n    var len = this.masksProperties.length\n    var hasMasks = false\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== 'n') {\n        hasMasks = true\n      }\n      this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3)\n    }\n    this.hasMasks = hasMasks\n    if (hasMasks) {\n      this.element.addRenderableComponent(this)\n    }\n  }\n\n  CVMaskElement.prototype.renderFrame = function () {\n    if (!this.hasMasks) {\n      return\n    }\n    var transform = this.element.finalTransform.mat\n    var ctx = this.element.canvasContext\n    var i\n    var len = this.masksProperties.length\n    var pt\n    var pts\n    var data\n    ctx.beginPath()\n    for (i = 0; i < len; i += 1) {\n      if (this.masksProperties[i].mode !== 'n') {\n        if (this.masksProperties[i].inv) {\n          ctx.moveTo(0, 0)\n          ctx.lineTo(this.element.globalData.compSize.w, 0)\n          ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h)\n          ctx.lineTo(0, this.element.globalData.compSize.h)\n          ctx.lineTo(0, 0)\n        }\n        data = this.viewData[i].v\n        pt = transform.applyToPointArray(data.v[0][0], data.v[0][1], 0)\n        ctx.moveTo(pt[0], pt[1])\n        var j\n        var jLen = data._length\n        for (j = 1; j < jLen; j += 1) {\n          pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j])\n          ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5])\n        }\n        pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0])\n        ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5])\n      }\n    }\n    this.element.globalData.renderer.save(true)\n    ctx.clip()\n  }\n\n  CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty\n\n  CVMaskElement.prototype.destroy = function () {\n    this.element = null\n  }\n\n  function CVBaseElement() {}\n\n  CVBaseElement.prototype = {\n    createElements: function () {},\n    initRendererElement: function () {},\n    createContainerElements: function () {\n      this.canvasContext = this.globalData.canvasContext\n      this.renderableEffectsManager = new CVEffects(this)\n    },\n    createContent: function () {},\n    setBlendMode: function () {\n      var globalData = this.globalData\n      if (globalData.blendMode !== this.data.bm) {\n        globalData.blendMode = this.data.bm\n        var blendModeValue = getBlendMode(this.data.bm)\n        globalData.canvasContext.globalCompositeOperation = blendModeValue\n      }\n    },\n    createRenderableComponents: function () {\n      this.maskManager = new CVMaskElement(this.data, this)\n    },\n    hideElement: function () {\n      if (!this.hidden && (!this.isInRange || this.isTransparent)) {\n        this.hidden = true\n      }\n    },\n    showElement: function () {\n      if (this.isInRange && !this.isTransparent) {\n        this.hidden = false\n        this._isFirstFrame = true\n        this.maskManager._isFirstFrame = true\n      }\n    },\n    renderFrame: function () {\n      if (this.hidden || this.data.hd) {\n        return\n      }\n      this.renderTransform()\n      this.renderRenderable()\n      this.setBlendMode()\n      var forceRealStack = this.data.ty === 0\n      this.globalData.renderer.save(forceRealStack)\n      this.globalData.renderer.ctxTransform(this.finalTransform.mat.props)\n      this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v)\n      this.renderInnerContent()\n      this.globalData.renderer.restore(forceRealStack)\n      if (this.maskManager.hasMasks) {\n        this.globalData.renderer.restore(true)\n      }\n      if (this._isFirstFrame) {\n        this._isFirstFrame = false\n      }\n    },\n    destroy: function () {\n      this.canvasContext = null\n      this.data = null\n      this.globalData = null\n      this.maskManager.destroy()\n    },\n    mHelper: new Matrix(),\n  }\n  CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement\n  CVBaseElement.prototype.show = CVBaseElement.prototype.showElement\n\n  function CVShapeData(element, data, styles, transformsManager) {\n    this.styledShapes = []\n    this.tr = [0, 0, 0, 0, 0, 0]\n    var ty = 4\n    if (data.ty === 'rc') {\n      ty = 5\n    } else if (data.ty === 'el') {\n      ty = 6\n    } else if (data.ty === 'sr') {\n      ty = 7\n    }\n    this.sh = ShapePropertyFactory.getShapeProp(element, data, ty, element)\n    var i\n    var len = styles.length\n    var styledShape\n    for (i = 0; i < len; i += 1) {\n      if (!styles[i].closed) {\n        styledShape = {\n          transforms: transformsManager.addTransformSequence(styles[i].transforms),\n          trNodes: [],\n        }\n        this.styledShapes.push(styledShape)\n        styles[i].elements.push(styledShape)\n      }\n    }\n  }\n\n  CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated\n\n  function CVShapeElement(data, globalData, comp) {\n    this.shapes = []\n    this.shapesData = data.shapes\n    this.stylesList = []\n    this.itemsData = []\n    this.prevViewData = []\n    this.shapeModifiers = []\n    this.processedElements = []\n    this.transformsManager = new ShapeTransformManager()\n    this.initElement(data, globalData, comp)\n  }\n\n  extendPrototype(\n    [BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement],\n    CVShapeElement,\n  )\n\n  CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement\n\n  CVShapeElement.prototype.transformHelper = { opacity: 1, _opMdf: false }\n\n  CVShapeElement.prototype.dashResetter = []\n\n  CVShapeElement.prototype.createContent = function () {\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, [])\n  }\n\n  CVShapeElement.prototype.createStyleElement = function (data, transforms) {\n    var styleElem = {\n      data: data,\n      type: data.ty,\n      preTransforms: this.transformsManager.addTransformSequence(transforms),\n      transforms: [],\n      elements: [],\n      closed: data.hd === true,\n    }\n    var elementData = {}\n    if (data.ty === 'fl' || data.ty === 'st') {\n      elementData.c = PropertyFactory.getProp(this, data.c, 1, 255, this)\n      if (!elementData.c.k) {\n        styleElem.co =\n          'rgb(' +\n          bmFloor(elementData.c.v[0]) +\n          ',' +\n          bmFloor(elementData.c.v[1]) +\n          ',' +\n          bmFloor(elementData.c.v[2]) +\n          ')'\n      }\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\n      elementData.s = PropertyFactory.getProp(this, data.s, 1, null, this)\n      elementData.e = PropertyFactory.getProp(this, data.e, 1, null, this)\n      elementData.h = PropertyFactory.getProp(this, data.h || { k: 0 }, 0, 0.01, this)\n      elementData.a = PropertyFactory.getProp(this, data.a || { k: 0 }, 0, degToRads, this)\n      elementData.g = new GradientProperty(this, data.g, this)\n    }\n    elementData.o = PropertyFactory.getProp(this, data.o, 0, 0.01, this)\n    if (data.ty === 'st' || data.ty === 'gs') {\n      styleElem.lc = lineCapEnum[data.lc || 2]\n      styleElem.lj = lineJoinEnum[data.lj || 2]\n      if (data.lj == 1) {\n        // eslint-disable-line eqeqeq\n        styleElem.ml = data.ml\n      }\n      elementData.w = PropertyFactory.getProp(this, data.w, 0, null, this)\n      if (!elementData.w.k) {\n        styleElem.wi = elementData.w.v\n      }\n      if (data.d) {\n        var d = new DashProperty(this, data.d, 'canvas', this)\n        elementData.d = d\n        if (!elementData.d.k) {\n          styleElem.da = elementData.d.dashArray\n          styleElem.do = elementData.d.dashoffset[0]\n        }\n      }\n    } else {\n      styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero'\n    }\n    this.stylesList.push(styleElem)\n    elementData.style = styleElem\n    return elementData\n  }\n\n  CVShapeElement.prototype.createGroupElement = function () {\n    var elementData = {\n      it: [],\n      prevViewData: [],\n    }\n    return elementData\n  }\n\n  CVShapeElement.prototype.createTransformElement = function (data) {\n    var elementData = {\n      transform: {\n        opacity: 1,\n        _opMdf: false,\n        key: this.transformsManager.getNewKey(),\n        op: PropertyFactory.getProp(this, data.o, 0, 0.01, this),\n        mProps: TransformPropertyFactory.getTransformProperty(this, data, this),\n      },\n    }\n    return elementData\n  }\n\n  CVShapeElement.prototype.createShapeElement = function (data) {\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager)\n\n    this.shapes.push(elementData)\n    this.addShapeToModifiers(elementData)\n    return elementData\n  }\n\n  CVShapeElement.prototype.reloadShapes = function () {\n    this._isFirstFrame = true\n    var i\n    var len = this.itemsData.length\n    for (i = 0; i < len; i += 1) {\n      this.prevViewData[i] = this.itemsData[i]\n    }\n    this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, [])\n    len = this.dynamicProperties.length\n    for (i = 0; i < len; i += 1) {\n      this.dynamicProperties[i].getValue()\n    }\n    this.renderModifiers()\n    this.transformsManager.processSequences(this._isFirstFrame)\n  }\n\n  CVShapeElement.prototype.addTransformToStyleList = function (transform) {\n    var i\n    var len = this.stylesList.length\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.push(transform)\n      }\n    }\n  }\n\n  CVShapeElement.prototype.removeTransformFromStyleList = function () {\n    var i\n    var len = this.stylesList.length\n    for (i = 0; i < len; i += 1) {\n      if (!this.stylesList[i].closed) {\n        this.stylesList[i].transforms.pop()\n      }\n    }\n  }\n\n  CVShapeElement.prototype.closeStyles = function (styles) {\n    var i\n    var len = styles.length\n    for (i = 0; i < len; i += 1) {\n      styles[i].closed = true\n    }\n  }\n\n  CVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, shouldRender, transforms) {\n    var i\n    var len = arr.length - 1\n    var j\n    var jLen\n    var ownStyles = []\n    var ownModifiers = []\n    var processedPos\n    var modifier\n    var currentTransform\n    var ownTransforms = [].concat(transforms)\n    for (i = len; i >= 0; i -= 1) {\n      processedPos = this.searchProcessedElement(arr[i])\n      if (!processedPos) {\n        arr[i]._shouldRender = shouldRender\n      } else {\n        itemsData[i] = prevViewData[processedPos - 1]\n      }\n      if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs') {\n        if (!processedPos) {\n          itemsData[i] = this.createStyleElement(arr[i], ownTransforms)\n        } else {\n          itemsData[i].style.closed = false\n        }\n\n        ownStyles.push(itemsData[i].style)\n      } else if (arr[i].ty === 'gr') {\n        if (!processedPos) {\n          itemsData[i] = this.createGroupElement(arr[i])\n        } else {\n          jLen = itemsData[i].it.length\n          for (j = 0; j < jLen; j += 1) {\n            itemsData[i].prevViewData[j] = itemsData[i].it[j]\n          }\n        }\n        this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms)\n      } else if (arr[i].ty === 'tr') {\n        if (!processedPos) {\n          currentTransform = this.createTransformElement(arr[i])\n          itemsData[i] = currentTransform\n        }\n        ownTransforms.push(itemsData[i])\n        this.addTransformToStyleList(itemsData[i])\n      } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\n        if (!processedPos) {\n          itemsData[i] = this.createShapeElement(arr[i])\n        }\n      } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'pb') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty)\n          modifier.init(this, arr[i])\n          itemsData[i] = modifier\n          this.shapeModifiers.push(modifier)\n        } else {\n          modifier = itemsData[i]\n          modifier.closed = false\n        }\n        ownModifiers.push(modifier)\n      } else if (arr[i].ty === 'rp') {\n        if (!processedPos) {\n          modifier = ShapeModifiers.getModifier(arr[i].ty)\n          itemsData[i] = modifier\n          modifier.init(this, arr, i, itemsData)\n          this.shapeModifiers.push(modifier)\n          shouldRender = false\n        } else {\n          modifier = itemsData[i]\n          modifier.closed = true\n        }\n        ownModifiers.push(modifier)\n      }\n      this.addProcessedElement(arr[i], i + 1)\n    }\n    this.removeTransformFromStyleList()\n    this.closeStyles(ownStyles)\n    len = ownModifiers.length\n    for (i = 0; i < len; i += 1) {\n      ownModifiers[i].closed = true\n    }\n  }\n\n  CVShapeElement.prototype.renderInnerContent = function () {\n    this.transformHelper.opacity = 1\n    this.transformHelper._opMdf = false\n    this.renderModifiers()\n    this.transformsManager.processSequences(this._isFirstFrame)\n    this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true)\n  }\n\n  CVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {\n    if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\n      groupTransform.opacity = parentTransform.opacity\n      groupTransform.opacity *= groupTransform.op.v\n      groupTransform._opMdf = true\n    }\n  }\n\n  CVShapeElement.prototype.drawLayer = function () {\n    var i\n    var len = this.stylesList.length\n    var j\n    var jLen\n    var k\n    var kLen\n    var elems\n    var nodes\n    var renderer = this.globalData.renderer\n    var ctx = this.globalData.canvasContext\n    var type\n    var currentStyle\n    for (i = 0; i < len; i += 1) {\n      currentStyle = this.stylesList[i]\n      type = currentStyle.type\n\n      // Skipping style when\n      // Stroke width equals 0\n      // style should not be rendered (extra unused repeaters)\n      // current opacity equals 0\n      // global opacity equals 0\n      if (\n        !(\n          ((type === 'st' || type === 'gs') && currentStyle.wi === 0) ||\n          !currentStyle.data._shouldRender ||\n          currentStyle.coOp === 0 ||\n          this.globalData.currentGlobalAlpha === 0\n        )\n      ) {\n        renderer.save()\n        elems = currentStyle.elements\n        if (type === 'st' || type === 'gs') {\n          ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd\n          ctx.lineWidth = currentStyle.wi\n          ctx.lineCap = currentStyle.lc\n          ctx.lineJoin = currentStyle.lj\n          ctx.miterLimit = currentStyle.ml || 0\n        } else {\n          ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd\n        }\n        renderer.ctxOpacity(currentStyle.coOp)\n        if (type !== 'st' && type !== 'gs') {\n          ctx.beginPath()\n        }\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props)\n        jLen = elems.length\n        for (j = 0; j < jLen; j += 1) {\n          if (type === 'st' || type === 'gs') {\n            ctx.beginPath()\n            if (currentStyle.da) {\n              ctx.setLineDash(currentStyle.da)\n              ctx.lineDashOffset = currentStyle.do\n            }\n          }\n          nodes = elems[j].trNodes\n          kLen = nodes.length\n\n          for (k = 0; k < kLen; k += 1) {\n            if (nodes[k].t === 'm') {\n              ctx.moveTo(nodes[k].p[0], nodes[k].p[1])\n            } else if (nodes[k].t === 'c') {\n              ctx.bezierCurveTo(\n                nodes[k].pts[0],\n                nodes[k].pts[1],\n                nodes[k].pts[2],\n                nodes[k].pts[3],\n                nodes[k].pts[4],\n                nodes[k].pts[5],\n              )\n            } else {\n              ctx.closePath()\n            }\n          }\n          if (type === 'st' || type === 'gs') {\n            ctx.stroke()\n            if (currentStyle.da) {\n              ctx.setLineDash(this.dashResetter)\n            }\n          }\n        }\n        if (type !== 'st' && type !== 'gs') {\n          ctx.fill(currentStyle.r)\n        }\n        renderer.restore()\n      }\n    }\n  }\n\n  CVShapeElement.prototype.renderShape = function (parentTransform, items, data, isMain) {\n    var i\n    var len = items.length - 1\n    var groupTransform\n    groupTransform = parentTransform\n    for (i = len; i >= 0; i -= 1) {\n      if (items[i].ty === 'tr') {\n        groupTransform = data[i].transform\n        this.renderShapeTransform(parentTransform, groupTransform)\n      } else if (items[i].ty === 'sh' || items[i].ty === 'el' || items[i].ty === 'rc' || items[i].ty === 'sr') {\n        this.renderPath(items[i], data[i])\n      } else if (items[i].ty === 'fl') {\n        this.renderFill(items[i], data[i], groupTransform)\n      } else if (items[i].ty === 'st') {\n        this.renderStroke(items[i], data[i], groupTransform)\n      } else if (items[i].ty === 'gf' || items[i].ty === 'gs') {\n        this.renderGradientFill(items[i], data[i], groupTransform)\n      } else if (items[i].ty === 'gr') {\n        this.renderShape(groupTransform, items[i].it, data[i].it)\n      } else if (items[i].ty === 'tm') {\n        //\n      }\n    }\n    if (isMain) {\n      this.drawLayer()\n    }\n  }\n\n  CVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {\n    if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\n      var shapeNodes = styledShape.trNodes\n      var paths = shape.paths\n      var i\n      var len\n      var j\n      var jLen = paths._length\n      shapeNodes.length = 0\n      var groupTransformMat = styledShape.transforms.finalTransform\n      for (j = 0; j < jLen; j += 1) {\n        var pathNodes = paths.shapes[j]\n        if (pathNodes && pathNodes.v) {\n          len = pathNodes._length\n          for (i = 1; i < len; i += 1) {\n            if (i === 1) {\n              shapeNodes.push({\n                t: 'm',\n                p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n              })\n            }\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i]),\n            })\n          }\n          if (len === 1) {\n            shapeNodes.push({\n              t: 'm',\n              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n            })\n          }\n          if (pathNodes.c && len) {\n            shapeNodes.push({\n              t: 'c',\n              pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0]),\n            })\n            shapeNodes.push({\n              t: 'z',\n            })\n          }\n        }\n      }\n      styledShape.trNodes = shapeNodes\n    }\n  }\n\n  CVShapeElement.prototype.renderPath = function (pathData, itemData) {\n    if (pathData.hd !== true && pathData._shouldRender) {\n      var i\n      var len = itemData.styledShapes.length\n      for (i = 0; i < len; i += 1) {\n        this.renderStyledShape(itemData.styledShapes[i], itemData.sh)\n      }\n    }\n  }\n\n  CVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style\n\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co =\n        'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')'\n    }\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity\n    }\n  }\n\n  CVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style\n    var grd\n    if (\n      !styleElem.grd ||\n      itemData.g._mdf ||\n      itemData.s._mdf ||\n      itemData.e._mdf ||\n      (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))\n    ) {\n      var ctx = this.globalData.canvasContext\n      var pt1 = itemData.s.v\n      var pt2 = itemData.e.v\n      if (styleData.t === 1) {\n        grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1])\n      } else {\n        var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2))\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0])\n\n        var percent = itemData.h.v\n        if (percent >= 1) {\n          percent = 0.99\n        } else if (percent <= -1) {\n          percent = -0.99\n        }\n        var dist = rad * percent\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0]\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1]\n        grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad)\n      }\n\n      var i\n      var len = styleData.g.p\n      var cValues = itemData.g.c\n      var opacity = 1\n\n      for (i = 0; i < len; i += 1) {\n        if (itemData.g._hasOpacity && itemData.g._collapsable) {\n          opacity = itemData.g.o[i * 2 + 1]\n        }\n        grd.addColorStop(\n          cValues[i * 4] / 100,\n          'rgba(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ',' + opacity + ')',\n        )\n      }\n      styleElem.grd = grd\n    }\n    styleElem.coOp = itemData.o.v * groupTransform.opacity\n  }\n\n  CVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {\n    var styleElem = itemData.style\n    var d = itemData.d\n    if (d && (d._mdf || this._isFirstFrame)) {\n      styleElem.da = d.dashArray\n      styleElem.do = d.dashoffset[0]\n    }\n    if (itemData.c._mdf || this._isFirstFrame) {\n      styleElem.co =\n        'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')'\n    }\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\n      styleElem.coOp = itemData.o.v * groupTransform.opacity\n    }\n    if (itemData.w._mdf || this._isFirstFrame) {\n      styleElem.wi = itemData.w.v\n    }\n  }\n\n  CVShapeElement.prototype.destroy = function () {\n    this.shapesData = null\n    this.globalData = null\n    this.canvasContext = null\n    this.stylesList.length = 0\n    this.itemsData.length = 0\n  }\n\n  function CVTextElement(data, globalData, comp) {\n    this.textSpans = []\n    this.yOffset = 0\n    this.fillColorAnim = false\n    this.strokeColorAnim = false\n    this.strokeWidthAnim = false\n    this.stroke = false\n    this.fill = false\n    this.justifyOffset = 0\n    this.currentRender = null\n    this.renderType = 'canvas'\n    this.values = {\n      fill: 'rgba(0,0,0,0)',\n      stroke: 'rgba(0,0,0,0)',\n      sWidth: 0,\n      fValue: '',\n    }\n    this.initElement(data, globalData, comp)\n  }\n  extendPrototype(\n    [BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement],\n    CVTextElement,\n  )\n\n  CVTextElement.prototype.tHelper = createTag('canvas').getContext('2d')\n\n  CVTextElement.prototype.buildNewText = function () {\n    var documentData = this.textProperty.currentData\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0)\n\n    var hasFill = false\n    if (documentData.fc) {\n      hasFill = true\n      this.values.fill = this.buildColor(documentData.fc)\n    } else {\n      this.values.fill = 'rgba(0,0,0,0)'\n    }\n    this.fill = hasFill\n    var hasStroke = false\n    if (documentData.sc) {\n      hasStroke = true\n      this.values.stroke = this.buildColor(documentData.sc)\n      this.values.sWidth = documentData.sw\n    }\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f)\n    var i\n    var len\n    var letters = documentData.l\n    var matrixHelper = this.mHelper\n    this.stroke = hasStroke\n    this.values.fValue =\n      documentData.finalSize + 'px ' + this.globalData.fontManager.getFontByName(documentData.f).fFamily\n    len = documentData.finalText.length\n    // this.tHelper.font = this.values.fValue;\n    var charData\n    var shapeData\n    var k\n    var kLen\n    var shapes\n    var j\n    var jLen\n    var pathNodes\n    var commands\n    var pathArr\n    var singleShape = this.data.singleShape\n    var trackingOffset = documentData.tr * 0.001 * documentData.finalSize\n    var xPos = 0\n    var yPos = 0\n    var firstLine = true\n    var cnt = 0\n    for (i = 0; i < len; i += 1) {\n      charData = this.globalData.fontManager.getCharData(\n        documentData.finalText[i],\n        fontData.fStyle,\n        this.globalData.fontManager.getFontByName(documentData.f).fFamily,\n      )\n      shapeData = (charData && charData.data) || {}\n      matrixHelper.reset()\n      if (singleShape && letters[i].n) {\n        xPos = -trackingOffset\n        yPos += documentData.yOffset\n        yPos += firstLine ? 1 : 0\n        firstLine = false\n      }\n      shapes = shapeData.shapes ? shapeData.shapes[0].it : []\n      jLen = shapes.length\n      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100)\n      if (singleShape) {\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos)\n      }\n      commands = createSizedArray(jLen - 1)\n      var commandsCounter = 0\n      for (j = 0; j < jLen; j += 1) {\n        if (shapes[j].ty === 'sh') {\n          kLen = shapes[j].ks.k.i.length\n          pathNodes = shapes[j].ks.k\n          pathArr = []\n          for (k = 1; k < kLen; k += 1) {\n            if (k === 1) {\n              pathArr.push(\n                matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n                matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n              )\n            }\n            pathArr.push(\n              matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0),\n              matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0),\n              matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0),\n              matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0),\n              matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0),\n              matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0),\n            )\n          }\n          pathArr.push(\n            matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0),\n            matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0),\n            matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0),\n            matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0),\n            matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n            matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0),\n          )\n          commands[commandsCounter] = pathArr\n          commandsCounter += 1\n        }\n      }\n      if (singleShape) {\n        xPos += letters[i].l\n        xPos += trackingOffset\n      }\n      if (this.textSpans[cnt]) {\n        this.textSpans[cnt].elem = commands\n      } else {\n        this.textSpans[cnt] = { elem: commands }\n      }\n      cnt += 1\n    }\n  }\n\n  CVTextElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext\n    ctx.font = this.values.fValue\n    ctx.lineCap = 'butt'\n    ctx.lineJoin = 'miter'\n    ctx.miterLimit = 4\n\n    if (!this.data.singleShape) {\n      this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag)\n    }\n\n    var i\n    var len\n    var j\n    var jLen\n    var k\n    var kLen\n    var renderedLetters = this.textAnimator.renderedLetters\n\n    var letters = this.textProperty.currentData.l\n\n    len = letters.length\n    var renderedLetter\n    var lastFill = null\n    var lastStroke = null\n    var lastStrokeW = null\n    var commands\n    var pathArr\n    for (i = 0; i < len; i += 1) {\n      if (!letters[i].n) {\n        renderedLetter = renderedLetters[i]\n        if (renderedLetter) {\n          this.globalData.renderer.save()\n          this.globalData.renderer.ctxTransform(renderedLetter.p)\n          this.globalData.renderer.ctxOpacity(renderedLetter.o)\n        }\n        if (this.fill) {\n          if (renderedLetter && renderedLetter.fc) {\n            if (lastFill !== renderedLetter.fc) {\n              lastFill = renderedLetter.fc\n              ctx.fillStyle = renderedLetter.fc\n            }\n          } else if (lastFill !== this.values.fill) {\n            lastFill = this.values.fill\n            ctx.fillStyle = this.values.fill\n          }\n          commands = this.textSpans[i].elem\n          jLen = commands.length\n          this.globalData.canvasContext.beginPath()\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j]\n            kLen = pathArr.length\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1])\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(\n                pathArr[k],\n                pathArr[k + 1],\n                pathArr[k + 2],\n                pathArr[k + 3],\n                pathArr[k + 4],\n                pathArr[k + 5],\n              )\n            }\n          }\n          this.globalData.canvasContext.closePath()\n          this.globalData.canvasContext.fill()\n          /// ctx.fillText(this.textSpans[i].val,0,0);\n        }\n        if (this.stroke) {\n          if (renderedLetter && renderedLetter.sw) {\n            if (lastStrokeW !== renderedLetter.sw) {\n              lastStrokeW = renderedLetter.sw\n              ctx.lineWidth = renderedLetter.sw\n            }\n          } else if (lastStrokeW !== this.values.sWidth) {\n            lastStrokeW = this.values.sWidth\n            ctx.lineWidth = this.values.sWidth\n          }\n          if (renderedLetter && renderedLetter.sc) {\n            if (lastStroke !== renderedLetter.sc) {\n              lastStroke = renderedLetter.sc\n              ctx.strokeStyle = renderedLetter.sc\n            }\n          } else if (lastStroke !== this.values.stroke) {\n            lastStroke = this.values.stroke\n            ctx.strokeStyle = this.values.stroke\n          }\n          commands = this.textSpans[i].elem\n          jLen = commands.length\n          this.globalData.canvasContext.beginPath()\n          for (j = 0; j < jLen; j += 1) {\n            pathArr = commands[j]\n            kLen = pathArr.length\n            this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1])\n            for (k = 2; k < kLen; k += 6) {\n              this.globalData.canvasContext.bezierCurveTo(\n                pathArr[k],\n                pathArr[k + 1],\n                pathArr[k + 2],\n                pathArr[k + 3],\n                pathArr[k + 4],\n                pathArr[k + 5],\n              )\n            }\n          }\n          this.globalData.canvasContext.closePath()\n          this.globalData.canvasContext.stroke()\n          /// ctx.strokeText(letters[i].val,0,0);\n        }\n        if (renderedLetter) {\n          this.globalData.renderer.restore()\n        }\n      }\n    }\n  }\n\n  function CVImageElement(data, globalData, comp) {\n    this.assetData = globalData.getAssetData(data.refId)\n    this.img = globalData.imageLoader.getAsset(this.assetData)\n    this.initElement(data, globalData, comp)\n  }\n  extendPrototype(\n    [BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement],\n    CVImageElement,\n  )\n\n  CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement\n  CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame\n\n  CVImageElement.prototype.createContent = function () {\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\n      var canvas = createTag('canvas')\n      canvas.width = this.assetData.w\n      canvas.height = this.assetData.h\n      var ctx = canvas.getContext('2d')\n\n      var imgW = this.img.width\n      var imgH = this.img.height\n      var imgRel = imgW / imgH\n      var canvasRel = this.assetData.w / this.assetData.h\n      var widthCrop\n      var heightCrop\n      var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio\n      if ((imgRel > canvasRel && par === 'xMidYMid slice') || (imgRel < canvasRel && par !== 'xMidYMid slice')) {\n        heightCrop = imgH\n        widthCrop = heightCrop * canvasRel\n      } else {\n        widthCrop = imgW\n        heightCrop = widthCrop / canvasRel\n      }\n      ctx.drawImage(\n        this.img,\n        (imgW - widthCrop) / 2,\n        (imgH - heightCrop) / 2,\n        widthCrop,\n        heightCrop,\n        0,\n        0,\n        this.assetData.w,\n        this.assetData.h,\n      )\n      this.img = canvas\n    }\n  }\n\n  CVImageElement.prototype.renderInnerContent = function () {\n    this.canvasContext.drawImage(this.img, 0, 0)\n  }\n\n  CVImageElement.prototype.destroy = function () {\n    this.img = null\n  }\n\n  function CVSolidElement(data, globalData, comp) {\n    this.initElement(data, globalData, comp)\n  }\n  extendPrototype(\n    [BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement],\n    CVSolidElement,\n  )\n\n  CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement\n  CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame\n\n  CVSolidElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext\n    ctx.fillStyle = this.data.sc\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh)\n    //\n  }\n\n  function CanvasRendererBase(animationItem, config) {\n    this.animationItem = animationItem\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: (config && config.context) || null,\n      progressiveLoad: (config && config.progressiveLoad) || false,\n      preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\n      imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\n      contentVisibility: (config && config.contentVisibility) || 'visible',\n      className: (config && config.className) || '',\n      id: (config && config.id) || '',\n    }\n    this.renderConfig.dpr = (config && config.dpr) || 1\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1\n    }\n    this.renderedFrame = -1\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1,\n    }\n    this.contextData = new CVContextData()\n    this.elements = []\n    this.pendingElements = []\n    this.transformMat = new Matrix()\n    this.completeLayers = false\n    this.rendererType = 'canvas'\n  }\n  extendPrototype([BaseRenderer], CanvasRendererBase)\n\n  CanvasRendererBase.prototype.createShape = function (data) {\n    return new CVShapeElement(data, this.globalData, this)\n  }\n\n  CanvasRendererBase.prototype.createText = function (data) {\n    return new CVTextElement(data, this.globalData, this)\n  }\n\n  CanvasRendererBase.prototype.createImage = function (data) {\n    return new CVImageElement(data, this.globalData, this)\n  }\n\n  CanvasRendererBase.prototype.createSolid = function (data) {\n    return new CVSolidElement(data, this.globalData, this)\n  }\n\n  CanvasRendererBase.prototype.createNull = SVGRenderer.prototype.createNull\n\n  CanvasRendererBase.prototype.ctxTransform = function (props) {\n    if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {\n      return\n    }\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13])\n      return\n    }\n    this.transformMat.cloneFromProps(props)\n    var cProps = this.contextData.cTr.props\n    this.transformMat.transform(\n      cProps[0],\n      cProps[1],\n      cProps[2],\n      cProps[3],\n      cProps[4],\n      cProps[5],\n      cProps[6],\n      cProps[7],\n      cProps[8],\n      cProps[9],\n      cProps[10],\n      cProps[11],\n      cProps[12],\n      cProps[13],\n      cProps[14],\n      cProps[15],\n    )\n    // this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\n    this.contextData.cTr.cloneFromProps(this.transformMat.props)\n    var trProps = this.contextData.cTr.props\n    this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13])\n  }\n\n  CanvasRendererBase.prototype.ctxOpacity = function (op) {\n    /* if(op === 1){\n        return;\n    } */\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.globalAlpha *= op < 0 ? 0 : op\n      this.globalData.currentGlobalAlpha = this.contextData.cO\n      return\n    }\n    this.contextData.cO *= op < 0 ? 0 : op\n    if (this.globalData.currentGlobalAlpha !== this.contextData.cO) {\n      this.canvasContext.globalAlpha = this.contextData.cO\n      this.globalData.currentGlobalAlpha = this.contextData.cO\n    }\n  }\n\n  CanvasRendererBase.prototype.reset = function () {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore()\n      return\n    }\n    this.contextData.reset()\n  }\n\n  CanvasRendererBase.prototype.save = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.save()\n      return\n    }\n    if (actionFlag) {\n      this.canvasContext.save()\n    }\n    var props = this.contextData.cTr.props\n    if (this.contextData._length <= this.contextData.cArrPos) {\n      this.contextData.duplicate()\n    }\n    var i\n    var arr = this.contextData.saved[this.contextData.cArrPos]\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = props[i]\n    }\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO\n    this.contextData.cArrPos += 1\n  }\n\n  CanvasRendererBase.prototype.restore = function (actionFlag) {\n    if (!this.renderConfig.clearCanvas) {\n      this.canvasContext.restore()\n      return\n    }\n    if (actionFlag) {\n      this.canvasContext.restore()\n      this.globalData.blendMode = 'source-over'\n    }\n    this.contextData.cArrPos -= 1\n    var popped = this.contextData.saved[this.contextData.cArrPos]\n    var i\n    var arr = this.contextData.cTr.props\n    for (i = 0; i < 16; i += 1) {\n      arr[i] = popped[i]\n    }\n    this.canvasContext.setTransform(popped[0], popped[1], popped[4], popped[5], popped[12], popped[13])\n    popped = this.contextData.savedOp[this.contextData.cArrPos]\n    this.contextData.cO = popped\n    if (this.globalData.currentGlobalAlpha !== popped) {\n      this.canvasContext.globalAlpha = popped\n      this.globalData.currentGlobalAlpha = popped\n    }\n  }\n\n  CanvasRendererBase.prototype.configAnimation = function (animData) {\n    if (this.animationItem.wrapper) {\n      this.animationItem.container = createTag('canvas')\n      var containerStyle = this.animationItem.container.style\n      containerStyle.width = '100%'\n      containerStyle.height = '100%'\n      var origin = '0px 0px 0px'\n      containerStyle.transformOrigin = origin\n      containerStyle.mozTransformOrigin = origin\n      containerStyle.webkitTransformOrigin = origin\n      containerStyle['-webkit-transform'] = origin\n      containerStyle.contentVisibility = this.renderConfig.contentVisibility\n      this.animationItem.wrapper.appendChild(this.animationItem.container)\n      this.canvasContext = this.animationItem.container.getContext('2d')\n      if (this.renderConfig.className) {\n        this.animationItem.container.setAttribute('class', this.renderConfig.className)\n      }\n      if (this.renderConfig.id) {\n        this.animationItem.container.setAttribute('id', this.renderConfig.id)\n      }\n    } else {\n      this.canvasContext = this.renderConfig.context\n    }\n    this.data = animData\n    this.layers = animData.layers\n    this.transformCanvas = {\n      w: animData.w,\n      h: animData.h,\n      sx: 0,\n      sy: 0,\n      tx: 0,\n      ty: 0,\n    }\n    this.setupGlobalData(animData, document.body)\n    this.globalData.canvasContext = this.canvasContext\n    this.globalData.renderer = this\n    this.globalData.isDashed = false\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad\n    this.globalData.transformCanvas = this.transformCanvas\n    this.elements = createSizedArray(animData.layers.length)\n\n    this.updateContainerSize()\n  }\n\n  CanvasRendererBase.prototype.updateContainerSize = function () {\n    this.reset()\n    var elementWidth\n    var elementHeight\n    if (this.animationItem.wrapper && this.animationItem.container) {\n      elementWidth = this.animationItem.wrapper.offsetWidth\n      elementHeight = this.animationItem.wrapper.offsetHeight\n      this.animationItem.container.setAttribute('width', elementWidth * this.renderConfig.dpr)\n      this.animationItem.container.setAttribute('height', elementHeight * this.renderConfig.dpr)\n    } else {\n      elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr\n      elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr\n    }\n    var elementRel\n    var animationRel\n    if (\n      this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 ||\n      this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1\n    ) {\n      var par = this.renderConfig.preserveAspectRatio.split(' ')\n      var fillType = par[1] || 'meet'\n      var pos = par[0] || 'xMidYMid'\n      var xPos = pos.substr(0, 4)\n      var yPos = pos.substr(4)\n      elementRel = elementWidth / elementHeight\n      animationRel = this.transformCanvas.w / this.transformCanvas.h\n      if ((animationRel > elementRel && fillType === 'meet') || (animationRel < elementRel && fillType === 'slice')) {\n        this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr)\n        this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr)\n      } else {\n        this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr)\n        this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr)\n      }\n\n      if (\n        xPos === 'xMid' &&\n        ((animationRel < elementRel && fillType === 'meet') || (animationRel > elementRel && fillType === 'slice'))\n      ) {\n        this.transformCanvas.tx =\n          ((elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2) *\n          this.renderConfig.dpr\n      } else if (\n        xPos === 'xMax' &&\n        ((animationRel < elementRel && fillType === 'meet') || (animationRel > elementRel && fillType === 'slice'))\n      ) {\n        this.transformCanvas.tx =\n          (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr\n      } else {\n        this.transformCanvas.tx = 0\n      }\n      if (\n        yPos === 'YMid' &&\n        ((animationRel > elementRel && fillType === 'meet') || (animationRel < elementRel && fillType === 'slice'))\n      ) {\n        this.transformCanvas.ty =\n          ((elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2) *\n          this.renderConfig.dpr\n      } else if (\n        yPos === 'YMax' &&\n        ((animationRel > elementRel && fillType === 'meet') || (animationRel < elementRel && fillType === 'slice'))\n      ) {\n        this.transformCanvas.ty =\n          (elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) * this.renderConfig.dpr\n      } else {\n        this.transformCanvas.ty = 0\n      }\n    } else if (this.renderConfig.preserveAspectRatio === 'none') {\n      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr)\n      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr)\n      this.transformCanvas.tx = 0\n      this.transformCanvas.ty = 0\n    } else {\n      this.transformCanvas.sx = this.renderConfig.dpr\n      this.transformCanvas.sy = this.renderConfig.dpr\n      this.transformCanvas.tx = 0\n      this.transformCanvas.ty = 0\n    }\n    this.transformCanvas.props = [\n      this.transformCanvas.sx,\n      0,\n      0,\n      0,\n      0,\n      this.transformCanvas.sy,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      this.transformCanvas.tx,\n      this.transformCanvas.ty,\n      0,\n      1,\n    ]\n    /* var i, len = this.elements.length;\n    for(i=0;i<len;i+=1){\n        if(this.elements[i] && this.elements[i].data.ty === 0){\n            this.elements[i].resize(this.globalData.transformCanvas);\n        }\n    } */\n    this.ctxTransform(this.transformCanvas.props)\n    this.canvasContext.beginPath()\n    this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h)\n    this.canvasContext.closePath()\n    this.canvasContext.clip()\n\n    this.renderFrame(this.renderedFrame, true)\n  }\n\n  CanvasRendererBase.prototype.destroy = function () {\n    if (this.renderConfig.clearCanvas && this.animationItem.wrapper) {\n      this.animationItem.wrapper.innerText = ''\n    }\n    var i\n    var len = this.layers ? this.layers.length : 0\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy()\n      }\n    }\n    this.elements.length = 0\n    this.globalData.canvasContext = null\n    this.animationItem.container = null\n    this.destroyed = true\n  }\n\n  CanvasRendererBase.prototype.renderFrame = function (num, forceRender) {\n    if (\n      (this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender) ||\n      this.destroyed ||\n      num === -1\n    ) {\n      return\n    }\n    this.renderedFrame = num\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame\n    this.globalData.frameId += 1\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender\n    this.globalData.projectInterface.currentFrame = num\n\n    // console.log('--------');\n    // console.log('NEW: ',num);\n    var i\n    var len = this.layers.length\n    if (!this.completeLayers) {\n      this.checkLayers(num)\n    }\n\n    for (i = 0; i < len; i += 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].prepareFrame(num - this.layers[i].st)\n      }\n    }\n    if (this.globalData._mdf) {\n      if (this.renderConfig.clearCanvas === true) {\n        this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h)\n      } else {\n        this.save()\n      }\n      for (i = len - 1; i >= 0; i -= 1) {\n        if (this.completeLayers || this.elements[i]) {\n          this.elements[i].renderFrame()\n        }\n      }\n      if (this.renderConfig.clearCanvas !== true) {\n        this.restore()\n      }\n    }\n  }\n\n  CanvasRendererBase.prototype.buildItem = function (pos) {\n    var elements = this.elements\n    if (elements[pos] || this.layers[pos].ty === 99) {\n      return\n    }\n    var element = this.createItem(this.layers[pos], this, this.globalData)\n    elements[pos] = element\n    element.initExpressions()\n    /* if(this.layers[pos].ty === 0){\n        element.resize(this.globalData.transformCanvas);\n    } */\n  }\n\n  CanvasRendererBase.prototype.checkPendingElements = function () {\n    while (this.pendingElements.length) {\n      var element = this.pendingElements.pop()\n      element.checkParenting()\n    }\n  }\n\n  CanvasRendererBase.prototype.hide = function () {\n    this.animationItem.container.style.display = 'none'\n  }\n\n  CanvasRendererBase.prototype.show = function () {\n    this.animationItem.container.style.display = 'block'\n  }\n\n  function CVCompElement(data, globalData, comp) {\n    this.completeLayers = false\n    this.layers = data.layers\n    this.pendingElements = []\n    this.elements = createSizedArray(this.layers.length)\n    this.initElement(data, globalData, comp)\n    this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true }\n  }\n\n  extendPrototype([CanvasRendererBase, ICompElement, CVBaseElement], CVCompElement)\n\n  CVCompElement.prototype.renderInnerContent = function () {\n    var ctx = this.canvasContext\n    ctx.beginPath()\n    ctx.moveTo(0, 0)\n    ctx.lineTo(this.data.w, 0)\n    ctx.lineTo(this.data.w, this.data.h)\n    ctx.lineTo(0, this.data.h)\n    ctx.lineTo(0, 0)\n    ctx.clip()\n    var i\n    var len = this.layers.length\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.completeLayers || this.elements[i]) {\n        this.elements[i].renderFrame()\n      }\n    }\n  }\n\n  CVCompElement.prototype.destroy = function () {\n    var i\n    var len = this.layers.length\n    for (i = len - 1; i >= 0; i -= 1) {\n      if (this.elements[i]) {\n        this.elements[i].destroy()\n      }\n    }\n    this.layers = null\n    this.elements = null\n  }\n\n  CVCompElement.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this)\n  }\n\n  function CanvasRenderer(animationItem, config) {\n    this.animationItem = animationItem\n    this.renderConfig = {\n      clearCanvas: config && config.clearCanvas !== undefined ? config.clearCanvas : true,\n      context: (config && config.context) || null,\n      progressiveLoad: (config && config.progressiveLoad) || false,\n      preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\n      imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\n      contentVisibility: (config && config.contentVisibility) || 'visible',\n      className: (config && config.className) || '',\n      id: (config && config.id) || '',\n    }\n    this.renderConfig.dpr = (config && config.dpr) || 1\n    if (this.animationItem.wrapper) {\n      this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1\n    }\n    this.renderedFrame = -1\n    this.globalData = {\n      frameNum: -1,\n      _mdf: false,\n      renderConfig: this.renderConfig,\n      currentGlobalAlpha: -1,\n    }\n    this.contextData = new CVContextData()\n    this.elements = []\n    this.pendingElements = []\n    this.transformMat = new Matrix()\n    this.completeLayers = false\n    this.rendererType = 'canvas'\n  }\n  extendPrototype([CanvasRendererBase], CanvasRenderer)\n\n  CanvasRenderer.prototype.createComp = function (data) {\n    return new CVCompElement(data, this.globalData, this)\n  }\n\n  // Registering renderers\n  registerRenderer('canvas', CanvasRenderer)\n\n  // Registering shape modifiers\n  ShapeModifiers.registerModifier('tm', TrimModifier)\n  ShapeModifiers.registerModifier('pb', PuckerAndBloatModifier)\n  ShapeModifiers.registerModifier('rp', RepeaterModifier)\n  ShapeModifiers.registerModifier('rd', RoundCornersModifier)\n\n  const Expressions = (function () {\n    var ob = {}\n    ob.initExpressions = initExpressions\n\n    function initExpressions(animation) {\n      var stackCount = 0\n      var registers = []\n\n      function pushExpression() {\n        stackCount += 1\n      }\n\n      function popExpression() {\n        stackCount -= 1\n        if (stackCount === 0) {\n          releaseInstances()\n        }\n      }\n\n      function registerExpressionProperty(expression) {\n        if (registers.indexOf(expression) === -1) {\n          registers.push(expression)\n        }\n      }\n\n      function releaseInstances() {\n        var i\n        var len = registers.length\n        for (i = 0; i < len; i += 1) {\n          registers[i].release()\n        }\n        registers.length = 0\n      }\n\n      animation.renderer.compInterface = CompExpressionInterface(animation.renderer)\n      animation.renderer.globalData.projectInterface.registerComposition(animation.renderer)\n      animation.renderer.globalData.pushExpression = pushExpression\n      animation.renderer.globalData.popExpression = popExpression\n      animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty\n    }\n    return ob\n  })()\n\n  /* eslint-disable */\n  /*\n Copyright 2014 David Bau.\n\n Permission is hereby granted, free of charge, to any person obtaining\n a copy of this software and associated documentation files (the\n \"Software\"), to deal in the Software without restriction, including\n without limitation the rights to use, copy, modify, merge, publish,\n distribute, sublicense, and/or sell copies of the Software, and to\n permit persons to whom the Software is furnished to do so, subject to\n the following conditions:\n\n The above copyright notice and this permission notice shall be\n included in all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n */\n\n  function seedRandom(pool, math) {\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    var global = this,\n      width = 256, // each RC4 output is 0 <= x < 256\n      chunks = 6, // at least six RC4 outputs for each double\n      digits = 52, // there are 52 significant digits in a double\n      rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n      startdenom = math.pow(width, chunks),\n      significance = math.pow(2, digits),\n      overflow = significance * 2,\n      mask = width - 1,\n      nodecrypto // node.js crypto module, initialized at the bottom.\n\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n    function seedrandom(seed, options, callback) {\n      var key = []\n      options = options === true ? { entropy: true } : options || {}\n\n      // Flatten the seed string or build one from local entropy if needed.\n      var shortseed = mixkey(\n        flatten(options.entropy ? [seed, tostring(pool)] : seed === null ? autoseed() : seed, 3),\n        key,\n      )\n\n      // Use the seed to initialize an ARC4 generator.\n      var arc4 = new ARC4(key)\n\n      // This function returns a random double in [0, 1) that contains\n      // randomness in every bit of the mantissa of the IEEE 754 value.\n      var prng = function () {\n        var n = arc4.g(chunks), // Start with a numerator n < 2 ^ 48\n          d = startdenom, //   and denominator d = 2 ^ 48.\n          x = 0 //   and no 'extra last byte'.\n        while (n < significance) {\n          // Fill up all significant digits by\n          n = (n + x) * width //   shifting numerator and\n          d *= width //   denominator and generating a\n          x = arc4.g(1) //   new least-significant-byte.\n        }\n        while (n >= overflow) {\n          // To avoid rounding up, before adding\n          n /= 2 //   last byte, shift everything\n          d /= 2 //   right using integer math until\n          x >>>= 1 //   we have exactly the desired bits.\n        }\n        return (n + x) / d // Form the number within [0, 1).\n      }\n\n      prng.int32 = function () {\n        return arc4.g(4) | 0\n      }\n      prng.quick = function () {\n        return arc4.g(4) / 0x100000000\n      }\n      prng.double = prng\n\n      // Mix the randomness into accumulated entropy.\n      mixkey(tostring(arc4.S), pool)\n\n      // Calling convention: what to return as a function of prng, seed, is_math.\n      return (\n        options.pass ||\n        callback ||\n        function (prng, seed, is_math_call, state) {\n          if (state) {\n            // Load the arc4 state from the given state if it has an S array.\n            if (state.S) {\n              copy(state, arc4)\n            }\n            // Only provide the .state method if requested via options.state.\n            prng.state = function () {\n              return copy(arc4, {})\n            }\n          }\n\n          // If called as a method of Math (Math.seedrandom()), mutate\n          // Math.random because that is how seedrandom.js has worked since v1.0.\n          if (is_math_call) {\n            math[rngname] = prng\n            return seed\n          }\n\n          // Otherwise, it is a newer calling convention, so return the\n          // prng directly.\n          else return prng\n        }\n      )(prng, shortseed, 'global' in options ? options.global : this == math, options.state)\n    }\n    math['seed' + rngname] = seedrandom\n\n    //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n    function ARC4(key) {\n      var t,\n        keylen = key.length,\n        me = this,\n        i = 0,\n        j = (me.i = me.j = 0),\n        s = (me.S = [])\n\n      // The empty key [] is treated as [0].\n      if (!keylen) {\n        key = [keylen++]\n      }\n\n      // Set up S using the standard key scheduling algorithm.\n      while (i < width) {\n        s[i] = i++\n      }\n      for (i = 0; i < width; i++) {\n        s[i] = s[(j = mask & (j + key[i % keylen] + (t = s[i])))]\n        s[j] = t\n      }\n\n      // The \"g\" method returns the next (count) outputs as one number.\n      me.g = function (count) {\n        // Using instance members instead of closure state nearly doubles speed.\n        var t,\n          r = 0,\n          i = me.i,\n          j = me.j,\n          s = me.S\n        while (count--) {\n          t = s[(i = mask & (i + 1))]\n          r = r * width + s[mask & ((s[i] = s[(j = mask & (j + t))]) + (s[j] = t))]\n        }\n        me.i = i\n        me.j = j\n        return r\n        // For robust unpredictability, the function call below automatically\n        // discards an initial batch of values.  This is called RC4-drop[256].\n        // See http://google.com/search?q=rsa+fluhrer+response&btnI\n      }\n    }\n\n    //\n    // copy()\n    // Copies internal state of ARC4 to or from a plain object.\n    //\n    function copy(f, t) {\n      t.i = f.i\n      t.j = f.j\n      t.S = f.S.slice()\n      return t\n    }\n\n    //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n    function flatten(obj, depth) {\n      var result = [],\n        typ = typeof obj,\n        prop\n      if (depth && typ == 'object') {\n        for (prop in obj) {\n          try {\n            result.push(flatten(obj[prop], depth - 1))\n          } catch (e) {}\n        }\n      }\n      return result.length ? result : typ == 'string' ? obj : obj + '\\0'\n    }\n\n    //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n    function mixkey(seed, key) {\n      var stringseed = seed + '',\n        smear,\n        j = 0\n      while (j < stringseed.length) {\n        key[mask & j] = mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++))\n      }\n      return tostring(key)\n    }\n\n    //\n    // autoseed()\n    // Returns an object for autoseeding, using window.crypto and Node crypto\n    // module if available.\n    //\n    function autoseed() {\n      try {\n        if (nodecrypto) {\n          return tostring(nodecrypto.randomBytes(width))\n        }\n        var out = new Uint8Array(width)\n        ;(global.crypto || global.msCrypto).getRandomValues(out)\n        return tostring(out)\n      } catch (e) {\n        var browser = global.navigator,\n          plugins = browser && browser.plugins\n        return [+new Date(), global, plugins, global.screen, tostring(pool)]\n      }\n    }\n\n    //\n    // tostring()\n    // Converts an array of charcodes to a string\n    //\n    function tostring(a) {\n      return String.fromCharCode.apply(0, a)\n    }\n\n    //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to interfere with deterministic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n    mixkey(math.random(), pool)\n\n    //\n    // Nodejs and AMD support: export the implementation as a module using\n    // either convention.\n    //\n\n    // End anonymous scope, and pass initial values.\n  }\n\n  function initialize$2(BMMath) {\n    seedRandom([], BMMath)\n  }\n\n  var propTypes = {\n    SHAPE: 'shape',\n  }\n\n  /* eslint-disable camelcase */\n\n  const ExpressionManager = (function () {\n    'use strict'\n\n    var ob = {}\n    var Math = BMMath\n    var window = null\n    var document = null\n    var XMLHttpRequest = null\n    var fetch = null\n    var frames = null\n    initialize$2(BMMath)\n\n    function $bm_isInstanceOfArray(arr) {\n      return arr.constructor === Array || arr.constructor === Float32Array\n    }\n\n    function isNumerable(tOfV, v) {\n      return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number\n    }\n\n    function $bm_neg(a) {\n      var tOfA = typeof a\n      if (tOfA === 'number' || tOfA === 'boolean' || a instanceof Number) {\n        return -a\n      }\n      if ($bm_isInstanceOfArray(a)) {\n        var i\n        var lenA = a.length\n        var retArr = []\n        for (i = 0; i < lenA; i += 1) {\n          retArr[i] = -a[i]\n        }\n        return retArr\n      }\n      if (a.propType) {\n        return a.v\n      }\n      return -a\n    }\n\n    var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, 'easeIn').get\n    var easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, 'easeOut').get\n    var easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, 'easeInOut').get\n\n    function sum(a, b) {\n      var tOfA = typeof a\n      var tOfB = typeof b\n      if (tOfA === 'string' || tOfB === 'string') {\n        return a + b\n      }\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a + b\n      }\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0)\n        a[0] += b\n        return a\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0)\n        b[0] = a + b[0]\n        return b\n      }\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0\n        var lenA = a.length\n        var lenB = b.length\n        var retArr = []\n        while (i < lenA || i < lenB) {\n          if (\n            (typeof a[i] === 'number' || a[i] instanceof Number) &&\n            (typeof b[i] === 'number' || b[i] instanceof Number)\n          ) {\n            retArr[i] = a[i] + b[i]\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i]\n          }\n          i += 1\n        }\n        return retArr\n      }\n      return 0\n    }\n    var add = sum\n\n    function sub(a, b) {\n      var tOfA = typeof a\n      var tOfB = typeof b\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        if (tOfA === 'string') {\n          a = parseInt(a, 10)\n        }\n        if (tOfB === 'string') {\n          b = parseInt(b, 10)\n        }\n        return a - b\n      }\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        a = a.slice(0)\n        a[0] -= b\n        return a\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        b = b.slice(0)\n        b[0] = a - b[0]\n        return b\n      }\n      if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\n        var i = 0\n        var lenA = a.length\n        var lenB = b.length\n        var retArr = []\n        while (i < lenA || i < lenB) {\n          if (\n            (typeof a[i] === 'number' || a[i] instanceof Number) &&\n            (typeof b[i] === 'number' || b[i] instanceof Number)\n          ) {\n            retArr[i] = a[i] - b[i]\n          } else {\n            retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i]\n          }\n          i += 1\n        }\n        return retArr\n      }\n      return 0\n    }\n\n    function mul(a, b) {\n      var tOfA = typeof a\n      var tOfB = typeof b\n      var arr\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a * b\n      }\n\n      var i\n      var len\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length\n        arr = createTypedArray('float32', len)\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] * b\n        }\n        return arr\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length\n        arr = createTypedArray('float32', len)\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a * b[i]\n        }\n        return arr\n      }\n      return 0\n    }\n\n    function div(a, b) {\n      var tOfA = typeof a\n      var tOfB = typeof b\n      var arr\n      if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\n        return a / b\n      }\n      var i\n      var len\n      if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\n        len = a.length\n        arr = createTypedArray('float32', len)\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a[i] / b\n        }\n        return arr\n      }\n      if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\n        len = b.length\n        arr = createTypedArray('float32', len)\n        for (i = 0; i < len; i += 1) {\n          arr[i] = a / b[i]\n        }\n        return arr\n      }\n      return 0\n    }\n    function mod(a, b) {\n      if (typeof a === 'string') {\n        a = parseInt(a, 10)\n      }\n      if (typeof b === 'string') {\n        b = parseInt(b, 10)\n      }\n      return a % b\n    }\n    var $bm_sum = sum\n    var $bm_sub = sub\n    var $bm_mul = mul\n    var $bm_div = div\n    var $bm_mod = mod\n\n    function clamp(num, min, max) {\n      if (min > max) {\n        var mm = max\n        max = min\n        min = mm\n      }\n      return Math.min(Math.max(num, min), max)\n    }\n\n    function radiansToDegrees(val) {\n      return val / degToRads\n    }\n    var radians_to_degrees = radiansToDegrees\n\n    function degreesToRadians(val) {\n      return val * degToRads\n    }\n    var degrees_to_radians = radiansToDegrees\n\n    var helperLengthArray = [0, 0, 0, 0, 0, 0]\n\n    function length(arr1, arr2) {\n      if (typeof arr1 === 'number' || arr1 instanceof Number) {\n        arr2 = arr2 || 0\n        return Math.abs(arr1 - arr2)\n      }\n      if (!arr2) {\n        arr2 = helperLengthArray\n      }\n      var i\n      var len = Math.min(arr1.length, arr2.length)\n      var addedLength = 0\n      for (i = 0; i < len; i += 1) {\n        addedLength += Math.pow(arr2[i] - arr1[i], 2)\n      }\n      return Math.sqrt(addedLength)\n    }\n\n    function normalize(vec) {\n      return div(vec, length(vec))\n    }\n\n    function rgbToHsl(val) {\n      var r = val[0]\n      var g = val[1]\n      var b = val[2]\n      var max = Math.max(r, g, b)\n      var min = Math.min(r, g, b)\n      var h\n      var s\n      var l = (max + min) / 2\n\n      if (max === min) {\n        h = 0 // achromatic\n        s = 0 // achromatic\n      } else {\n        var d = max - min\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0)\n            break\n          case g:\n            h = (b - r) / d + 2\n            break\n          case b:\n            h = (r - g) / d + 4\n            break\n          default:\n            break\n        }\n        h /= 6\n      }\n\n      return [h, s, l, val[3]]\n    }\n\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1\n      if (t > 1) t -= 1\n      if (t < 1 / 6) return p + (q - p) * 6 * t\n      if (t < 1 / 2) return q\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n      return p\n    }\n\n    function hslToRgb(val) {\n      var h = val[0]\n      var s = val[1]\n      var l = val[2]\n\n      var r\n      var g\n      var b\n\n      if (s === 0) {\n        r = l // achromatic\n        b = l // achromatic\n        g = l // achromatic\n      } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s\n        var p = 2 * l - q\n        r = hue2rgb(p, q, h + 1 / 3)\n        g = hue2rgb(p, q, h)\n        b = hue2rgb(p, q, h - 1 / 3)\n      }\n\n      return [r, g, b, val[3]]\n    }\n\n    function linear(t, tMin, tMax, value1, value2) {\n      if (value1 === undefined || value2 === undefined) {\n        value1 = tMin\n        value2 = tMax\n        tMin = 0\n        tMax = 1\n      }\n      if (tMax < tMin) {\n        var _tMin = tMax\n        tMax = tMin\n        tMin = _tMin\n      }\n      if (t <= tMin) {\n        return value1\n      }\n      if (t >= tMax) {\n        return value2\n      }\n      var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin)\n      if (!value1.length) {\n        return value1 + (value2 - value1) * perc\n      }\n      var i\n      var len = value1.length\n      var arr = createTypedArray('float32', len)\n      for (i = 0; i < len; i += 1) {\n        arr[i] = value1[i] + (value2[i] - value1[i]) * perc\n      }\n      return arr\n    }\n    function random(min, max) {\n      if (max === undefined) {\n        if (min === undefined) {\n          min = 0\n          max = 1\n        } else {\n          max = min\n          min = undefined\n        }\n      }\n      if (max.length) {\n        var i\n        var len = max.length\n        if (!min) {\n          min = createTypedArray('float32', len)\n        }\n        var arr = createTypedArray('float32', len)\n        var rnd = BMMath.random()\n        for (i = 0; i < len; i += 1) {\n          arr[i] = min[i] + rnd * (max[i] - min[i])\n        }\n        return arr\n      }\n      if (min === undefined) {\n        min = 0\n      }\n      var rndm = BMMath.random()\n      return min + rndm * (max - min)\n    }\n\n    function createPath(points, inTangents, outTangents, closed) {\n      var i\n      var len = points.length\n      var path = shapePool.newElement()\n      path.setPathData(!!closed, len)\n      var arrPlaceholder = [0, 0]\n      var inVertexPoint\n      var outVertexPoint\n      for (i = 0; i < len; i += 1) {\n        inVertexPoint = inTangents && inTangents[i] ? inTangents[i] : arrPlaceholder\n        outVertexPoint = outTangents && outTangents[i] ? outTangents[i] : arrPlaceholder\n        path.setTripleAt(\n          points[i][0],\n          points[i][1],\n          outVertexPoint[0] + points[i][0],\n          outVertexPoint[1] + points[i][1],\n          inVertexPoint[0] + points[i][0],\n          inVertexPoint[1] + points[i][1],\n          i,\n          true,\n        )\n      }\n      return path\n    }\n\n    // https://github.com/airbnb/lottie-web/issues/2828\n    // https://github.com/airbnb/lottie-web/pull/2833\n    // Bail out if we don't want expressions\n    function noOp(_value) {\n      return _value\n    }\n    function initiateExpression(elem, data, property) {\n      return noOp\n    }\n\n    ob.initiateExpression = initiateExpression\n    ob.__preventDeadCodeRemoval = [\n      window,\n      document,\n      XMLHttpRequest,\n      fetch,\n      frames,\n      $bm_neg,\n      add,\n      $bm_sum,\n      $bm_sub,\n      $bm_mul,\n      $bm_div,\n      $bm_mod,\n      clamp,\n      radians_to_degrees,\n      degreesToRadians,\n      degrees_to_radians,\n      normalize,\n      rgbToHsl,\n      hslToRgb,\n      linear,\n      random,\n      createPath,\n    ]\n    return ob\n  })()\n\n  const expressionHelpers = (function () {\n    function searchExpressions(elem, data, prop) {\n      if (data.x) {\n        prop.k = true\n        prop.x = true\n        prop.initiateExpression = ExpressionManager.initiateExpression\n        prop.effectsSequence.push(prop.initiateExpression(elem, data, prop).bind(prop))\n      }\n    }\n\n    function getValueAtTime(frameNum) {\n      frameNum *= this.elem.globalData.frameRate\n      frameNum -= this.offsetTime\n      if (frameNum !== this._cachingAtTime.lastFrame) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0\n        this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime)\n        this._cachingAtTime.lastFrame = frameNum\n      }\n      return this._cachingAtTime.value\n    }\n\n    function getSpeedAtTime(frameNum) {\n      var delta = -0.01\n      var v1 = this.getValueAtTime(frameNum)\n      var v2 = this.getValueAtTime(frameNum + delta)\n      var speed = 0\n      if (v1.length) {\n        var i\n        for (i = 0; i < v1.length; i += 1) {\n          speed += Math.pow(v2[i] - v1[i], 2)\n        }\n        speed = Math.sqrt(speed) * 100\n      } else {\n        speed = 0\n      }\n      return speed\n    }\n\n    function getVelocityAtTime(frameNum) {\n      if (this.vel !== undefined) {\n        return this.vel\n      }\n      var delta = -0.001\n      // frameNum += this.elem.data.st;\n      var v1 = this.getValueAtTime(frameNum)\n      var v2 = this.getValueAtTime(frameNum + delta)\n      var velocity\n      if (v1.length) {\n        velocity = createTypedArray('float32', v1.length)\n        var i\n        for (i = 0; i < v1.length; i += 1) {\n          // removing frameRate\n          // if needed, don't add it here\n          // velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\n          velocity[i] = (v2[i] - v1[i]) / delta\n        }\n      } else {\n        velocity = (v2 - v1) / delta\n      }\n      return velocity\n    }\n\n    function getStaticValueAtTime() {\n      return this.pv\n    }\n\n    function setGroupProperty(propertyGroup) {\n      this.propertyGroup = propertyGroup\n    }\n\n    return {\n      searchExpressions: searchExpressions,\n      getSpeedAtTime: getSpeedAtTime,\n      getVelocityAtTime: getVelocityAtTime,\n      getValueAtTime: getValueAtTime,\n      getStaticValueAtTime: getStaticValueAtTime,\n      setGroupProperty: setGroupProperty,\n    }\n  })()\n\n  function addPropertyDecorator() {\n    function loopOut(type, duration, durationFlag) {\n      if (!this.k || !this.keyframes) {\n        return this.pv\n      }\n      type = type ? type.toLowerCase() : ''\n      var currentFrame = this.comp.renderedFrame\n      var keyframes = this.keyframes\n      var lastKeyFrame = keyframes[keyframes.length - 1].t\n      if (currentFrame <= lastKeyFrame) {\n        return this.pv\n      }\n      var cycleDuration\n      var firstKeyFrame\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1\n        }\n        firstKeyFrame = keyframes[keyframes.length - 1 - duration].t\n        cycleDuration = lastKeyFrame - firstKeyFrame\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip)\n        } else {\n          cycleDuration = Math.abs(lastKeyFrame - this.elem.comp.globalData.frameRate * duration)\n        }\n        firstKeyFrame = lastKeyFrame - cycleDuration\n      }\n      var i\n      var len\n      var ret\n      if (type === 'pingpong') {\n        var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration)\n        if (iterations % 2 !== 0) {\n          return this.getValueAtTime(\n            (cycleDuration - ((currentFrame - firstKeyFrame) % cycleDuration) + firstKeyFrame) /\n              this.comp.globalData.frameRate,\n            0,\n          ) // eslint-disable-line\n        }\n      } else if (type === 'offset') {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0)\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0)\n        var current = this.getValueAtTime(\n          (((currentFrame - firstKeyFrame) % cycleDuration) + firstKeyFrame) / this.comp.globalData.frameRate,\n          0,\n        ) // eslint-disable-line\n        var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration)\n        if (this.pv.length) {\n          ret = new Array(initV.length)\n          len = ret.length\n          for (i = 0; i < len; i += 1) {\n            ret[i] = (endV[i] - initV[i]) * repeats + current[i]\n          }\n          return ret\n        }\n        return (endV - initV) * repeats + current\n      } else if (type === 'continue') {\n        var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0)\n        var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0)\n        if (this.pv.length) {\n          ret = new Array(lastValue.length)\n          len = ret.length\n          for (i = 0; i < len; i += 1) {\n            ret[i] =\n              lastValue[i] +\n              ((lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate)) /\n                0.0005 // eslint-disable-line\n          }\n          return ret\n        }\n        return lastValue + (lastValue - nextLastValue) * ((currentFrame - lastKeyFrame) / 0.001)\n      }\n      return this.getValueAtTime(\n        (((currentFrame - firstKeyFrame) % cycleDuration) + firstKeyFrame) / this.comp.globalData.frameRate,\n        0,\n      ) // eslint-disable-line\n    }\n\n    function loopIn(type, duration, durationFlag) {\n      if (!this.k) {\n        return this.pv\n      }\n      type = type ? type.toLowerCase() : ''\n      var currentFrame = this.comp.renderedFrame\n      var keyframes = this.keyframes\n      var firstKeyFrame = keyframes[0].t\n      if (currentFrame >= firstKeyFrame) {\n        return this.pv\n      }\n      var cycleDuration\n      var lastKeyFrame\n      if (!durationFlag) {\n        if (!duration || duration > keyframes.length - 1) {\n          duration = keyframes.length - 1\n        }\n        lastKeyFrame = keyframes[duration].t\n        cycleDuration = lastKeyFrame - firstKeyFrame\n      } else {\n        if (!duration) {\n          cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame)\n        } else {\n          cycleDuration = Math.abs(this.elem.comp.globalData.frameRate * duration)\n        }\n        lastKeyFrame = firstKeyFrame + cycleDuration\n      }\n      var i\n      var len\n      var ret\n      if (type === 'pingpong') {\n        var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration)\n        if (iterations % 2 === 0) {\n          return this.getValueAtTime(\n            (((firstKeyFrame - currentFrame) % cycleDuration) + firstKeyFrame) / this.comp.globalData.frameRate,\n            0,\n          ) // eslint-disable-line\n        }\n      } else if (type === 'offset') {\n        var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0)\n        var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0)\n        var current = this.getValueAtTime(\n          (cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration) + firstKeyFrame) /\n            this.comp.globalData.frameRate,\n          0,\n        )\n        var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1\n        if (this.pv.length) {\n          ret = new Array(initV.length)\n          len = ret.length\n          for (i = 0; i < len; i += 1) {\n            ret[i] = current[i] - (endV[i] - initV[i]) * repeats\n          }\n          return ret\n        }\n        return current - (endV - initV) * repeats\n      } else if (type === 'continue') {\n        var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0)\n        var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0)\n        if (this.pv.length) {\n          ret = new Array(firstValue.length)\n          len = ret.length\n          for (i = 0; i < len; i += 1) {\n            ret[i] = firstValue[i] + ((firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame)) / 0.001\n          }\n          return ret\n        }\n        return firstValue + ((firstValue - nextFirstValue) * (firstKeyFrame - currentFrame)) / 0.001\n      }\n      return this.getValueAtTime(\n        (cycleDuration - (((firstKeyFrame - currentFrame) % cycleDuration) + firstKeyFrame)) /\n          this.comp.globalData.frameRate,\n        0,\n      ) // eslint-disable-line\n    }\n\n    function smooth(width, samples) {\n      if (!this.k) {\n        return this.pv\n      }\n      width = (width || 0.4) * 0.5\n      samples = Math.floor(samples || 5)\n      if (samples <= 1) {\n        return this.pv\n      }\n      var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate\n      var initFrame = currentTime - width\n      var endFrame = currentTime + width\n      var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1\n      var i = 0\n      var j = 0\n      var value\n      if (this.pv.length) {\n        value = createTypedArray('float32', this.pv.length)\n      } else {\n        value = 0\n      }\n      var sampleValue\n      while (i < samples) {\n        sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency)\n        if (this.pv.length) {\n          for (j = 0; j < this.pv.length; j += 1) {\n            value[j] += sampleValue[j]\n          }\n        } else {\n          value += sampleValue\n        }\n        i += 1\n      }\n      if (this.pv.length) {\n        for (j = 0; j < this.pv.length; j += 1) {\n          value[j] /= samples\n        }\n      } else {\n        value /= samples\n      }\n      return value\n    }\n\n    function getTransformValueAtTime(time) {\n      if (!this._transformCachingAtTime) {\n        this._transformCachingAtTime = {\n          v: new Matrix(),\n        }\n      }\n      /// /\n      var matrix = this._transformCachingAtTime.v\n      matrix.cloneFromProps(this.pre.props)\n      if (this.appliedTransformations < 1) {\n        var anchor = this.a.getValueAtTime(time)\n        matrix.translate(-anchor[0] * this.a.mult, -anchor[1] * this.a.mult, anchor[2] * this.a.mult)\n      }\n      if (this.appliedTransformations < 2) {\n        var scale = this.s.getValueAtTime(time)\n        matrix.scale(scale[0] * this.s.mult, scale[1] * this.s.mult, scale[2] * this.s.mult)\n      }\n      if (this.sk && this.appliedTransformations < 3) {\n        var skew = this.sk.getValueAtTime(time)\n        var skewAxis = this.sa.getValueAtTime(time)\n        matrix.skewFromAxis(-skew * this.sk.mult, skewAxis * this.sa.mult)\n      }\n      if (this.r && this.appliedTransformations < 4) {\n        var rotation = this.r.getValueAtTime(time)\n        matrix.rotate(-rotation * this.r.mult)\n      } else if (!this.r && this.appliedTransformations < 4) {\n        var rotationZ = this.rz.getValueAtTime(time)\n        var rotationY = this.ry.getValueAtTime(time)\n        var rotationX = this.rx.getValueAtTime(time)\n        var orientation = this.or.getValueAtTime(time)\n        matrix\n          .rotateZ(-rotationZ * this.rz.mult)\n          .rotateY(rotationY * this.ry.mult)\n          .rotateX(rotationX * this.rx.mult)\n          .rotateZ(-orientation[2] * this.or.mult)\n          .rotateY(orientation[1] * this.or.mult)\n          .rotateX(orientation[0] * this.or.mult)\n      }\n      if (this.data.p && this.data.p.s) {\n        var positionX = this.px.getValueAtTime(time)\n        var positionY = this.py.getValueAtTime(time)\n        if (this.data.p.z) {\n          var positionZ = this.pz.getValueAtTime(time)\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, -positionZ * this.pz.mult)\n        } else {\n          matrix.translate(positionX * this.px.mult, positionY * this.py.mult, 0)\n        }\n      } else {\n        var position = this.p.getValueAtTime(time)\n        matrix.translate(position[0] * this.p.mult, position[1] * this.p.mult, -position[2] * this.p.mult)\n      }\n      return matrix\n      /// /\n    }\n\n    function getTransformStaticValueAtTime() {\n      return this.v.clone(new Matrix())\n    }\n\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty\n    TransformPropertyFactory.getTransformProperty = function (elem, data, container) {\n      var prop = getTransformProperty(elem, data, container)\n      if (prop.dynamicProperties.length) {\n        prop.getValueAtTime = getTransformValueAtTime.bind(prop)\n      } else {\n        prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop)\n      }\n      prop.setGroupProperty = expressionHelpers.setGroupProperty\n      return prop\n    }\n\n    var propertyGetProp = PropertyFactory.getProp\n    PropertyFactory.getProp = function (elem, data, type, mult, container) {\n      var prop = propertyGetProp(elem, data, type, mult, container)\n      // prop.getVelocityAtTime = getVelocityAtTime;\n      // prop.loopOut = loopOut;\n      // prop.loopIn = loopIn;\n      if (prop.kf) {\n        prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop)\n      } else {\n        prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop)\n      }\n      prop.setGroupProperty = expressionHelpers.setGroupProperty\n      prop.loopOut = loopOut\n      prop.loopIn = loopIn\n      prop.smooth = smooth\n      prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop)\n      prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop)\n      prop.numKeys = data.a === 1 ? data.k.length : 0\n      prop.propertyIndex = data.ix\n      var value = 0\n      if (type !== 0) {\n        value = createTypedArray('float32', data.a === 1 ? data.k[0].s.length : data.k.length)\n      }\n      prop._cachingAtTime = {\n        lastFrame: initialDefaultFrame,\n        lastIndex: 0,\n        value: value,\n      }\n      expressionHelpers.searchExpressions(elem, data, prop)\n      if (prop.k) {\n        container.addDynamicProperty(prop)\n      }\n\n      return prop\n    }\n\n    function getShapeValueAtTime(frameNum) {\n      // For now this caching object is created only when needed instead of creating it when the shape is initialized.\n      if (!this._cachingAtTime) {\n        this._cachingAtTime = {\n          shapeValue: shapePool.clone(this.pv),\n          lastIndex: 0,\n          lastTime: initialDefaultFrame,\n        }\n      }\n\n      frameNum *= this.elem.globalData.frameRate\n      frameNum -= this.offsetTime\n      if (frameNum !== this._cachingAtTime.lastTime) {\n        this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0\n        this._cachingAtTime.lastTime = frameNum\n        this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime)\n      }\n      return this._cachingAtTime.shapeValue\n    }\n\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction()\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction()\n\n    function ShapeExpressions() {}\n    ShapeExpressions.prototype = {\n      vertices: function (prop, time) {\n        if (this.k) {\n          this.getValue()\n        }\n        var shapePath = this.v\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0)\n        }\n        var i\n        var len = shapePath._length\n        var vertices = shapePath[prop]\n        var points = shapePath.v\n        var arr = createSizedArray(len)\n        for (i = 0; i < len; i += 1) {\n          if (prop === 'i' || prop === 'o') {\n            arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]]\n          } else {\n            arr[i] = [vertices[i][0], vertices[i][1]]\n          }\n        }\n        return arr\n      },\n      points: function (time) {\n        return this.vertices('v', time)\n      },\n      inTangents: function (time) {\n        return this.vertices('i', time)\n      },\n      outTangents: function (time) {\n        return this.vertices('o', time)\n      },\n      isClosed: function () {\n        return this.v.c\n      },\n      pointOnPath: function (perc, time) {\n        var shapePath = this.v\n        if (time !== undefined) {\n          shapePath = this.getValueAtTime(time, 0)\n        }\n        if (!this._segmentsLength) {\n          this._segmentsLength = bez.getSegmentsLength(shapePath)\n        }\n\n        var segmentsLength = this._segmentsLength\n        var lengths = segmentsLength.lengths\n        var lengthPos = segmentsLength.totalLength * perc\n        var i = 0\n        var len = lengths.length\n        var accumulatedLength = 0\n        var pt\n        while (i < len) {\n          if (accumulatedLength + lengths[i].addedLength > lengthPos) {\n            var initIndex = i\n            var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1\n            var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength\n            pt = bez.getPointInSegment(\n              shapePath.v[initIndex],\n              shapePath.v[endIndex],\n              shapePath.o[initIndex],\n              shapePath.i[endIndex],\n              segmentPerc,\n              lengths[i],\n            )\n            break\n          } else {\n            accumulatedLength += lengths[i].addedLength\n          }\n          i += 1\n        }\n        if (!pt) {\n          pt = shapePath.c\n            ? [shapePath.v[0][0], shapePath.v[0][1]]\n            : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]]\n        }\n        return pt\n      },\n      vectorOnPath: function (perc, time, vectorType) {\n        // perc doesn't use triple equality because it can be a Number object as well as a primitive.\n        if (perc == 1) {\n          // eslint-disable-line eqeqeq\n          perc = this.v.c\n        } else if (perc == 0) {\n          // eslint-disable-line eqeqeq\n          perc = 0.999\n        }\n        var pt1 = this.pointOnPath(perc, time)\n        var pt2 = this.pointOnPath(perc + 0.001, time)\n        var xLength = pt2[0] - pt1[0]\n        var yLength = pt2[1] - pt1[1]\n        var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2))\n        if (magnitude === 0) {\n          return [0, 0]\n        }\n        var unitVector =\n          vectorType === 'tangent'\n            ? [xLength / magnitude, yLength / magnitude]\n            : [-yLength / magnitude, xLength / magnitude]\n        return unitVector\n      },\n      tangentOnPath: function (perc, time) {\n        return this.vectorOnPath(perc, time, 'tangent')\n      },\n      normalOnPath: function (perc, time) {\n        return this.vectorOnPath(perc, time, 'normal')\n      },\n      setGroupProperty: expressionHelpers.setGroupProperty,\n      getValueAtTime: expressionHelpers.getStaticValueAtTime,\n    }\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction)\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction)\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression\n\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp\n    ShapePropertyFactory.getShapeProp = function (elem, data, type, arr, trims) {\n      var prop = propertyGetShapeProp(elem, data, type, arr, trims)\n      prop.propertyIndex = data.ix\n      prop.lock = false\n      if (type === 3) {\n        expressionHelpers.searchExpressions(elem, data.pt, prop)\n      } else if (type === 4) {\n        expressionHelpers.searchExpressions(elem, data.ks, prop)\n      }\n      if (prop.k) {\n        elem.addDynamicProperty(prop)\n      }\n      return prop\n    }\n  }\n\n  function initialize$1() {\n    addPropertyDecorator()\n  }\n\n  function addDecorator() {\n    function searchExpressions() {\n      if (this.data.d.x) {\n        this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this)\n        this.addEffect(this.getExpressionValue.bind(this))\n        return true\n      }\n      return null\n    }\n\n    TextProperty.prototype.getExpressionValue = function (currentValue, text) {\n      var newValue = this.calculateExpression(text)\n      if (currentValue.t !== newValue) {\n        var newData = {}\n        this.copyData(newData, currentValue)\n        newData.t = newValue.toString()\n        newData.__complete = false\n        return newData\n      }\n      return currentValue\n    }\n\n    TextProperty.prototype.searchProperty = function () {\n      var isKeyframed = this.searchKeyframes()\n      var hasExpressions = this.searchExpressions()\n      this.kf = isKeyframed || hasExpressions\n      return this.kf\n    }\n\n    TextProperty.prototype.searchExpressions = searchExpressions\n  }\n\n  function initialize() {\n    addDecorator()\n  }\n\n  // Registering expression plugin\n  setExpressionsPlugin(Expressions)\n  initialize$1()\n  initialize()\n\n  return lottie\n})()\n\nexport { lottie as default }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}