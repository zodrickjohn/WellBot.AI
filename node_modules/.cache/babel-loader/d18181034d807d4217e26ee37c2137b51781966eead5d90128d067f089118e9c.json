{"ast":null,"code":"const UnpackDepthRGBAShader = {\n  uniforms: {\n    tDiffuse: {\n      value: null\n    },\n    opacity: {\n      value: 1\n    }\n  },\n  vertexShader: (/* glsl */\n  `\n    varying vec2 vUv;\n\n    void main() {\n\n    \tvUv = uv;\n    \tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n    }\n  `),\n  fragmentShader: (/* glsl */\n  `\n    uniform float opacity;\n\n    uniform sampler2D tDiffuse;\n\n    varying vec2 vUv;\n\n    #include <packing>\n\n    void main() {\n\n    \tfloat depth = 1.0 - unpackRGBAToDepth( texture2D( tDiffuse, vUv ) );\n    \tgl_FragColor = vec4( vec3( depth ), opacity );\n\n    }\n  `)\n};\nexport { UnpackDepthRGBAShader };","map":{"version":3,"names":["UnpackDepthRGBAShader","uniforms","tDiffuse","value","opacity","vertexShader","fragmentShader"],"sources":["C:\\Users\\Asus\\Documents\\HealthDiagnoser-master\\node_modules\\src\\shaders\\UnpackDepthRGBAShader.ts"],"sourcesContent":["/**\n * Unpack RGBA depth shader\n * - show RGBA encoded depth as monochrome color\n */\n\nexport const UnpackDepthRGBAShader = {\n  uniforms: {\n    tDiffuse: { value: null },\n    opacity: { value: 1.0 },\n  },\n\n  vertexShader: /* glsl */ `\n    varying vec2 vUv;\n\n    void main() {\n\n    \tvUv = uv;\n    \tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n    }\n  `,\n\n  fragmentShader: /* glsl */ `\n    uniform float opacity;\n\n    uniform sampler2D tDiffuse;\n\n    varying vec2 vUv;\n\n    #include <packing>\n\n    void main() {\n\n    \tfloat depth = 1.0 - unpackRGBAToDepth( texture2D( tDiffuse, vUv ) );\n    \tgl_FragColor = vec4( vec3( depth ), opacity );\n\n    }\n  `,\n}\n"],"mappings":"AAKO,MAAMA,qBAAA,GAAwB;EACnCC,QAAA,EAAU;IACRC,QAAA,EAAU;MAAEC,KAAA,EAAO;IAAK;IACxBC,OAAA,EAAS;MAAED,KAAA,EAAO;IAAI;EACxB;EAEAE,YAAA;EAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAWzBC,cAAA;EAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}