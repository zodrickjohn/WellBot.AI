{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\HealthDiagnoser-master\\\\src\\\\components\\\\BodyModel.js\",\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useGLTF, Html } from '@react-three/drei';\nimport { Suspense, useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Model({\n  setError,\n  onPartClick,\n  selectedParts\n}) {\n  _s2();\n  const [model, setModel] = useState(null);\n  const [highlightedMeshes, setHighlightedMeshes] = useState(new Set());\n  const originalMaterials = useRef(new Map());\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    const loadModel = async () => {\n      _s();\n      try {\n        console.log('Attempting to fetch model from /assets/models/body-model.glb');\n        const response = await fetch('/assets/models/body-model.glb', {\n          cache: 'no-store'\n        });\n        if (!response.ok) {\n          throw new Error(`Fetch failed: ${response.status} ${response.statusText}`);\n        }\n        console.log('Fetch successful, loading GLTF...');\n        const gltf = await useGLTF('/assets/models/body-model.glb');\n        console.log('Model loaded:', gltf);\n        console.log('Scene children:', gltf.scene.children.map(child => child.name));\n\n        // Apply scale first\n        gltf.scene.scale.set(3, 3, 3); // Adjusted for visibility\n        gltf.scene.rotation.set(0, 0, 0);\n\n        // Center the model after scaling\n        const box = new THREE.Box3().setFromObject(gltf.scene);\n        const center = box.getCenter(new THREE.Vector3());\n        gltf.scene.position.sub(center); // Center at origin\n        console.log('Model bounding box after centering:', box);\n        gltf.scene.traverse(child => {\n          if (child.isMesh) {\n            console.log('Mesh:', child.name, 'Material:', child.material);\n            child.castShadow = true;\n            child.receiveShadow = true;\n            if (!child.material) {\n              child.material = new THREE.MeshStandardMaterial({\n                color: 0xaaaaaa\n              });\n            }\n            // Store original material\n            originalMaterials.current.set(child, child.material.clone());\n          }\n        });\n        setModel(gltf);\n      } catch (err) {\n        console.error('Model loading error:', err);\n        setError(`Failed to load model: ${err.message}`);\n      }\n    };\n    _s(loadModel, \"32KrL5kPiaeJAX40F9P63Xol6XY=\", false, function () {\n      return [useGLTF];\n    });\n    loadModel();\n  }, [setError]);\n  useEffect(() => {\n    if (!model) return;\n    const newHighlightedMeshes = new Set();\n    model.scene.traverse(child => {\n      if (child.isMesh) {\n        const isSelected = selectedParts.includes(child.name);\n        if (isSelected) {\n          child.material = new THREE.MeshStandardMaterial({\n            color: 0x006400\n          });\n          newHighlightedMeshes.add(child);\n        } else {\n          const originalMaterial = originalMaterials.current.get(child);\n          if (originalMaterial) {\n            child.material = originalMaterial;\n          }\n        }\n      }\n    });\n    setHighlightedMeshes(newHighlightedMeshes);\n  }, [selectedParts, model]);\n  const handleMeshClick = e => {\n    e.stopPropagation();\n    const mesh = e.object;\n    if (mesh.isMesh && mesh.name) {\n      console.log('Part clicked:', mesh.name);\n      onPartClick(mesh.name);\n    }\n  };\n  if (!model) {\n    console.log('Rendering fallback cube...');\n    return /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n        args: [0.5, 0.5, 0.5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: /*#__PURE__*/_jsxDEV(\"primitive\", {\n      object: model.scene,\n      onClick: handleMeshClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s2(Model, \"fRtRwgiUOGv5MrSXJt51uTzhMLg=\");\n_c = Model;\nexport default function BodyModel({\n  onPartClick,\n  selectedParts\n}) {\n  _s3();\n  const [error, setError] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(Html, {\n      center: true,\n      children: \"Loading model...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }, this),\n    children: error ? /*#__PURE__*/_jsxDEV(Html, {\n      center: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red',\n          maxWidth: '400px',\n          background: 'white',\n          padding: '20px',\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Error Loading Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Check:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"File exists at public/assets/models/body-model.glb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"File is a valid GLB format (binary, not UTF-8)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Server is running on localhost:3000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No network issues (e.g., firewall, VPN)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: 'File size is reasonable (e.g., <10MB)'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Model, {\n      setError: setError,\n      onPartClick: onPartClick,\n      selectedParts: selectedParts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s3(BodyModel, \"A8i/78Fx3FIozbyR2zwnz0NK35o=\");\n_c2 = BodyModel;\nuseGLTF.preload('/assets/models/body-model.glb');\nvar _c, _c2;\n$RefreshReg$(_c, \"Model\");\n$RefreshReg$(_c2, \"BodyModel\");","map":{"version":3,"names":["useGLTF","Html","Suspense","useState","useEffect","useRef","THREE","jsxDEV","_jsxDEV","Model","setError","onPartClick","selectedParts","_s2","model","setModel","highlightedMeshes","setHighlightedMeshes","Set","originalMaterials","Map","_s","$RefreshSig$","loadModel","console","log","response","fetch","cache","ok","Error","status","statusText","gltf","scene","children","map","child","name","scale","set","rotation","box","Box3","setFromObject","center","getCenter","Vector3","position","sub","traverse","isMesh","material","castShadow","receiveShadow","MeshStandardMaterial","color","current","clone","err","error","message","newHighlightedMeshes","isSelected","includes","add","originalMaterial","get","handleMeshClick","e","stopPropagation","mesh","object","args","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","BodyModel","_s3","fallback","style","maxWidth","background","padding","borderRadius","_c2","preload","$RefreshReg$"],"sources":["C:/Users/Asus/Documents/HealthDiagnoser-master/src/components/BodyModel.js"],"sourcesContent":["import { useGLTF, Html } from '@react-three/drei';\nimport { Suspense, useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nfunction Model({ setError, onPartClick, selectedParts }) {\n  const [model, setModel] = useState(null);\n  const [highlightedMeshes, setHighlightedMeshes] = useState(new Set());\n  const originalMaterials = useRef(new Map());\n\n  useEffect(() => {\n    const loadModel = async () => {\n      try {\n        console.log('Attempting to fetch model from /assets/models/body-model.glb');\n        const response = await fetch('/assets/models/body-model.glb', {\n          cache: 'no-store',\n        });\n        if (!response.ok) {\n          throw new Error(`Fetch failed: ${response.status} ${response.statusText}`);\n        }\n        console.log('Fetch successful, loading GLTF...');\n        const gltf = await useGLTF('/assets/models/body-model.glb');\n        console.log('Model loaded:', gltf);\n        console.log('Scene children:', gltf.scene.children.map(child => child.name));\n\n        // Apply scale first\n        gltf.scene.scale.set(3, 3, 3); // Adjusted for visibility\n        gltf.scene.rotation.set(0, 0, 0);\n\n        // Center the model after scaling\n        const box = new THREE.Box3().setFromObject(gltf.scene);\n        const center = box.getCenter(new THREE.Vector3());\n        gltf.scene.position.sub(center); // Center at origin\n        console.log('Model bounding box after centering:', box);\n\n        gltf.scene.traverse((child) => {\n          if (child.isMesh) {\n            console.log('Mesh:', child.name, 'Material:', child.material);\n            child.castShadow = true;\n            child.receiveShadow = true;\n            if (!child.material) {\n              child.material = new THREE.MeshStandardMaterial({ color: 0xaaaaaa });\n            }\n            // Store original material\n            originalMaterials.current.set(child, child.material.clone());\n          }\n        });\n        setModel(gltf);\n      } catch (err) {\n        console.error('Model loading error:', err);\n        setError(`Failed to load model: ${err.message}`);\n      }\n    };\n    loadModel();\n  }, [setError]);\n\n  useEffect(() => {\n    if (!model) return;\n\n    const newHighlightedMeshes = new Set();\n    model.scene.traverse((child) => {\n      if (child.isMesh) {\n        const isSelected = selectedParts.includes(child.name);\n        if (isSelected) {\n          child.material = new THREE.MeshStandardMaterial({ color: 0x006400 });\n          newHighlightedMeshes.add(child);\n        } else {\n          const originalMaterial = originalMaterials.current.get(child);\n          if (originalMaterial) {\n            child.material = originalMaterial;\n          }\n        }\n      }\n    });\n    setHighlightedMeshes(newHighlightedMeshes);\n  }, [selectedParts, model]);\n\n  const handleMeshClick = (e) => {\n    e.stopPropagation();\n    const mesh = e.object;\n    if (mesh.isMesh && mesh.name) {\n      console.log('Part clicked:', mesh.name);\n      onPartClick(mesh.name);\n    }\n  };\n\n  if (!model) {\n    console.log('Rendering fallback cube...');\n    return (\n      <mesh position={[0, 0, 0]}>\n        <boxGeometry args={[0.5, 0.5, 0.5]} />\n        <meshStandardMaterial color=\"red\" />\n      </mesh>\n    );\n  }\n\n  return (\n    <group>\n      <primitive\n        object={model.scene}\n        onClick={handleMeshClick}\n      />\n    </group>\n  );\n}\n\nexport default function BodyModel({ onPartClick, selectedParts }) {\n  const [error, setError] = useState(null);\n\n  return (\n    <Suspense fallback={<Html center>Loading model...</Html>}>\n      {error ? (\n        <Html center>\n          <div style={{ color: 'red', maxWidth: '400px', background: 'white', padding: '20px', borderRadius: '8px' }}>\n            <h3>Error Loading Model</h3>\n            <p>{error}</p>\n            <p>Check:</p>\n            <ol>\n              <li>File exists at public/assets/models/body-model.glb</li>\n              <li>File is a valid GLB format (binary, not UTF-8)</li>\n              <li>Server is running on localhost:3000</li>\n              <li>No network issues (e.g., firewall, VPN)</li>\n              <li>{'File size is reasonable (e.g., <10MB)'}</li>\n            </ol>\n          </div>\n        </Html>\n      ) : (\n        <Model setError={setError} onPartClick={onPartClick} selectedParts={selectedParts} />\n      )}\n    </Suspense>\n  );\n}\n\nuseGLTF.preload('/assets/models/body-model.glb');"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}